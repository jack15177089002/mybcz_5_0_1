//package com.baicizhan.online.bs_users;
//
////import com.baicizhan.online.structs.BELogicException;
////import com.baicizhan.online.structs.BESystemException;
//import com.p052e.p053a.p054a.JceStruct;
//import java.io.IOException;
//import java.io.InputStream;
//import java.io.ObjectInputStream;
//import java.io.ObjectOutputStream;
//import java.io.OutputStream;
//import java.io.Serializable;
//import java.util.ArrayList;
//import java.util.BitSet;
//import java.util.Collections;
//import java.util.EnumMap;
//import java.util.EnumSet;
//import java.util.HashMap;
//import java.util.Iterator;
//import java.util.List;
//import java.util.Map;
//import java.util.Map.Entry;
//import org.p100a.p101a.AsyncProcessFunction;
//import org.p100a.p101a.C2090b;
//import org.p100a.p101a.C2116f;
//import org.p100a.p101a.C2121h;
//import org.p100a.p101a.C2123l;
//import org.p100a.p101a.C2124m;
//import org.p100a.p101a.ProcessFunction;
//import org.p100a.p101a.TApplicationException;
//import org.p100a.p101a.TBaseAsyncProcessor;
//import org.p100a.p101a.TBaseProcessor;
//import org.p100a.p101a.TServiceClient;
//import org.p100a.p101a.TServiceClientFactory;
//import org.p100a.p101a.p102a.AsyncMethodCallback;
//import org.p100a.p101a.p102a.C2089h;
//import org.p100a.p101a.p102a.TAsyncClient;
//import org.p100a.p101a.p102a.TAsyncClientManager;
//import org.p100a.p101a.p102a.TAsyncMethodCall;
//import org.p100a.p101a.p103b.C2091a;
//import org.p100a.p101a.p103b.C2092b;
//import org.p100a.p101a.p103b.C2093c;
//import org.p100a.p101a.p103b.C2094d;
//import org.p100a.p101a.p103b.C2095e;
//import org.p100a.p101a.p104c.C2096a;
//import org.p100a.p101a.p104c.C2097b;
//import org.p100a.p101a.p104c.C2098c;
//import org.p100a.p101a.p104c.C2099d;
//import org.p100a.p101a.p104c.C2100f;
//import org.p100a.p101a.p104c.C2101g;
//import org.p100a.p101a.p104c.C2102h;
//import org.p100a.p101a.p104c.C2103i;
//import org.p100a.p101a.p104c.C2105k;
//import org.p100a.p101a.p104c.C2106l;
//import org.p100a.p101a.p104c.TMessage;
//import org.p100a.p101a.p105d.C2108a;
//import org.p100a.p101a.p105d.C2109b;
//import org.p100a.p101a.p105d.C2110c;
//import org.p100a.p101a.p105d.C2111d;
//import org.p100a.p101a.p106e.C2113c;
//import org.p100a.p101a.p107f.C2117b;
//import org.p100a.p101a.p107f.C2118d;
//import org.p100a.p101a.p107f.TNonblockingTransport;
//import org.slf4j.Logger;
//import org.slf4j.LoggerFactory;
//
//public class BSUsers {
//
//    /* renamed from: com.baicizhan.online.bs_users.BSUsers$1 */
////    /* synthetic */ class C12931 {
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$check_infos_args$_Fields */
////        static final /* synthetic */ int[] f2434x58b8d764 = new int[add_word_friend_feedback_args._Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_ad_custom_menu_args$_Fields */
////        static final /* synthetic */ int[] f2450xf03b9694 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_ads_list_args$_Fields */
////        static final /* synthetic */ int[] f2452x19bd1c58 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_all_books_basic_info_args$_Fields */
////        static final /* synthetic */ int[] f2454x9e4d1613 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_all_notify_msgs_args$_Fields */
////        static final /* synthetic */ int[] f2456x58c45c11 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_all_selected_books_info_args$_Fields */
////        static final /* synthetic */ int[] f2458xfc791072 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_learned_words_list_args$_Fields */
////        static final /* synthetic */ int[] f2464x4d82c975 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_miscs_args$_Fields */
////        static final /* synthetic */ int[] f2468x21111a94 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_notify_info_args$_Fields */
////        static final /* synthetic */ int[] f2470xbfddea97 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_shopping_ad_args$_Fields */
////        static final /* synthetic */ int[] f2472xc3a49fe1 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_show_ads_args$_Fields */
////        static final /* synthetic */ int[] f2474x87212c57 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_top_sys_notifications_args$_Fields */
////        static final /* synthetic */ int[] f2478x7f4da32f = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$get_url_args$_Fields */
////        static final /* synthetic */ int[] f2480xb2ed05ec = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$have_a_try_args$_Fields */
////        static final /* synthetic */ int[] f2490xea1f9c28 = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$redo_word_friend_args$_Fields */
////        static final /* synthetic */ int[] f2500xc944dfbc = new int[_Fields.values().length];
////
////        /* renamed from: $SwitchMap$com$baicizhan$online$bs_users$BSUsers$user_basic_info_args$_Fields */
////        static final /* synthetic */ int[] f2528xc546c6ff = new int[_Fields.values().length];
////
////        static {
////            f2473xa27aeb21 = new int[_Fields.values().length];
////            try {
////                f2473xa27aeb21[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e) {
////            }
////            try {
////                f2473xa27aeb21[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e2) {
////            }
////            f2481xe141fa6c = new int[_Fields.values().length];
////            try {
////                f2481xe141fa6c[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e3) {
////            }
////            try {
////                f2481xe141fa6c[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e4) {
////            }
////            f2447xaa98c3db = new int[_Fields.values().length];
////            try {
////                f2447xaa98c3db[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e5) {
////            }
////            try {
////                f2447xaa98c3db[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e6) {
////            }
////            f2446xdcf55f1b = new int[_Fields.values().length];
////            try {
////                f2446xdcf55f1b[_Fields.FINISH_PLAN_INFO.ordinal()] = 1;
////            } catch (NoSuchFieldError e7) {
////            }
////            f2467x2218a2a7 = new int[_Fields.values().length];
////            try {
////                f2467x2218a2a7[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e8) {
////            }
////            try {
////                f2467x2218a2a7[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e9) {
////            }
////            try {
////                f2467x2218a2a7[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e10) {
////            }
////            f2466x203680e7 = new int[_Fields.values().length];
////            try {
////                f2466x203680e7[_Fields.NOTIFICATION_IDS.ordinal()] = 1;
////            } catch (NoSuchFieldError e11) {
////            }
////            f2479x17f052ef = new int[_Fields.values().length];
////            try {
////                f2479x17f052ef[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e12) {
////            }
////            try {
////                f2479x17f052ef[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e13) {
////            }
////            try {
////                f2479x17f052ef[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e14) {
////            }
////            f2477x7ec4fec5 = new int[_Fields.values().length];
////            try {
////                f2477x7ec4fec5[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e15) {
////            }
////            try {
////                f2477x7ec4fec5[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e16) {
////            }
////            try {
////                f2477x7ec4fec5[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e17) {
////            }
////            f2476x25e74c85 = new int[_Fields.values().length];
////            try {
////                f2476x25e74c85[_Fields.LAST_TIME.ordinal()] = 1;
////            } catch (NoSuchFieldError e18) {
////            }
////            f2531x61624412 = new int[_Fields.values().length];
////            try {
////                f2531x61624412[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e19) {
////            }
////            try {
////                f2531x61624412[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e20) {
////            }
////            f2530x9dbf8112 = new int[_Fields.values().length];
////            try {
////                f2530x9dbf8112[_Fields.OPERATION_LOGS.ordinal()] = 1;
////            } catch (NoSuchFieldError e21) {
////            }
////            f2495x7f5dc73 = new int[_Fields.values().length];
////            try {
////                f2495x7f5dc73[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e22) {
////            }
////            try {
////                f2495x7f5dc73[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e23) {
////            }
////            try {
////                f2495x7f5dc73[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e24) {
////            }
////            f2494xef6fbdb3 = new int[_Fields.values().length];
////            try {
////                f2494xef6fbdb3[_Fields.BOOK_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e25) {
////            }
////            f2525xcfc887fd = new int[_Fields.values().length];
////            try {
////                f2525xcfc887fd[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e26) {
////            }
////            try {
////                f2525xcfc887fd[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e27) {
////            }
////            try {
////                f2525xcfc887fd[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e28) {
////            }
////            f2524x762bc3bd = new int[_Fields.values().length];
////            try {
////                f2524x762bc3bd[_Fields.MISCS.ordinal()] = 1;
////            } catch (NoSuchFieldError e29) {
////            }
////            f2469x56b38514 = new int[_Fields.values().length];
////            try {
////                f2469x56b38514[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e30) {
////            }
////            try {
////                f2469x56b38514[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e31) {
////            }
////            try {
////                f2469x56b38514[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e32) {
////            }
////            f2445x16fd2f42 = new int[_Fields.values().length];
////            try {
////                f2445x16fd2f42[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e33) {
////            }
////            try {
////                f2445x16fd2f42[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e34) {
////            }
////            try {
////                f2445x16fd2f42[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e35) {
////            }
////            f2444x927b7842 = new int[_Fields.values().length];
////            try {
////                f2444x927b7842[_Fields.BOOK_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e36) {
////            }
////            try {
////                f2444x927b7842[_Fields.STAT_LOGS.ordinal()] = 2;
////            } catch (NoSuchFieldError e37) {
////            }
////            f2451x52f0114 = new int[_Fields.values().length];
////            try {
////                f2451x52f0114[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e38) {
////            }
////            try {
////                f2451x52f0114[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e39) {
////            }
////            try {
////                f2451x52f0114[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e40) {
////            }
////            f2461x7d725001 = new int[_Fields.values().length];
////            try {
////                f2461x7d725001[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e41) {
////            }
////            try {
////                f2461x7d725001[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e42) {
////            }
////            try {
////                f2461x7d725001[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e43) {
////            }
////            f2460xc4efbcc1 = new int[_Fields.values().length];
////            try {
////                f2460xc4efbcc1[_Fields.BOOK_INFO.ordinal()] = 1;
////            } catch (NoSuchFieldError e44) {
////            }
////            f2459xf7f57b72 = new int[_Fields.values().length];
////            try {
////                f2459xf7f57b72[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e45) {
////            }
////            try {
////                f2459xf7f57b72[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e46) {
////            }
////            try {
////                f2459xf7f57b72[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e47) {
////            }
////            f2455x74de9cd3 = new int[_Fields.values().length];
////            try {
////                f2455x74de9cd3[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e48) {
////            }
////            try {
////                f2455x74de9cd3[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e49) {
////            }
////            try {
////                f2455x74de9cd3[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e50) {
////            }
////            f2429x599d479f = new int[_Fields.values().length];
////            try {
////                f2429x599d479f[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e51) {
////            }
////            try {
////                f2429x599d479f[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e52) {
////            }
////            try {
////                f2429x599d479f[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e53) {
////            }
////            f2428xe81003df = new int[_Fields.values().length];
////            try {
////                f2428xe81003df[_Fields.TOPIC_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e54) {
////            }
////            try {
////                f2428xe81003df[_Fields.FEEDBACK.ordinal()] = 2;
////            } catch (NoSuchFieldError e55) {
////            }
////            f2509x82b99530 = new int[_Fields.values().length];
////            try {
////                f2509x82b99530[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e56) {
////            }
////            try {
////                f2509x82b99530[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e57) {
////            }
////            try {
////                f2509x82b99530[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e58) {
////            }
////            f2508x105481b0 = new int[_Fields.values().length];
////            try {
////                f2508x105481b0[_Fields.USER_EXT_INFO.ordinal()] = 1;
////            } catch (NoSuchFieldError e59) {
////            }
////            f2511xd2a42c0e = new int[_Fields.values().length];
////            try {
////                f2511xd2a42c0e[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e60) {
////            }
////            try {
////                f2511xd2a42c0e[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e61) {
////            }
////            try {
////                f2511xd2a42c0e[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e62) {
////            }
////            f2510x9513380e = new int[_Fields.values().length];
////            try {
////                f2510x9513380e[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e63) {
////            }
////            try {
////                f2510x9513380e[_Fields.DONE_TOPIC_IDS.ordinal()] = 2;
////            } catch (NoSuchFieldError e64) {
////            }
////            f2501xc10aa03c = new int[_Fields.values().length];
////            try {
////                f2501xc10aa03c[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e65) {
////            }
////            try {
////                f2501xc10aa03c[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e66) {
////            }
////            try {
////                f2501xc10aa03c[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e67) {
////            }
////            f2485x8853d8ae = new int[_Fields.values().length];
////            try {
////                f2485x8853d8ae[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e68) {
////            }
////            try {
////                f2485x8853d8ae[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e69) {
////            }
////            try {
////                f2485x8853d8ae[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e70) {
////            }
////            f2484xbe058cae = new int[_Fields.values().length];
////            try {
////                f2484xbe058cae[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e71) {
////            }
////            f2475x79063217 = new int[_Fields.values().length];
////            try {
////                f2475x79063217[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e72) {
////            }
////            try {
////                f2475x79063217[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e73) {
////            }
////            try {
////                f2475x79063217[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e74) {
////            }
////            f2453xd46625d8 = new int[_Fields.values().length];
////            try {
////                f2453xd46625d8[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e75) {
////            }
////            try {
////                f2453xd46625d8[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e76) {
////            }
////            try {
////                f2453xd46625d8[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e77) {
////            }
////            f2483xefccdb38 = new int[_Fields.values().length];
////            try {
////                f2483xefccdb38[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e78) {
////            }
////            try {
////                f2483xefccdb38[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e79) {
////            }
////            try {
////                f2483xefccdb38[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e80) {
////            }
////            f2482x7811a9b8 = new int[_Fields.values().length];
////            try {
////                f2482x7811a9b8[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e81) {
////            }
////            f2521x7392fc41 = new int[_Fields.values().length];
////            try {
////                f2521x7392fc41[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e82) {
////            }
////            try {
////                f2521x7392fc41[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e83) {
////            }
////            try {
////                f2521x7392fc41[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e84) {
////            }
////            f2520xf7ce7901 = new int[_Fields.values().length];
////            try {
////                f2520xf7ce7901[_Fields.USER_MEDIA_RECORDS.ordinal()] = 1;
////            } catch (NoSuchFieldError e85) {
////            }
////            f2439xac69a12e = new int[_Fields.values().length];
////            try {
////                f2439xac69a12e[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e86) {
////            }
////            try {
////                f2439xac69a12e[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e87) {
////            }
////            try {
////                f2439xac69a12e[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e88) {
////            }
////            f2438x25f3752e = new int[_Fields.values().length];
////            try {
////                f2438x25f3752e[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e89) {
////            }
////            f2505xd3f290e = new int[_Fields.values().length];
////            try {
////                f2505xd3f290e[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e90) {
////            }
////            try {
////                f2505xd3f290e[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e91) {
////            }
////            try {
////                f2505xd3f290e[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e92) {
////            }
////            f2504xc449750e = new int[_Fields.values().length];
////            try {
////                f2504xc449750e[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e93) {
////            }
////            f2437x74bfa2e1 = new int[_Fields.values().length];
////            try {
////                f2437x74bfa2e1[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e94) {
////            }
////            try {
////                f2437x74bfa2e1[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e95) {
////            }
////            try {
////                f2437x74bfa2e1[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e96) {
////            }
////            f2436x3b3447a1 = new int[_Fields.values().length];
////            try {
////                f2436x3b3447a1[_Fields.DAKA_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e97) {
////            }
////            f2463x6d47c9c1 = new int[_Fields.values().length];
////            try {
////                f2463x6d47c9c1[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e98) {
////            }
////            try {
////                f2463x6d47c9c1[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e99) {
////            }
////            try {
////                f2463x6d47c9c1[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e100) {
////            }
////            f2462xab58a681 = new int[_Fields.values().length];
////            try {
////                f2462xab58a681[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e101) {
////            }
////            f2443xf0967f3a = new int[_Fields.values().length];
////            try {
////                f2443xf0967f3a[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e102) {
////            }
////            f2442x3f98663a = new int[_Fields.values().length];
////            try {
////                f2442x3f98663a[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e103) {
////            }
////            try {
////                f2442x3f98663a[_Fields.ARR_FINISHED_PLAN_DATE.ordinal()] = 2;
////            } catch (NoSuchFieldError e104) {
////            }
////            try {
////                f2442x3f98663a[_Fields.DAKA_DAYS.ordinal()] = 3;
////            } catch (NoSuchFieldError e105) {
////            }
////            try {
////                f2442x3f98663a[_Fields.TODAY_NEW_LEARNED_COUNT.ordinal()] = 4;
////            } catch (NoSuchFieldError e106) {
////            }
////            f2441x8e686f8b = new int[_Fields.values().length];
////            try {
////                f2441x8e686f8b[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e107) {
////            }
////            try {
////                f2441x8e686f8b[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e108) {
////            }
////            try {
////                f2441x8e686f8b[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e109) {
////            }
////            f2440xaf1c36cb = new int[_Fields.values().length];
////            try {
////                f2440xaf1c36cb[_Fields.DAKA_DAYS.ordinal()] = 1;
////            } catch (NoSuchFieldError e110) {
////            }
////            try {
////                f2440xaf1c36cb[_Fields.TODAY_NEW_LEARNED_COUNT.ordinal()] = 2;
////            } catch (NoSuchFieldError e111) {
////            }
////            f2489xbaf3676c = new int[_Fields.values().length];
////            try {
////                f2489xbaf3676c[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e112) {
////            }
////            try {
////                f2489xbaf3676c[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e113) {
////            }
////            try {
////                f2489xbaf3676c[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e114) {
////            }
////            f2488x3415b2ec = new int[_Fields.values().length];
////            try {
////                f2488x3415b2ec[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e115) {
////            }
////            f2487x7d8c35e4 = new int[_Fields.values().length];
////            try {
////                f2487x7d8c35e4[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e116) {
////            }
////            try {
////                f2487x7d8c35e4[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e117) {
////            }
////            try {
////                f2487x7d8c35e4[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e118) {
////            }
////            f2486x88ffbf64 = new int[_Fields.values().length];
////            try {
////                f2486x88ffbf64[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e119) {
////            }
////            f2457x6e9c5b51 = new int[_Fields.values().length];
////            try {
////                f2457x6e9c5b51[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e120) {
////            }
////            try {
////                f2457x6e9c5b51[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e121) {
////            }
////            try {
////                f2457x6e9c5b51[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e122) {
////            }
////            f2519x7da46bcb = new int[_Fields.values().length];
////            try {
////                f2519x7da46bcb[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e123) {
////            }
////            try {
////                f2519x7da46bcb[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e124) {
////            }
////            try {
////                f2519x7da46bcb[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e125) {
////            }
////            f2518x9aa430b = new int[_Fields.values().length];
////            try {
////                f2518x9aa430b[_Fields.NOTIFY_SETTING.ordinal()] = 1;
////            } catch (NoSuchFieldError e126) {
////            }
////            f2471x758c6057 = new int[_Fields.values().length];
////            try {
////                f2471x758c6057[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e127) {
////            }
////            try {
////                f2471x758c6057[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e128) {
////            }
////            try {
////                f2471x758c6057[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e129) {
////            }
////            f2465x2d74ffb5 = new int[_Fields.values().length];
////            try {
////                f2465x2d74ffb5[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e130) {
////            }
////            try {
////                f2465x2d74ffb5[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e131) {
////            }
////            try {
////                f2465x2d74ffb5[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e132) {
////            }
////            f2515xa6dfcb7f = new int[_Fields.values().length];
////            try {
////                f2515xa6dfcb7f[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e133) {
////            }
////            try {
////                f2515xa6dfcb7f[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e134) {
////            }
////            try {
////                f2515xa6dfcb7f[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e135) {
////            }
////            f2514x61e1ffbf = new int[_Fields.values().length];
////            try {
////                f2514x61e1ffbf[_Fields.BOOK_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e136) {
////            }
////            try {
////                f2514x61e1ffbf[_Fields.END_TIME.ordinal()] = 2;
////            } catch (NoSuchFieldError e137) {
////            }
////            f2513x4d731166 = new int[_Fields.values().length];
////            try {
////                f2513x4d731166[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e138) {
////            }
////            try {
////                f2513x4d731166[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e139) {
////            }
////            try {
////                f2513x4d731166[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e140) {
////            }
////            f2512xc8b9366 = new int[_Fields.values().length];
////            try {
////                f2512xc8b9366[_Fields.BOOK_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e141) {
////            }
////            try {
////                f2512xc8b9366[_Fields.END_TIME.ordinal()] = 2;
////            } catch (NoSuchFieldError e142) {
////            }
////            f2517x78ee2240 = new int[_Fields.values().length];
////            try {
////                f2517x78ee2240[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e143) {
////            }
////            try {
////                f2517x78ee2240[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e144) {
////            }
////            try {
////                f2517x78ee2240[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e145) {
////            }
////            f2516xf96912c0 = new int[_Fields.values().length];
////            try {
////                f2516xf96912c0[_Fields.WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e146) {
////            }
////            try {
////                f2516xf96912c0[_Fields.END_TIME.ordinal()] = 2;
////            } catch (NoSuchFieldError e147) {
////            }
////            f2523x600ba8bd = new int[_Fields.values().length];
////            try {
////                f2523x600ba8bd[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e148) {
////            }
////            try {
////                f2523x600ba8bd[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e149) {
////            }
////            try {
////                f2523x600ba8bd[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e150) {
////            }
////            f2522xba40147d = new int[_Fields.values().length];
////            try {
////                f2522xba40147d[_Fields.LAST_SYNC_AT.ordinal()] = 1;
////            } catch (NoSuchFieldError e151) {
////            }
////            try {
////                f2522xba40147d[_Fields.ARR_DONE_RECORDS.ordinal()] = 2;
////            } catch (NoSuchFieldError e152) {
////            }
////            try {
////                f2522xba40147d[_Fields.CURRENT_WORD_LEVEL_ID.ordinal()] = 3;
////            } catch (NoSuchFieldError e153) {
////            }
////            try {
////                f2522xba40147d[_Fields.IS_TODAY_COMPLETED.ordinal()] = 4;
////            } catch (NoSuchFieldError e154) {
////            }
////            f2527x77915a1b = new int[_Fields.values().length];
////            try {
////                f2527x77915a1b[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e155) {
////            }
////            try {
////                f2527x77915a1b[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e156) {
////            }
////            try {
////                f2527x77915a1b[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e157) {
////            }
////            f2526xaf9e855b = new int[_Fields.values().length];
////            try {
////                f2526xaf9e855b[_Fields.TITLE_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e158) {
////            }
////            try {
////                f2526xaf9e855b[_Fields.NICK_NAME.ordinal()] = 2;
////            } catch (NoSuchFieldError e159) {
////            }
////            f2507x1c72bffe = new int[_Fields.values().length];
////            try {
////                f2507x1c72bffe[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e160) {
////            }
////            try {
////                f2507x1c72bffe[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e161) {
////            }
////            f2506xa45607fe = new int[_Fields.values().length];
////            try {
////                f2506xa45607fe[_Fields.CURRENT_WORD_LEVEL_ID.ordinal()] = 1;
////            } catch (NoSuchFieldError e162) {
////            }
////            f2433x43cce8fe = new int[_Fields.values().length];
////            try {
////                f2433x43cce8fe[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e163) {
////            }
////            try {
////                f2433x43cce8fe[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e164) {
////            }
////            f2432xfe2670fe = new int[_Fields.values().length];
////            try {
////                f2432xfe2670fe[_Fields.ONLY_SELECTED.ordinal()] = 1;
////            } catch (NoSuchFieldError e165) {
////            }
////            f2529xc42fc2bf = new int[_Fields.values().length];
////            try {
////                f2529xc42fc2bf[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e166) {
////            }
////            try {
////                f2529xc42fc2bf[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e167) {
////            }
////            f2497x42bd9b2 = new int[_Fields.values().length];
////            try {
////                f2497x42bd9b2[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e168) {
////            }
////            try {
////                f2497x42bd9b2[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e169) {
////            }
////            try {
////                f2497x42bd9b2[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e170) {
////            }
////            f2496xd331feb2 = new int[_Fields.values().length];
////            try {
////                f2496xd331feb2[_Fields.EMAIL.ordinal()] = 1;
////            } catch (NoSuchFieldError e171) {
////            }
////            try {
////                f2496xd331feb2[_Fields.OLD_PASSWORD.ordinal()] = 2;
////            } catch (NoSuchFieldError e172) {
////            }
////            try {
////                f2496xd331feb2[_Fields.NEW_PASSWORD.ordinal()] = 3;
////            } catch (NoSuchFieldError e173) {
////            }
////            f2449x217499e5 = new int[_Fields.values().length];
////            try {
////                f2449x217499e5[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e174) {
////            }
////            try {
////                f2449x217499e5[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e175) {
////            }
////            try {
////                f2449x217499e5[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e176) {
////            }
////            f2448xe0032fa5 = new int[_Fields.values().length];
////            try {
////                f2448xe0032fa5[_Fields.EMAIL.ordinal()] = 1;
////            } catch (NoSuchFieldError e177) {
////            }
////            f2499xbf300678 = new int[_Fields.values().length];
////            try {
////                f2499xbf300678[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e178) {
////            }
////            try {
////                f2499xbf300678[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e179) {
////            }
////            try {
////                f2499xbf300678[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e180) {
////            }
////            f2498xa0c6a4f8 = new int[_Fields.values().length];
////            try {
////                f2498xa0c6a4f8[_Fields.PROVIDER.ordinal()] = 1;
////            } catch (NoSuchFieldError e181) {
////            }
////            try {
////                f2498xa0c6a4f8[_Fields.USERINFO.ordinal()] = 2;
////            } catch (NoSuchFieldError e182) {
////            }
////            try {
////                f2498xa0c6a4f8[_Fields.IS_TRY_USER.ordinal()] = 3;
////            } catch (NoSuchFieldError e183) {
////            }
////            f2431x63c55901 = new int[_Fields.values().length];
////            try {
////                f2431x63c55901[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e184) {
////            }
////            try {
////                f2431x63c55901[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e185) {
////            }
////            try {
////                f2431x63c55901[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e186) {
////            }
////            f2430x67105c1 = new int[_Fields.values().length];
////            try {
////                f2430x67105c1[_Fields.EMAIL.ordinal()] = 1;
////            } catch (NoSuchFieldError e187) {
////            }
////            try {
////                f2430x67105c1[_Fields.PASSWORD.ordinal()] = 2;
////            } catch (NoSuchFieldError e188) {
////            }
////            f2491x1627f1a8 = new int[_Fields.values().length];
////            try {
////                f2491x1627f1a8[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e189) {
////            }
////            try {
////                f2491x1627f1a8[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e190) {
////            }
////            f2503x96b7bfeb = new int[_Fields.values().length];
////            try {
////                f2503x96b7bfeb[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e191) {
////            }
////            try {
////                f2503x96b7bfeb[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e192) {
////            }
////            try {
////                f2503x96b7bfeb[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e193) {
////            }
////            f2502xc1c41f2b = new int[_Fields.values().length];
////            try {
////                f2502xc1c41f2b[_Fields.EMAIL.ordinal()] = 1;
////            } catch (NoSuchFieldError e194) {
////            }
////            try {
////                f2502xc1c41f2b[_Fields.PASSWORD.ordinal()] = 2;
////            } catch (NoSuchFieldError e195) {
////            }
////            f2493x1bd68229 = new int[_Fields.values().length];
////            try {
////                f2493x1bd68229[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e196) {
////            }
////            try {
////                f2493x1bd68229[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e197) {
////            }
////            try {
////                f2493x1bd68229[_Fields.LOGIC_EXCEPTION.ordinal()] = 3;
////            } catch (NoSuchFieldError e198) {
////            }
////            f2492x9f8a58e9 = new int[_Fields.values().length];
////            try {
////                f2492x9f8a58e9[_Fields.EMAIL.ordinal()] = 1;
////            } catch (NoSuchFieldError e199) {
////            }
////            try {
////                f2492x9f8a58e9[_Fields.PASSWORD.ordinal()] = 2;
////            } catch (NoSuchFieldError e200) {
////            }
////            f2435x435f4de4 = new int[_Fields.values().length];
////            try {
////                f2435x435f4de4[_Fields.SUCCESS.ordinal()] = 1;
////            } catch (NoSuchFieldError e201) {
////            }
////            try {
////                f2435x435f4de4[_Fields.SYS_EXCEPTION.ordinal()] = 2;
////            } catch (NoSuchFieldError e202) {
////            }
////        }
////    }
////
////    public class AsyncClient extends TAsyncClient implements AsyncIface {
////
////        public class Factory {
////            private TAsyncClientManager clientManager;
////            private C2102h protocolFactory;
////
////            public Factory(TAsyncClientManager cVar, C2102h hVar) {
////                this.clientManager = cVar;
////                this.protocolFactory = hVar;
////            }
////
////            public AsyncClient getAsyncClient(TNonblockingTransport eVar) {
////                return new AsyncClient(this.protocolFactory, this.clientManager, eVar);
////            }
////        }
////
////        public class add_word_friend_feedback_call extends TAsyncMethodCall {
////            private String feedback;
////            private int topic_id;
////
////            public add_word_friend_feedback_call(int i, String str, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.topic_id = i;
////                this.feedback = str;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("add_word_friend_feedback", 1, 0));
////                add_word_friend_feedback_args add_word_friend_feedback_args = new add_word_friend_feedback_args();
////                add_word_friend_feedback_args.setTopic_id(this.topic_id);
////                add_word_friend_feedback_args.setFeedback(this.feedback);
////                add_word_friend_feedback_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_add_word_friend_feedback();
////            }
////        }
////
////        public class bind_try_user_call extends TAsyncMethodCall {
////            private String email;
////            private String password;
////
////            public bind_try_user_call(String str, String str2, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.email = str;
////                this.password = str2;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("bind_try_user", 1, 0));
////                bind_try_user_args bind_try_user_args = new bind_try_user_args();
////                bind_try_user_args.setEmail(this.email);
////                bind_try_user_args.setPassword(this.password);
////                bind_try_user_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_bind_try_user();
////            }
////        }
////
////        public class book_list_call extends TAsyncMethodCall {
////            private boolean only_selected;
////
////            public book_list_call(boolean z, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.only_selected = z;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("book_list", 1, 0));
////                book_list_args book_list_args = new book_list_args();
////                book_list_args.setOnly_selected(this.only_selected);
////                book_list_args.write(fVar);
////            }
////
////            public BBBookList getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_book_list();
////            }
////        }
////
////        public class check_infos_call extends TAsyncMethodCall {
////            public check_infos_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("check_infos", 1, 0));
////                new check_infos_args().write(fVar);
////            }
////
////            public BBCheckInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_check_infos();
////            }
////        }
////
////        public class daka_success_notify_call extends TAsyncMethodCall {
////            private int daka_id;
////
////            public daka_success_notify_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.daka_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("daka_success_notify", 1, 0));
////                daka_success_notify_args daka_success_notify_args = new daka_success_notify_args();
////                daka_success_notify_args.setDaka_id(this.daka_id);
////                daka_success_notify_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_daka_success_notify();
////            }
////        }
////
////        public class delete_done_score_data_call extends TAsyncMethodCall {
////            private int word_level_id;
////
////            public delete_done_score_data_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("delete_done_score_data", 1, 0));
////                delete_done_score_data_args delete_done_score_data_args = new delete_done_score_data_args();
////                delete_done_score_data_args.setWord_level_id(this.word_level_id);
////                delete_done_score_data_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_delete_done_score_data();
////            }
////        }
////
////        public class do_daka_call extends TAsyncMethodCall {
////            private int daka_days;
////            private int today_new_learned_count;
////
////            public do_daka_call(int i, int i2, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.daka_days = i;
////                this.today_new_learned_count = i2;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("do_daka", 1, 0));
////                do_daka_args do_daka_args = new do_daka_args();
////                do_daka_args.setDaka_days(this.daka_days);
////                do_daka_args.setToday_new_learned_count(this.today_new_learned_count);
////                do_daka_args.write(fVar);
////            }
////
////            public BBDakaInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_do_daka();
////            }
////        }
////
////        public class do_daka_v2_call extends TAsyncMethodCall {
////            private List<Integer> arr_finished_plan_date;
////            private int daka_days;
////            private int today_new_learned_count;
////            private int word_level_id;
////
////            public do_daka_v2_call(int i, List<Integer> list, int i2, int i3, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////                this.arr_finished_plan_date = list;
////                this.daka_days = i2;
////                this.today_new_learned_count = i3;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("do_daka_v2", 1, 0));
////                do_daka_v2_args do_daka_v2_args = new do_daka_v2_args();
////                do_daka_v2_args.setWord_level_id(this.word_level_id);
////                do_daka_v2_args.setArr_finished_plan_date(this.arr_finished_plan_date);
////                do_daka_v2_args.setDaka_days(this.daka_days);
////                do_daka_v2_args.setToday_new_learned_count(this.today_new_learned_count);
////                do_daka_v2_args.write(fVar);
////            }
////
////            public BBDakaInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_do_daka_v2();
////            }
////        }
////
////        public class done_word_stat_call extends TAsyncMethodCall {
////            private int book_id;
////            private List<BBDoneWordStatLog> stat_logs;
////
////            public done_word_stat_call(int i, List<BBDoneWordStatLog> list, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.book_id = i;
////                this.stat_logs = list;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("done_word_stat", 1, 0));
////                done_word_stat_args done_word_stat_args = new done_word_stat_args();
////                done_word_stat_args.setBook_id(this.book_id);
////                done_word_stat_args.setStat_logs(this.stat_logs);
////                done_word_stat_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_done_word_stat();
////            }
////        }
////
////        public class finish_plan_notify_call extends TAsyncMethodCall {
////            private BBUserFinishPlanInfo finish_plan_info;
////
////            public finish_plan_notify_call(BBUserFinishPlanInfo bBUserFinishPlanInfo, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.finish_plan_info = bBUserFinishPlanInfo;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("finish_plan_notify", 1, 0));
////                finish_plan_notify_args finish_plan_notify_args = new finish_plan_notify_args();
////                finish_plan_notify_args.setFinish_plan_info(this.finish_plan_info);
////                finish_plan_notify_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_finish_plan_notify();
////            }
////        }
////
////        public class forget_password_call extends TAsyncMethodCall {
////            private String email;
////
////            public forget_password_call(String str, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.email = str;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("forget_password", 1, 0));
////                forget_password_args forget_password_args = new forget_password_args();
////                forget_password_args.setEmail(this.email);
////                forget_password_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_forget_password();
////            }
////        }
////
////        public class get_ad_custom_menu_call extends TAsyncMethodCall {
////            public get_ad_custom_menu_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_ad_custom_menu", 1, 0));
////                new get_ad_custom_menu_args().write(fVar);
////            }
////
////            public BBAdCustomMenu getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_ad_custom_menu();
////            }
////        }
////
////        public class get_ads_list_call extends TAsyncMethodCall {
////            public get_ads_list_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_ads_list", 1, 0));
////                new get_ads_list_args().write(fVar);
////            }
////
////            public List<BBAdInfo> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_ads_list();
////            }
////        }
////
////        public class get_all_books_basic_info_call extends TAsyncMethodCall {
////            public get_all_books_basic_info_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_all_books_basic_info", 1, 0));
////                new get_all_books_basic_info_args().write(fVar);
////            }
////
////            public BBBookListInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_all_books_basic_info();
////            }
////        }
////
////        public class get_all_notify_msgs_call extends TAsyncMethodCall {
////            public get_all_notify_msgs_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_all_notify_msgs", 1, 0));
////                new get_all_notify_msgs_args().write(fVar);
////            }
////
////            public List<BBUserNotifyMsg> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_all_notify_msgs();
////            }
////        }
////
////        public class get_all_selected_books_info_call extends TAsyncMethodCall {
////            public get_all_selected_books_info_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_all_selected_books_info", 1, 0));
////                new get_all_selected_books_info_args().write(fVar);
////            }
////
////            public List<BBUserSelectedBookInfo> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_all_selected_books_info();
////            }
////        }
////
////        public class get_book_last_updated_time_call extends TAsyncMethodCall {
////            private BBUserTailoredBookInfo book_info;
////
////            public get_book_last_updated_time_call(BBUserTailoredBookInfo bBUserTailoredBookInfo, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.book_info = bBUserTailoredBookInfo;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_book_last_updated_time", 1, 0));
////                get_book_last_updated_time_args get_book_last_updated_time_args = new get_book_last_updated_time_args();
////                get_book_last_updated_time_args.setBook_info(this.book_info);
////                get_book_last_updated_time_args.write(fVar);
////            }
////
////            public BBUserTailoredBookInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_book_last_updated_time();
////            }
////        }
////
////        public class get_daka_share_info_call extends TAsyncMethodCall {
////            private int word_level_id;
////
////            public get_daka_share_info_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_daka_share_info", 1, 0));
////                get_daka_share_info_args get_daka_share_info_args = new get_daka_share_info_args();
////                get_daka_share_info_args.setWord_level_id(this.word_level_id);
////                get_daka_share_info_args.write(fVar);
////            }
////
////            public BBDakaShowInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_daka_share_info();
////            }
////        }
////
////        public class get_learned_words_list_call extends TAsyncMethodCall {
////            public get_learned_words_list_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_learned_words_list", 1, 0));
////                new get_learned_words_list_args().write(fVar);
////            }
////
////            public List<BBTopicInfo> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_learned_words_list();
////            }
////        }
////
////        public class get_like_times_call extends TAsyncMethodCall {
////            private List<Integer> notification_ids;
////
////            public get_like_times_call(List<Integer> list, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.notification_ids = list;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_like_times", 1, 0));
////                get_like_times_args get_like_times_args = new get_like_times_args();
////                get_like_times_args.setNotification_ids(this.notification_ids);
////                get_like_times_args.write(fVar);
////            }
////
////            public Map<Integer, Integer> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_like_times();
////            }
////        }
////
////        public class get_miscs_call extends TAsyncMethodCall {
////            public get_miscs_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_miscs", 1, 0));
////                new get_miscs_args().write(fVar);
////            }
////
////            public List<BBMiscInfo> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_miscs();
////            }
////        }
////
////        public class get_notify_info_call extends TAsyncMethodCall {
////            public get_notify_info_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_notify_info", 1, 0));
////                new get_notify_info_args().write(fVar);
////            }
////
////            public BBUserNotifyResult getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_notify_info();
////            }
////        }
////
////        public class get_shopping_ad_call extends TAsyncMethodCall {
////            public get_shopping_ad_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_shopping_ad", 1, 0));
////                new get_shopping_ad_args().write(fVar);
////            }
////
////            public BBShoppingAd getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_shopping_ad();
////            }
////        }
////
////        public class get_show_ads_call extends TAsyncMethodCall {
////            public get_show_ads_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_show_ads", 1, 0));
////                new get_show_ads_args().write(fVar);
////            }
////
////            public List<Integer> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_show_ads();
////            }
////        }
////
////        public class get_sys_notifications_call extends TAsyncMethodCall {
////            private int last_time;
////
////            public get_sys_notifications_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.last_time = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_sys_notifications", 1, 0));
////                get_sys_notifications_args get_sys_notifications_args = new get_sys_notifications_args();
////                get_sys_notifications_args.setLast_time(this.last_time);
////                get_sys_notifications_args.write(fVar);
////            }
////
////            public List<BBSysNotification> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_sys_notifications();
////            }
////        }
////
////        public class get_top_sys_notifications_call extends TAsyncMethodCall {
////            public get_top_sys_notifications_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_top_sys_notifications", 1, 0));
////                new get_top_sys_notifications_args().write(fVar);
////            }
////
////            public List<BBSysNotification> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_top_sys_notifications();
////            }
////        }
////
////        public class get_url_call extends TAsyncMethodCall {
////            public get_url_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_url", 1, 0));
////                new get_url_args().write(fVar);
////            }
////
////            public String getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_url();
////            }
////        }
////
////        public class get_user_word_media_record_call extends TAsyncMethodCall {
////            private int word_level_id;
////
////            public get_user_word_media_record_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_user_word_media_record", 1, 0));
////                get_user_word_media_record_args get_user_word_media_record_args = new get_user_word_media_record_args();
////                get_user_word_media_record_args.setWord_level_id(this.word_level_id);
////                get_user_word_media_record_args.write(fVar);
////            }
////
////            public List<BBUserWordMedia> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_user_word_media_record();
////            }
////        }
////
////        public class get_word_friends_info_call extends TAsyncMethodCall {
////            private int word_level_id;
////
////            public get_word_friends_info_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_word_friends_info", 1, 0));
////                get_word_friends_info_args get_word_friends_info_args = new get_word_friends_info_args();
////                get_word_friends_info_args.setWord_level_id(this.word_level_id);
////                get_word_friends_info_args.write(fVar);
////            }
////
////            public String getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_word_friends_info();
////            }
////        }
////
////        public class get_word_update_info_by_book_call extends TAsyncMethodCall {
////            private int word_level_id;
////
////            public get_word_update_info_by_book_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_word_update_info_by_book", 1, 0));
////                get_word_update_info_by_book_args get_word_update_info_by_book_args = new get_word_update_info_by_book_args();
////                get_word_update_info_by_book_args.setWord_level_id(this.word_level_id);
////                get_word_update_info_by_book_args.write(fVar);
////            }
////
////            public List<BBWordUpdateInfo> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_word_update_info_by_book();
////            }
////        }
////
////        public class get_word_update_md5_by_book_call extends TAsyncMethodCall {
////            private int word_level_id;
////
////            public get_word_update_md5_by_book_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("get_word_update_md5_by_book", 1, 0));
////                get_word_update_md5_by_book_args get_word_update_md5_by_book_args = new get_word_update_md5_by_book_args();
////                get_word_update_md5_by_book_args.setWord_level_id(this.word_level_id);
////                get_word_update_md5_by_book_args.write(fVar);
////            }
////
////            public List<BBWordUpdateMD5> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_get_word_update_md5_by_book();
////            }
////        }
////
////        public class have_a_try_call extends TAsyncMethodCall {
////            public have_a_try_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("have_a_try", 1, 0));
////                new have_a_try_args().write(fVar);
////            }
////
////            public BBCreateTryResult getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_have_a_try();
////            }
////        }
////
////        public class login_call extends TAsyncMethodCall {
////            private String email;
////            private String password;
////
////            public login_call(String str, String str2, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.email = str;
////                this.password = str2;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("login", 1, 0));
////                login_args login_args = new login_args();
////                login_args.setEmail(this.email);
////                login_args.setPassword(this.password);
////                login_args.write(fVar);
////            }
////
////            public BBLoginResult getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_login();
////            }
////        }
////
////        public class merge_already_learned_words_call extends TAsyncMethodCall {
////            private int book_id;
////
////            public merge_already_learned_words_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.book_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("merge_already_learned_words", 1, 0));
////                merge_already_learned_words_args merge_already_learned_words_args = new merge_already_learned_words_args();
////                merge_already_learned_words_args.setBook_id(this.book_id);
////                merge_already_learned_words_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_merge_already_learned_words();
////            }
////        }
////
////        public class modify_password_call extends TAsyncMethodCall {
////            private String email;
////            private String new_password;
////            private String old_password;
////
////            public modify_password_call(String str, String str2, String str3, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.email = str;
////                this.old_password = str2;
////                this.new_password = str3;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("modify_password", 1, 0));
////                modify_password_args modify_password_args = new modify_password_args();
////                modify_password_args.setEmail(this.email);
////                modify_password_args.setOld_password(this.old_password);
////                modify_password_args.setNew_password(this.new_password);
////                modify_password_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_modify_password();
////            }
////        }
////
////        public class other_login_call extends TAsyncMethodCall {
////            private int is_try_user;
////            private String provider;
////            private BB3PartyUserInfo userinfo;
////
////            public other_login_call(String str, BB3PartyUserInfo bB3PartyUserInfo, int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.provider = str;
////                this.userinfo = bB3PartyUserInfo;
////                this.is_try_user = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("other_login", 1, 0));
////                other_login_args other_login_args = new other_login_args();
////                other_login_args.setProvider(this.provider);
////                other_login_args.setUserinfo(this.userinfo);
////                other_login_args.setIs_try_user(this.is_try_user);
////                other_login_args.write(fVar);
////            }
////
////            public BBOtherLoginResult getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_other_login();
////            }
////        }
////
////        public class redo_word_friend_call extends TAsyncMethodCall {
////            public redo_word_friend_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("redo_word_friend", 1, 0));
////                new redo_word_friend_args().write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_redo_word_friend();
////            }
////        }
////
////        public class register_user_call extends TAsyncMethodCall {
////            private String email;
////            private String password;
////
////            public register_user_call(String str, String str2, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.email = str;
////                this.password = str2;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("register_user", 1, 0));
////                register_user_args register_user_args = new register_user_args();
////                register_user_args.setEmail(this.email);
////                register_user_args.setPassword(this.password);
////                register_user_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_register_user();
////            }
////        }
////
////        public class reset_done_score_data_call extends TAsyncMethodCall {
////            private int word_level_id;
////
////            public reset_done_score_data_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("reset_done_score_data", 1, 0));
////                reset_done_score_data_args reset_done_score_data_args = new reset_done_score_data_args();
////                reset_done_score_data_args.setWord_level_id(this.word_level_id);
////                reset_done_score_data_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_reset_done_score_data();
////            }
////        }
////
////        public class roadmap_by_word_level_call extends TAsyncMethodCall {
////            private int current_word_level_id;
////
////            public roadmap_by_word_level_call(int i, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.current_word_level_id = i;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("roadmap_by_word_level", 1, 0));
////                roadmap_by_word_level_args roadmap_by_word_level_args = new roadmap_by_word_level_args();
////                roadmap_by_word_level_args.setCurrent_word_level_id(this.current_word_level_id);
////                roadmap_by_word_level_args.write(fVar);
////            }
////
////            public List<BBRoadMapElement> getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_roadmap_by_word_level();
////            }
////        }
////
////        public class save_user_ext_info_call extends TAsyncMethodCall {
////            private BBUserExtInfo user_ext_info;
////
////            public save_user_ext_info_call(BBUserExtInfo bBUserExtInfo, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.user_ext_info = bBUserExtInfo;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("save_user_ext_info", 1, 0));
////                save_user_ext_info_args save_user_ext_info_args = new save_user_ext_info_args();
////                save_user_ext_info_args.setUser_ext_info(this.user_ext_info);
////                save_user_ext_info_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_save_user_ext_info();
////            }
////        }
////
////        public class save_word_friend_done_record_call extends TAsyncMethodCall {
////            private List<Integer> done_topic_ids;
////            private int word_level_id;
////
////            public save_word_friend_done_record_call(int i, List<Integer> list, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////                this.done_topic_ids = list;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("save_word_friend_done_record", 1, 0));
////                save_word_friend_done_record_args save_word_friend_done_record_args = new save_word_friend_done_record_args();
////                save_word_friend_done_record_args.setWord_level_id(this.word_level_id);
////                save_word_friend_done_record_args.setDone_topic_ids(this.done_topic_ids);
////                save_word_friend_done_record_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_save_word_friend_done_record();
////            }
////        }
////
////        public class select_book_call extends TAsyncMethodCall {
////            private int book_id;
////            private long end_time;
////
////            public select_book_call(int i, long j, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.book_id = i;
////                this.end_time = j;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("select_book", 1, 0));
////                select_book_args select_book_args = new select_book_args();
////                select_book_args.setBook_id(this.book_id);
////                select_book_args.setEnd_time(this.end_time);
////                select_book_args.write(fVar);
////            }
////
////            public BBUserSelectedBookInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_select_book();
////            }
////        }
////
////        public class select_book_v2_call extends TAsyncMethodCall {
////            private int book_id;
////            private long end_time;
////
////            public select_book_v2_call(int i, long j, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.book_id = i;
////                this.end_time = j;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("select_book_v2", 1, 0));
////                select_book_v2_args select_book_v2_args = new select_book_v2_args();
////                select_book_v2_args.setBook_id(this.book_id);
////                select_book_v2_args.setEnd_time(this.end_time);
////                select_book_v2_args.write(fVar);
////            }
////
////            public BBSelectedBookInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_select_book_v2();
////            }
////        }
////
////        public class select_word_level_call extends TAsyncMethodCall {
////            private long end_time;
////            private int word_level_id;
////
////            public select_word_level_call(int i, long j, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.word_level_id = i;
////                this.end_time = j;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("select_word_level", 1, 0));
////                select_word_level_args select_word_level_args = new select_word_level_args();
////                select_word_level_args.setWord_level_id(this.word_level_id);
////                select_word_level_args.setEnd_time(this.end_time);
////                select_word_level_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_select_word_level();
////            }
////        }
////
////        public class set_notify_info_call extends TAsyncMethodCall {
////            private BBUserNotifySetting notify_setting;
////
////            public set_notify_info_call(BBUserNotifySetting bBUserNotifySetting, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.notify_setting = bBUserNotifySetting;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("set_notify_info", 1, 0));
////                set_notify_info_args set_notify_info_args = new set_notify_info_args();
////                set_notify_info_args.setNotify_setting(this.notify_setting);
////                set_notify_info_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_set_notify_info();
////            }
////        }
////
////        public class sync_user_word_media_record_call extends TAsyncMethodCall {
////            private List<BBUserWordMedia> user_media_records;
////
////            public sync_user_word_media_record_call(List<BBUserWordMedia> list, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.user_media_records = list;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("sync_user_word_media_record", 1, 0));
////                sync_user_word_media_record_args sync_user_word_media_record_args = new sync_user_word_media_record_args();
////                sync_user_word_media_record_args.setUser_media_records(this.user_media_records);
////                sync_user_word_media_record_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_sync_user_word_media_record();
////            }
////        }
////
////        public class update_done_data_call extends TAsyncMethodCall {
////            private List<BBDoneRecord> arr_done_records;
////            private int current_word_level_id;
////            private boolean is_today_completed;
////            private long last_sync_at;
////
////            public update_done_data_call(long j, List<BBDoneRecord> list, int i, boolean z, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.last_sync_at = j;
////                this.arr_done_records = list;
////                this.current_word_level_id = i;
////                this.is_today_completed = z;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("update_done_data", 1, 0));
////                update_done_data_args update_done_data_args = new update_done_data_args();
////                update_done_data_args.setLast_sync_at(this.last_sync_at);
////                update_done_data_args.setArr_done_records(this.arr_done_records);
////                update_done_data_args.setCurrent_word_level_id(this.current_word_level_id);
////                update_done_data_args.setIs_today_completed(this.is_today_completed);
////                update_done_data_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_update_done_data();
////            }
////        }
////
////        public class update_miscs_call extends TAsyncMethodCall {
////            private List<BBMiscInfo> miscs;
////
////            public update_miscs_call(List<BBMiscInfo> list, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.miscs = list;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("update_miscs", 1, 0));
////                update_miscs_args update_miscs_args = new update_miscs_args();
////                update_miscs_args.setMiscs(this.miscs);
////                update_miscs_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_update_miscs();
////            }
////        }
////
////        public class update_profile_call extends TAsyncMethodCall {
////            private String nick_name;
////            private int title_id;
////
////            public update_profile_call(int i, String str, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.title_id = i;
////                this.nick_name = str;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("update_profile", 1, 0));
////                update_profile_args update_profile_args = new update_profile_args();
////                update_profile_args.setTitle_id(this.title_id);
////                update_profile_args.setNick_name(this.nick_name);
////                update_profile_args.write(fVar);
////            }
////
////            public BBProfile getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_update_profile();
////            }
////        }
////
////        public class user_basic_info_call extends TAsyncMethodCall {
////            public user_basic_info_call(AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("user_basic_info", 1, 0));
////                new user_basic_info_args().write(fVar);
////            }
////
////            public BBBasicInfo getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_user_basic_info();
////            }
////        }
////
////        public class user_operation_stat_call extends TAsyncMethodCall {
////            private List<BBOperationStatLog> operation_logs;
////
////            public user_operation_stat_call(List<BBOperationStatLog> list, AsyncMethodCallback aVar, TAsyncClient bVar, C2102h hVar, TNonblockingTransport eVar) {
////                super(bVar, hVar, eVar, aVar, false);
////                this.operation_logs = list;
////            }
////
////            public void write_args(C2100f fVar) {
////                fVar.mo18499a(new TMessage("user_operation_stat", 1, 0));
////                user_operation_stat_args user_operation_stat_args = new user_operation_stat_args();
////                user_operation_stat_args.setOperation_logs(this.operation_logs);
////                user_operation_stat_args.write(fVar);
////            }
////
////            public int getResult() {
////                if (getState() != C2089h.f5806f) {
////                    throw new IllegalStateException("Method call not finished!");
////                }
////                new C2118d(getFrameBuffer().array());
////                return new Client(this.client.getProtocolFactory().mo18526a()).recv_user_operation_stat();
////            }
////        }
////
////        public AsyncClient(C2102h hVar, TAsyncClientManager cVar, TNonblockingTransport eVar) {
////            super(hVar, cVar, eVar);
////        }
////
////        public void check_infos(AsyncMethodCallback aVar) {
////            checkReady();
////            check_infos_call check_infos_call2 = new check_infos_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = check_infos_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) check_infos_call2);
////        }
////
////        public void login(String str, String str2, AsyncMethodCallback aVar) {
////            checkReady();
////            login_call login_call2 = new login_call(str, str2, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = login_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) login_call2);
////        }
////
////        public void register_user(String str, String str2, AsyncMethodCallback aVar) {
////            checkReady();
////            register_user_call register_user_call2 = new register_user_call(str, str2, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = register_user_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) register_user_call2);
////        }
////
////        public void have_a_try(AsyncMethodCallback aVar) {
////            checkReady();
////            have_a_try_call have_a_try_call2 = new have_a_try_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = have_a_try_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) have_a_try_call2);
////        }
////
////        public void bind_try_user(String str, String str2, AsyncMethodCallback aVar) {
////            checkReady();
////            bind_try_user_call bind_try_user_call2 = new bind_try_user_call(str, str2, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = bind_try_user_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) bind_try_user_call2);
////        }
////
////        public void other_login(String str, BB3PartyUserInfo bB3PartyUserInfo, int i, AsyncMethodCallback aVar) {
////            checkReady();
////            other_login_call other_login_call2 = new other_login_call(str, bB3PartyUserInfo, i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = other_login_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) other_login_call2);
////        }
////
////        public void forget_password(String str, AsyncMethodCallback aVar) {
////            checkReady();
////            forget_password_call forget_password_call2 = new forget_password_call(str, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = forget_password_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) forget_password_call2);
////        }
////
////        public void modify_password(String str, String str2, String str3, AsyncMethodCallback aVar) {
////            checkReady();
////            modify_password_call modify_password_call2 = new modify_password_call(str, str2, str3, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = modify_password_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) modify_password_call2);
////        }
////
////        public void user_basic_info(AsyncMethodCallback aVar) {
////            checkReady();
////            user_basic_info_call user_basic_info_call2 = new user_basic_info_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = user_basic_info_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) user_basic_info_call2);
////        }
////
////        public void book_list(boolean z, AsyncMethodCallback aVar) {
////            checkReady();
////            book_list_call book_list_call2 = new book_list_call(z, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = book_list_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) book_list_call2);
////        }
////
////        public void roadmap_by_word_level(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            roadmap_by_word_level_call roadmap_by_word_level_call2 = new roadmap_by_word_level_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = roadmap_by_word_level_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) roadmap_by_word_level_call2);
////        }
////
////        public void update_profile(int i, String str, AsyncMethodCallback aVar) {
////            checkReady();
////            update_profile_call update_profile_call2 = new update_profile_call(i, str, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = update_profile_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) update_profile_call2);
////        }
////
////        public void update_done_data(long j, List<BBDoneRecord> list, int i, boolean z, AsyncMethodCallback aVar) {
////            checkReady();
////            update_done_data_call update_done_data_call2 = new update_done_data_call(j, list, i, z, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = update_done_data_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) update_done_data_call2);
////        }
////
////        public void select_word_level(int i, long j, AsyncMethodCallback aVar) {
////            checkReady();
////            select_word_level_call select_word_level_call2 = new select_word_level_call(i, j, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = select_word_level_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) select_word_level_call2);
////        }
////
////        public void select_book(int i, long j, AsyncMethodCallback aVar) {
////            checkReady();
////            select_book_call select_book_call2 = new select_book_call(i, j, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = select_book_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) select_book_call2);
////        }
////
////        public void select_book_v2(int i, long j, AsyncMethodCallback aVar) {
////            checkReady();
////            select_book_v2_call select_book_v2_call2 = new select_book_v2_call(i, j, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = select_book_v2_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) select_book_v2_call2);
////        }
////
////        public void get_learned_words_list(AsyncMethodCallback aVar) {
////            checkReady();
////            get_learned_words_list_call get_learned_words_list_call2 = new get_learned_words_list_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_learned_words_list_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_learned_words_list_call2);
////        }
////
////        public void get_notify_info(AsyncMethodCallback aVar) {
////            checkReady();
////            get_notify_info_call get_notify_info_call2 = new get_notify_info_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_notify_info_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_notify_info_call2);
////        }
////
////        public void set_notify_info(BBUserNotifySetting bBUserNotifySetting, AsyncMethodCallback aVar) {
////            checkReady();
////            set_notify_info_call set_notify_info_call2 = new set_notify_info_call(bBUserNotifySetting, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = set_notify_info_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) set_notify_info_call2);
////        }
////
////        public void get_all_notify_msgs(AsyncMethodCallback aVar) {
////            checkReady();
////            get_all_notify_msgs_call get_all_notify_msgs_call2 = new get_all_notify_msgs_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_all_notify_msgs_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_all_notify_msgs_call2);
////        }
////
////        public void get_word_update_info_by_book(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            get_word_update_info_by_book_call get_word_update_info_by_book_call2 = new get_word_update_info_by_book_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_word_update_info_by_book_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_word_update_info_by_book_call2);
////        }
////
////        public void get_word_update_md5_by_book(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            get_word_update_md5_by_book_call get_word_update_md5_by_book_call2 = new get_word_update_md5_by_book_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_word_update_md5_by_book_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_word_update_md5_by_book_call2);
////        }
////
////        public void do_daka(int i, int i2, AsyncMethodCallback aVar) {
////            checkReady();
////            do_daka_call do_daka_call2 = new do_daka_call(i, i2, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = do_daka_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) do_daka_call2);
////        }
////
////        public void do_daka_v2(int i, List<Integer> list, int i2, int i3, AsyncMethodCallback aVar) {
////            checkReady();
////            do_daka_v2_call do_daka_v2_call2 = new do_daka_v2_call(i, list, i2, i3, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = do_daka_v2_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) do_daka_v2_call2);
////        }
////
////        public void get_daka_share_info(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            get_daka_share_info_call get_daka_share_info_call2 = new get_daka_share_info_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_daka_share_info_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_daka_share_info_call2);
////        }
////
////        public void daka_success_notify(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            daka_success_notify_call daka_success_notify_call2 = new daka_success_notify_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = daka_success_notify_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) daka_success_notify_call2);
////        }
////
////        public void reset_done_score_data(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            reset_done_score_data_call reset_done_score_data_call2 = new reset_done_score_data_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = reset_done_score_data_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) reset_done_score_data_call2);
////        }
////
////        public void delete_done_score_data(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            delete_done_score_data_call delete_done_score_data_call2 = new delete_done_score_data_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = delete_done_score_data_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) delete_done_score_data_call2);
////        }
////
////        public void sync_user_word_media_record(List<BBUserWordMedia> list, AsyncMethodCallback aVar) {
////            checkReady();
////            sync_user_word_media_record_call sync_user_word_media_record_call2 = new sync_user_word_media_record_call(list, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = sync_user_word_media_record_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) sync_user_word_media_record_call2);
////        }
////
////        public void get_user_word_media_record(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            get_user_word_media_record_call get_user_word_media_record_call2 = new get_user_word_media_record_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_user_word_media_record_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_user_word_media_record_call2);
////        }
////
////        public void get_ads_list(AsyncMethodCallback aVar) {
////            checkReady();
////            get_ads_list_call get_ads_list_call2 = new get_ads_list_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_ads_list_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_ads_list_call2);
////        }
////
////        public void get_show_ads(AsyncMethodCallback aVar) {
////            checkReady();
////            get_show_ads_call get_show_ads_call2 = new get_show_ads_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_show_ads_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_show_ads_call2);
////        }
////
////        public void get_word_friends_info(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            get_word_friends_info_call get_word_friends_info_call2 = new get_word_friends_info_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_word_friends_info_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_word_friends_info_call2);
////        }
////
////        public void redo_word_friend(AsyncMethodCallback aVar) {
////            checkReady();
////            redo_word_friend_call redo_word_friend_call2 = new redo_word_friend_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = redo_word_friend_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) redo_word_friend_call2);
////        }
////
////        public void save_word_friend_done_record(int i, List<Integer> list, AsyncMethodCallback aVar) {
////            checkReady();
////            save_word_friend_done_record_call save_word_friend_done_record_call2 = new save_word_friend_done_record_call(i, list, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = save_word_friend_done_record_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) save_word_friend_done_record_call2);
////        }
////
////        public void save_user_ext_info(BBUserExtInfo bBUserExtInfo, AsyncMethodCallback aVar) {
////            checkReady();
////            save_user_ext_info_call save_user_ext_info_call2 = new save_user_ext_info_call(bBUserExtInfo, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = save_user_ext_info_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) save_user_ext_info_call2);
////        }
////
////        public void add_word_friend_feedback(int i, String str, AsyncMethodCallback aVar) {
////            checkReady();
////            add_word_friend_feedback_call add_word_friend_feedback_call2 = new add_word_friend_feedback_call(i, str, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = add_word_friend_feedback_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) add_word_friend_feedback_call2);
////        }
////
////        public void get_all_books_basic_info(AsyncMethodCallback aVar) {
////            checkReady();
////            get_all_books_basic_info_call get_all_books_basic_info_call2 = new get_all_books_basic_info_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_all_books_basic_info_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_all_books_basic_info_call2);
////        }
////
////        public void get_all_selected_books_info(AsyncMethodCallback aVar) {
////            checkReady();
////            get_all_selected_books_info_call get_all_selected_books_info_call2 = new get_all_selected_books_info_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_all_selected_books_info_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_all_selected_books_info_call2);
////        }
////
////        public void get_book_last_updated_time(BBUserTailoredBookInfo bBUserTailoredBookInfo, AsyncMethodCallback aVar) {
////            checkReady();
////            get_book_last_updated_time_call get_book_last_updated_time_call2 = new get_book_last_updated_time_call(bBUserTailoredBookInfo, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_book_last_updated_time_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_book_last_updated_time_call2);
////        }
////
////        public void get_ad_custom_menu(AsyncMethodCallback aVar) {
////            checkReady();
////            get_ad_custom_menu_call get_ad_custom_menu_call2 = new get_ad_custom_menu_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_ad_custom_menu_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_ad_custom_menu_call2);
////        }
////
////        public void done_word_stat(int i, List<BBDoneWordStatLog> list, AsyncMethodCallback aVar) {
////            checkReady();
////            done_word_stat_call done_word_stat_call2 = new done_word_stat_call(i, list, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = done_word_stat_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) done_word_stat_call2);
////        }
////
////        public void get_miscs(AsyncMethodCallback aVar) {
////            checkReady();
////            get_miscs_call get_miscs_call2 = new get_miscs_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_miscs_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_miscs_call2);
////        }
////
////        public void update_miscs(List<BBMiscInfo> list, AsyncMethodCallback aVar) {
////            checkReady();
////            update_miscs_call update_miscs_call2 = new update_miscs_call(list, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = update_miscs_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) update_miscs_call2);
////        }
////
////        public void merge_already_learned_words(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            merge_already_learned_words_call merge_already_learned_words_call2 = new merge_already_learned_words_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = merge_already_learned_words_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) merge_already_learned_words_call2);
////        }
////
////        public void user_operation_stat(List<BBOperationStatLog> list, AsyncMethodCallback aVar) {
////            checkReady();
////            user_operation_stat_call user_operation_stat_call2 = new user_operation_stat_call(list, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = user_operation_stat_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) user_operation_stat_call2);
////        }
////
////        public void get_sys_notifications(int i, AsyncMethodCallback aVar) {
////            checkReady();
////            get_sys_notifications_call get_sys_notifications_call2 = new get_sys_notifications_call(i, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_sys_notifications_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_sys_notifications_call2);
////        }
////
////        public void get_top_sys_notifications(AsyncMethodCallback aVar) {
////            checkReady();
////            get_top_sys_notifications_call get_top_sys_notifications_call2 = new get_top_sys_notifications_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_top_sys_notifications_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_top_sys_notifications_call2);
////        }
////
////        public void get_like_times(List<Integer> list, AsyncMethodCallback aVar) {
////            checkReady();
////            get_like_times_call get_like_times_call2 = new get_like_times_call(list, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_like_times_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_like_times_call2);
////        }
////
////        public void finish_plan_notify(BBUserFinishPlanInfo bBUserFinishPlanInfo, AsyncMethodCallback aVar) {
////            checkReady();
////            finish_plan_notify_call finish_plan_notify_call2 = new finish_plan_notify_call(bBUserFinishPlanInfo, aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = finish_plan_notify_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) finish_plan_notify_call2);
////        }
////
////        public void get_url(AsyncMethodCallback aVar) {
////            checkReady();
////            get_url_call get_url_call2 = new get_url_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_url_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_url_call2);
////        }
////
////        public void get_shopping_ad(AsyncMethodCallback aVar) {
////            checkReady();
////            get_shopping_ad_call get_shopping_ad_call2 = new get_shopping_ad_call(aVar, this, this.___protocolFactory, this.___transport);
////            this.___currentMethod = get_shopping_ad_call2;
////            this.___manager.mo18472a((TAsyncMethodCall) get_shopping_ad_call2);
////        }
////    }
////
////    public interface AsyncIface {
////        void add_word_friend_feedback(int i, String str, AsyncMethodCallback aVar);
////
////        void bind_try_user(String str, String str2, AsyncMethodCallback aVar);
////
////        void book_list(boolean z, AsyncMethodCallback aVar);
////
////        void check_infos(AsyncMethodCallback aVar);
////
////        void daka_success_notify(int i, AsyncMethodCallback aVar);
////
////        void delete_done_score_data(int i, AsyncMethodCallback aVar);
////
////        void do_daka(int i, int i2, AsyncMethodCallback aVar);
////
////        void do_daka_v2(int i, List<Integer> list, int i2, int i3, AsyncMethodCallback aVar);
////
////        void done_word_stat(int i, List<BBDoneWordStatLog> list, AsyncMethodCallback aVar);
////
////        void finish_plan_notify(BBUserFinishPlanInfo bBUserFinishPlanInfo, AsyncMethodCallback aVar);
////
////        void forget_password(String str, AsyncMethodCallback aVar);
////
////        void get_ad_custom_menu(AsyncMethodCallback aVar);
////
////        void get_ads_list(AsyncMethodCallback aVar);
////
////        void get_all_books_basic_info(AsyncMethodCallback aVar);
////
////        void get_all_notify_msgs(AsyncMethodCallback aVar);
////
////        void get_all_selected_books_info(AsyncMethodCallback aVar);
////
////        void get_book_last_updated_time(BBUserTailoredBookInfo bBUserTailoredBookInfo, AsyncMethodCallback aVar);
////
////        void get_daka_share_info(int i, AsyncMethodCallback aVar);
////
////        void get_learned_words_list(AsyncMethodCallback aVar);
////
////        void get_like_times(List<Integer> list, AsyncMethodCallback aVar);
////
////        void get_miscs(AsyncMethodCallback aVar);
////
////        void get_notify_info(AsyncMethodCallback aVar);
////
////        void get_shopping_ad(AsyncMethodCallback aVar);
////
////        void get_show_ads(AsyncMethodCallback aVar);
////
////        void get_sys_notifications(int i, AsyncMethodCallback aVar);
////
////        void get_top_sys_notifications(AsyncMethodCallback aVar);
////
////        void get_url(AsyncMethodCallback aVar);
////
////        void get_user_word_media_record(int i, AsyncMethodCallback aVar);
////
////        void get_word_friends_info(int i, AsyncMethodCallback aVar);
////
////        void get_word_update_info_by_book(int i, AsyncMethodCallback aVar);
////
////        void get_word_update_md5_by_book(int i, AsyncMethodCallback aVar);
////
////        void have_a_try(AsyncMethodCallback aVar);
////
////        void login(String str, String str2, AsyncMethodCallback aVar);
////
////        void merge_already_learned_words(int i, AsyncMethodCallback aVar);
////
////        void modify_password(String str, String str2, String str3, AsyncMethodCallback aVar);
////
////        void other_login(String str, BB3PartyUserInfo bB3PartyUserInfo, int i, AsyncMethodCallback aVar);
////
////        void redo_word_friend(AsyncMethodCallback aVar);
////
////        void register_user(String str, String str2, AsyncMethodCallback aVar);
////
////        void reset_done_score_data(int i, AsyncMethodCallback aVar);
////
////        void roadmap_by_word_level(int i, AsyncMethodCallback aVar);
////
////        void save_user_ext_info(BBUserExtInfo bBUserExtInfo, AsyncMethodCallback aVar);
////
////        void save_word_friend_done_record(int i, List<Integer> list, AsyncMethodCallback aVar);
////
////        void select_book(int i, long j, AsyncMethodCallback aVar);
////
////        void select_book_v2(int i, long j, AsyncMethodCallback aVar);
////
////        void select_word_level(int i, long j, AsyncMethodCallback aVar);
////
////        void set_notify_info(BBUserNotifySetting bBUserNotifySetting, AsyncMethodCallback aVar);
////
////        void sync_user_word_media_record(List<BBUserWordMedia> list, AsyncMethodCallback aVar);
////
////        void update_done_data(long j, List<BBDoneRecord> list, int i, boolean z, AsyncMethodCallback aVar);
////
////        void update_miscs(List<BBMiscInfo> list, AsyncMethodCallback aVar);
////
////        void update_profile(int i, String str, AsyncMethodCallback aVar);
////
////        void user_basic_info(AsyncMethodCallback aVar);
////
////        void user_operation_stat(List<BBOperationStatLog> list, AsyncMethodCallback aVar);
////    }
////
////    public class AsyncProcessor<I extends AsyncIface> extends TBaseAsyncProcessor<I> {
////        /* access modifiers changed from: private */
////        public static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
////
////        public class add_word_friend_feedback<I extends AsyncIface> extends AsyncProcessFunction<I, add_word_friend_feedback_args, Integer> {
////            public add_word_friend_feedback() {
////                super("add_word_friend_feedback");
////            }
////
////            public add_word_friend_feedback_args getEmptyArgsInstance() {
////                return new add_word_friend_feedback_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        add_word_friend_feedback_result add_word_friend_feedback_result = new add_word_friend_feedback_result();
////                        add_word_friend_feedback_result.success = num.intValue();
////                        add_word_friend_feedback_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, add_word_friend_feedback_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        add_word_friend_feedback_result add_word_friend_feedback_result = new add_word_friend_feedback_result();
////                        if (exc instanceof BESystemException) {
////                            add_word_friend_feedback_result.sysException = (BESystemException) exc;
////                            add_word_friend_feedback_result.setSysExceptionIsSet(true);
////                            fVar = add_word_friend_feedback_result;
////                        } else if (exc instanceof BELogicException) {
////                            add_word_friend_feedback_result.logicException = (BELogicException) exc;
////                            add_word_friend_feedback_result.setLogicExceptionIsSet(true);
////                            fVar = add_word_friend_feedback_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, add_word_friend_feedback_args add_word_friend_feedback_args, AsyncMethodCallback<Integer> aVar) {
////                i.add_word_friend_feedback(add_word_friend_feedback_args.topic_id, add_word_friend_feedback_args.feedback, aVar);
////            }
////        }
////
////        public class bind_try_user<I extends AsyncIface> extends AsyncProcessFunction<I, bind_try_user_args, Integer> {
////            public bind_try_user() {
////                super("bind_try_user");
////            }
////
////            public bind_try_user_args getEmptyArgsInstance() {
////                return new bind_try_user_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        bind_try_user_result bind_try_user_result = new bind_try_user_result();
////                        bind_try_user_result.success = num.intValue();
////                        bind_try_user_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, bind_try_user_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        bind_try_user_result bind_try_user_result = new bind_try_user_result();
////                        if (exc instanceof BESystemException) {
////                            bind_try_user_result.sysException = (BESystemException) exc;
////                            bind_try_user_result.setSysExceptionIsSet(true);
////                            fVar = bind_try_user_result;
////                        } else if (exc instanceof BELogicException) {
////                            bind_try_user_result.logicException = (BELogicException) exc;
////                            bind_try_user_result.setLogicExceptionIsSet(true);
////                            fVar = bind_try_user_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, bind_try_user_args bind_try_user_args, AsyncMethodCallback<Integer> aVar) {
////                i.bind_try_user(bind_try_user_args.email, bind_try_user_args.password, aVar);
////            }
////        }
////
////        public class book_list<I extends AsyncIface> extends AsyncProcessFunction<I, book_list_args, BBBookList> {
////            public book_list() {
////                super("book_list");
////            }
////
////            public book_list_args getEmptyArgsInstance() {
////                return new book_list_args();
////            }
////
////            public AsyncMethodCallback<BBBookList> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBBookList>() {
////                    public void onComplete(BBBookList bBBookList) {
////                        book_list_result book_list_result = new book_list_result();
////                        book_list_result.success = bBBookList;
////                        try {
////                            this.sendResponse(cVar, book_list_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        book_list_result book_list_result = new book_list_result();
////                        if (exc instanceof BESystemException) {
////                            book_list_result.sysException = (BESystemException) exc;
////                            book_list_result.setSysExceptionIsSet(true);
////                            fVar = book_list_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, book_list_args book_list_args, AsyncMethodCallback<BBBookList> aVar) {
////                i.book_list(book_list_args.only_selected, aVar);
////            }
////        }
////
////        public class check_infos<I extends AsyncIface> extends AsyncProcessFunction<I, check_infos_args, BBCheckInfo> {
////            public check_infos() {
////                super("check_infos");
////            }
////
////            public check_infos_args getEmptyArgsInstance() {
////                return new check_infos_args();
////            }
////
////            public AsyncMethodCallback<BBCheckInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBCheckInfo>() {
////                    public void onComplete(BBCheckInfo bBCheckInfo) {
////                        check_infos_result check_infos_result = new check_infos_result();
////                        check_infos_result.success = bBCheckInfo;
////                        try {
////                            this.sendResponse(cVar, check_infos_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        check_infos_result check_infos_result = new check_infos_result();
////                        if (exc instanceof BESystemException) {
////                            check_infos_result.sysException = (BESystemException) exc;
////                            check_infos_result.setSysExceptionIsSet(true);
////                            fVar = check_infos_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, check_infos_args check_infos_args, AsyncMethodCallback<BBCheckInfo> aVar) {
////                i.check_infos(aVar);
////            }
////        }
////
////        public class daka_success_notify<I extends AsyncIface> extends AsyncProcessFunction<I, daka_success_notify_args, Integer> {
////            public daka_success_notify() {
////                super("daka_success_notify");
////            }
////
////            public daka_success_notify_args getEmptyArgsInstance() {
////                return new daka_success_notify_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        daka_success_notify_result daka_success_notify_result = new daka_success_notify_result();
////                        daka_success_notify_result.success = num.intValue();
////                        daka_success_notify_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, daka_success_notify_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        daka_success_notify_result daka_success_notify_result = new daka_success_notify_result();
////                        if (exc instanceof BESystemException) {
////                            daka_success_notify_result.sysException = (BESystemException) exc;
////                            daka_success_notify_result.setSysExceptionIsSet(true);
////                            fVar = daka_success_notify_result;
////                        } else if (exc instanceof BELogicException) {
////                            daka_success_notify_result.logicException = (BELogicException) exc;
////                            daka_success_notify_result.setLogicExceptionIsSet(true);
////                            fVar = daka_success_notify_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, daka_success_notify_args daka_success_notify_args, AsyncMethodCallback<Integer> aVar) {
////                i.daka_success_notify(daka_success_notify_args.daka_id, aVar);
////            }
////        }
////
////        public class delete_done_score_data<I extends AsyncIface> extends AsyncProcessFunction<I, delete_done_score_data_args, Integer> {
////            public delete_done_score_data() {
////                super("delete_done_score_data");
////            }
////
////            public delete_done_score_data_args getEmptyArgsInstance() {
////                return new delete_done_score_data_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        delete_done_score_data_result delete_done_score_data_result = new delete_done_score_data_result();
////                        delete_done_score_data_result.success = num.intValue();
////                        delete_done_score_data_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, delete_done_score_data_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        delete_done_score_data_result delete_done_score_data_result = new delete_done_score_data_result();
////                        if (exc instanceof BESystemException) {
////                            delete_done_score_data_result.sysException = (BESystemException) exc;
////                            delete_done_score_data_result.setSysExceptionIsSet(true);
////                            fVar = delete_done_score_data_result;
////                        } else if (exc instanceof BELogicException) {
////                            delete_done_score_data_result.logicException = (BELogicException) exc;
////                            delete_done_score_data_result.setLogicExceptionIsSet(true);
////                            fVar = delete_done_score_data_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, delete_done_score_data_args delete_done_score_data_args, AsyncMethodCallback<Integer> aVar) {
////                i.delete_done_score_data(delete_done_score_data_args.word_level_id, aVar);
////            }
////        }
////
////        public class do_daka<I extends AsyncIface> extends AsyncProcessFunction<I, do_daka_args, BBDakaInfo> {
////            public do_daka() {
////                super("do_daka");
////            }
////
////            public do_daka_args getEmptyArgsInstance() {
////                return new do_daka_args();
////            }
////
////            public AsyncMethodCallback<BBDakaInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBDakaInfo>() {
////                    public void onComplete(BBDakaInfo bBDakaInfo) {
////                        do_daka_result do_daka_result = new do_daka_result();
////                        do_daka_result.success = bBDakaInfo;
////                        try {
////                            this.sendResponse(cVar, do_daka_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        do_daka_result do_daka_result = new do_daka_result();
////                        if (exc instanceof BESystemException) {
////                            do_daka_result.sysException = (BESystemException) exc;
////                            do_daka_result.setSysExceptionIsSet(true);
////                            fVar = do_daka_result;
////                        } else if (exc instanceof BELogicException) {
////                            do_daka_result.logicException = (BELogicException) exc;
////                            do_daka_result.setLogicExceptionIsSet(true);
////                            fVar = do_daka_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, do_daka_args do_daka_args, AsyncMethodCallback<BBDakaInfo> aVar) {
////                i.do_daka(do_daka_args.daka_days, do_daka_args.today_new_learned_count, aVar);
////            }
////        }
////
////        public class do_daka_v2<I extends AsyncIface> extends AsyncProcessFunction<I, do_daka_v2_args, BBDakaInfo> {
////            public do_daka_v2() {
////                super("do_daka_v2");
////            }
////
////            public do_daka_v2_args getEmptyArgsInstance() {
////                return new do_daka_v2_args();
////            }
////
////            public AsyncMethodCallback<BBDakaInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBDakaInfo>() {
////                    public void onComplete(BBDakaInfo bBDakaInfo) {
////                        do_daka_v2_result do_daka_v2_result = new do_daka_v2_result();
////                        do_daka_v2_result.success = bBDakaInfo;
////                        try {
////                            this.sendResponse(cVar, do_daka_v2_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        new do_daka_v2_result();
////                        try {
////                            this.sendResponse(cVar, (C2116f) new TApplicationException(6, exc.getMessage()), 3, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, do_daka_v2_args do_daka_v2_args, AsyncMethodCallback<BBDakaInfo> aVar) {
////                i.do_daka_v2(do_daka_v2_args.word_level_id, do_daka_v2_args.arr_finished_plan_date, do_daka_v2_args.daka_days, do_daka_v2_args.today_new_learned_count, aVar);
////            }
////        }
////
////        public class done_word_stat<I extends AsyncIface> extends AsyncProcessFunction<I, done_word_stat_args, Integer> {
////            public done_word_stat() {
////                super("done_word_stat");
////            }
////
////            public done_word_stat_args getEmptyArgsInstance() {
////                return new done_word_stat_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        done_word_stat_result done_word_stat_result = new done_word_stat_result();
////                        done_word_stat_result.success = num.intValue();
////                        done_word_stat_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, done_word_stat_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        done_word_stat_result done_word_stat_result = new done_word_stat_result();
////                        if (exc instanceof BESystemException) {
////                            done_word_stat_result.sysException = (BESystemException) exc;
////                            done_word_stat_result.setSysExceptionIsSet(true);
////                            fVar = done_word_stat_result;
////                        } else if (exc instanceof BELogicException) {
////                            done_word_stat_result.logicException = (BELogicException) exc;
////                            done_word_stat_result.setLogicExceptionIsSet(true);
////                            fVar = done_word_stat_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, done_word_stat_args done_word_stat_args, AsyncMethodCallback<Integer> aVar) {
////                i.done_word_stat(done_word_stat_args.book_id, done_word_stat_args.stat_logs, aVar);
////            }
////        }
////
////        public class finish_plan_notify<I extends AsyncIface> extends AsyncProcessFunction<I, finish_plan_notify_args, Integer> {
////            public finish_plan_notify() {
////                super("finish_plan_notify");
////            }
////
////            public finish_plan_notify_args getEmptyArgsInstance() {
////                return new finish_plan_notify_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        finish_plan_notify_result finish_plan_notify_result = new finish_plan_notify_result();
////                        finish_plan_notify_result.success = num.intValue();
////                        finish_plan_notify_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, finish_plan_notify_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        finish_plan_notify_result finish_plan_notify_result = new finish_plan_notify_result();
////                        if (exc instanceof BESystemException) {
////                            finish_plan_notify_result.sysException = (BESystemException) exc;
////                            finish_plan_notify_result.setSysExceptionIsSet(true);
////                            fVar = finish_plan_notify_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, finish_plan_notify_args finish_plan_notify_args, AsyncMethodCallback<Integer> aVar) {
////                i.finish_plan_notify(finish_plan_notify_args.finish_plan_info, aVar);
////            }
////        }
////
////        public class forget_password<I extends AsyncIface> extends AsyncProcessFunction<I, forget_password_args, Integer> {
////            public forget_password() {
////                super("forget_password");
////            }
////
////            public forget_password_args getEmptyArgsInstance() {
////                return new forget_password_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        forget_password_result forget_password_result = new forget_password_result();
////                        forget_password_result.success = num.intValue();
////                        forget_password_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, forget_password_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        forget_password_result forget_password_result = new forget_password_result();
////                        if (exc instanceof BESystemException) {
////                            forget_password_result.sysException = (BESystemException) exc;
////                            forget_password_result.setSysExceptionIsSet(true);
////                            fVar = forget_password_result;
////                        } else if (exc instanceof BELogicException) {
////                            forget_password_result.logicException = (BELogicException) exc;
////                            forget_password_result.setLogicExceptionIsSet(true);
////                            fVar = forget_password_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, forget_password_args forget_password_args, AsyncMethodCallback<Integer> aVar) {
////                i.forget_password(forget_password_args.email, aVar);
////            }
////        }
////
////        public class get_ad_custom_menu<I extends AsyncIface> extends AsyncProcessFunction<I, get_ad_custom_menu_args, BBAdCustomMenu> {
////            public get_ad_custom_menu() {
////                super("get_ad_custom_menu");
////            }
////
////            public get_ad_custom_menu_args getEmptyArgsInstance() {
////                return new get_ad_custom_menu_args();
////            }
////
////            public AsyncMethodCallback<BBAdCustomMenu> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBAdCustomMenu>() {
////                    public void onComplete(BBAdCustomMenu bBAdCustomMenu) {
////                        get_ad_custom_menu_result get_ad_custom_menu_result = new get_ad_custom_menu_result();
////                        get_ad_custom_menu_result.success = bBAdCustomMenu;
////                        try {
////                            this.sendResponse(cVar, get_ad_custom_menu_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_ad_custom_menu_result get_ad_custom_menu_result = new get_ad_custom_menu_result();
////                        if (exc instanceof BESystemException) {
////                            get_ad_custom_menu_result.sysException = (BESystemException) exc;
////                            get_ad_custom_menu_result.setSysExceptionIsSet(true);
////                            fVar = get_ad_custom_menu_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_ad_custom_menu_result.logicException = (BELogicException) exc;
////                            get_ad_custom_menu_result.setLogicExceptionIsSet(true);
////                            fVar = get_ad_custom_menu_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_ad_custom_menu_args get_ad_custom_menu_args, AsyncMethodCallback<BBAdCustomMenu> aVar) {
////                i.get_ad_custom_menu(aVar);
////            }
////        }
////
////        public class get_ads_list<I extends AsyncIface> extends AsyncProcessFunction<I, get_ads_list_args, List<BBAdInfo>> {
////            public get_ads_list() {
////                super("get_ads_list");
////            }
////
////            public get_ads_list_args getEmptyArgsInstance() {
////                return new get_ads_list_args();
////            }
////
////            public AsyncMethodCallback<List<BBAdInfo>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBAdInfo>>() {
////                    public void onComplete(List<BBAdInfo> list) {
////                        get_ads_list_result get_ads_list_result = new get_ads_list_result();
////                        get_ads_list_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_ads_list_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_ads_list_result get_ads_list_result = new get_ads_list_result();
////                        if (exc instanceof BESystemException) {
////                            get_ads_list_result.sysException = (BESystemException) exc;
////                            get_ads_list_result.setSysExceptionIsSet(true);
////                            fVar = get_ads_list_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_ads_list_result.logicException = (BELogicException) exc;
////                            get_ads_list_result.setLogicExceptionIsSet(true);
////                            fVar = get_ads_list_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_ads_list_args get_ads_list_args, AsyncMethodCallback<List<BBAdInfo>> aVar) {
////                i.get_ads_list(aVar);
////            }
////        }
////
////        public class get_all_books_basic_info<I extends AsyncIface> extends AsyncProcessFunction<I, get_all_books_basic_info_args, BBBookListInfo> {
////            public get_all_books_basic_info() {
////                super("get_all_books_basic_info");
////            }
////
////            public get_all_books_basic_info_args getEmptyArgsInstance() {
////                return new get_all_books_basic_info_args();
////            }
////
////            public AsyncMethodCallback<BBBookListInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBBookListInfo>() {
////                    public void onComplete(BBBookListInfo bBBookListInfo) {
////                        get_all_books_basic_info_result get_all_books_basic_info_result = new get_all_books_basic_info_result();
////                        get_all_books_basic_info_result.success = bBBookListInfo;
////                        try {
////                            this.sendResponse(cVar, get_all_books_basic_info_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_all_books_basic_info_result get_all_books_basic_info_result = new get_all_books_basic_info_result();
////                        if (exc instanceof BESystemException) {
////                            get_all_books_basic_info_result.sysException = (BESystemException) exc;
////                            get_all_books_basic_info_result.setSysExceptionIsSet(true);
////                            fVar = get_all_books_basic_info_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_all_books_basic_info_result.logicException = (BELogicException) exc;
////                            get_all_books_basic_info_result.setLogicExceptionIsSet(true);
////                            fVar = get_all_books_basic_info_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_all_books_basic_info_args get_all_books_basic_info_args, AsyncMethodCallback<BBBookListInfo> aVar) {
////                i.get_all_books_basic_info(aVar);
////            }
////        }
////
////        public class get_all_notify_msgs<I extends AsyncIface> extends AsyncProcessFunction<I, get_all_notify_msgs_args, List<BBUserNotifyMsg>> {
////            public get_all_notify_msgs() {
////                super("get_all_notify_msgs");
////            }
////
////            public get_all_notify_msgs_args getEmptyArgsInstance() {
////                return new get_all_notify_msgs_args();
////            }
////
////            public AsyncMethodCallback<List<BBUserNotifyMsg>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBUserNotifyMsg>>() {
////                    public void onComplete(List<BBUserNotifyMsg> list) {
////                        get_all_notify_msgs_result get_all_notify_msgs_result = new get_all_notify_msgs_result();
////                        get_all_notify_msgs_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_all_notify_msgs_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_all_notify_msgs_result get_all_notify_msgs_result = new get_all_notify_msgs_result();
////                        if (exc instanceof BESystemException) {
////                            get_all_notify_msgs_result.sysException = (BESystemException) exc;
////                            get_all_notify_msgs_result.setSysExceptionIsSet(true);
////                            fVar = get_all_notify_msgs_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_all_notify_msgs_result.logicException = (BELogicException) exc;
////                            get_all_notify_msgs_result.setLogicExceptionIsSet(true);
////                            fVar = get_all_notify_msgs_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_all_notify_msgs_args get_all_notify_msgs_args, AsyncMethodCallback<List<BBUserNotifyMsg>> aVar) {
////                i.get_all_notify_msgs(aVar);
////            }
////        }
////
////        public class get_all_selected_books_info<I extends AsyncIface> extends AsyncProcessFunction<I, get_all_selected_books_info_args, List<BBUserSelectedBookInfo>> {
////            public get_all_selected_books_info() {
////                super("get_all_selected_books_info");
////            }
////
////            public get_all_selected_books_info_args getEmptyArgsInstance() {
////                return new get_all_selected_books_info_args();
////            }
////
////            public AsyncMethodCallback<List<BBUserSelectedBookInfo>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBUserSelectedBookInfo>>() {
////                    public void onComplete(List<BBUserSelectedBookInfo> list) {
////                        get_all_selected_books_info_result get_all_selected_books_info_result = new get_all_selected_books_info_result();
////                        get_all_selected_books_info_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_all_selected_books_info_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_all_selected_books_info_result get_all_selected_books_info_result = new get_all_selected_books_info_result();
////                        if (exc instanceof BESystemException) {
////                            get_all_selected_books_info_result.sysException = (BESystemException) exc;
////                            get_all_selected_books_info_result.setSysExceptionIsSet(true);
////                            fVar = get_all_selected_books_info_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_all_selected_books_info_result.logicException = (BELogicException) exc;
////                            get_all_selected_books_info_result.setLogicExceptionIsSet(true);
////                            fVar = get_all_selected_books_info_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_all_selected_books_info_args get_all_selected_books_info_args, AsyncMethodCallback<List<BBUserSelectedBookInfo>> aVar) {
////                i.get_all_selected_books_info(aVar);
////            }
////        }
////
////        public class get_book_last_updated_time<I extends AsyncIface> extends AsyncProcessFunction<I, get_book_last_updated_time_args, BBUserTailoredBookInfo> {
////            public get_book_last_updated_time() {
////                super("get_book_last_updated_time");
////            }
////
////            public get_book_last_updated_time_args getEmptyArgsInstance() {
////                return new get_book_last_updated_time_args();
////            }
////
////            public AsyncMethodCallback<BBUserTailoredBookInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBUserTailoredBookInfo>() {
////                    public void onComplete(BBUserTailoredBookInfo bBUserTailoredBookInfo) {
////                        get_book_last_updated_time_result get_book_last_updated_time_result = new get_book_last_updated_time_result();
////                        get_book_last_updated_time_result.success = bBUserTailoredBookInfo;
////                        try {
////                            this.sendResponse(cVar, get_book_last_updated_time_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_book_last_updated_time_result get_book_last_updated_time_result = new get_book_last_updated_time_result();
////                        if (exc instanceof BESystemException) {
////                            get_book_last_updated_time_result.sysException = (BESystemException) exc;
////                            get_book_last_updated_time_result.setSysExceptionIsSet(true);
////                            fVar = get_book_last_updated_time_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_book_last_updated_time_result.logicException = (BELogicException) exc;
////                            get_book_last_updated_time_result.setLogicExceptionIsSet(true);
////                            fVar = get_book_last_updated_time_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_book_last_updated_time_args get_book_last_updated_time_args, AsyncMethodCallback<BBUserTailoredBookInfo> aVar) {
////                i.get_book_last_updated_time(get_book_last_updated_time_args.book_info, aVar);
////            }
////        }
////
////        public class get_daka_share_info<I extends AsyncIface> extends AsyncProcessFunction<I, get_daka_share_info_args, BBDakaShowInfo> {
////            public get_daka_share_info() {
////                super("get_daka_share_info");
////            }
////
////            public get_daka_share_info_args getEmptyArgsInstance() {
////                return new get_daka_share_info_args();
////            }
////
////            public AsyncMethodCallback<BBDakaShowInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBDakaShowInfo>() {
////                    public void onComplete(BBDakaShowInfo bBDakaShowInfo) {
////                        get_daka_share_info_result get_daka_share_info_result = new get_daka_share_info_result();
////                        get_daka_share_info_result.success = bBDakaShowInfo;
////                        try {
////                            this.sendResponse(cVar, get_daka_share_info_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_daka_share_info_result get_daka_share_info_result = new get_daka_share_info_result();
////                        if (exc instanceof BESystemException) {
////                            get_daka_share_info_result.sysException = (BESystemException) exc;
////                            get_daka_share_info_result.setSysExceptionIsSet(true);
////                            fVar = get_daka_share_info_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_daka_share_info_result.logicException = (BELogicException) exc;
////                            get_daka_share_info_result.setLogicExceptionIsSet(true);
////                            fVar = get_daka_share_info_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_daka_share_info_args get_daka_share_info_args, AsyncMethodCallback<BBDakaShowInfo> aVar) {
////                i.get_daka_share_info(get_daka_share_info_args.word_level_id, aVar);
////            }
////        }
////
////        public class get_learned_words_list<I extends AsyncIface> extends AsyncProcessFunction<I, get_learned_words_list_args, List<BBTopicInfo>> {
////            public get_learned_words_list() {
////                super("get_learned_words_list");
////            }
////
////            public get_learned_words_list_args getEmptyArgsInstance() {
////                return new get_learned_words_list_args();
////            }
////
////            public AsyncMethodCallback<List<BBTopicInfo>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBTopicInfo>>() {
////                    public void onComplete(List<BBTopicInfo> list) {
////                        get_learned_words_list_result get_learned_words_list_result = new get_learned_words_list_result();
////                        get_learned_words_list_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_learned_words_list_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_learned_words_list_result get_learned_words_list_result = new get_learned_words_list_result();
////                        if (exc instanceof BESystemException) {
////                            get_learned_words_list_result.sysException = (BESystemException) exc;
////                            get_learned_words_list_result.setSysExceptionIsSet(true);
////                            fVar = get_learned_words_list_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_learned_words_list_result.logicException = (BELogicException) exc;
////                            get_learned_words_list_result.setLogicExceptionIsSet(true);
////                            fVar = get_learned_words_list_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_learned_words_list_args get_learned_words_list_args, AsyncMethodCallback<List<BBTopicInfo>> aVar) {
////                i.get_learned_words_list(aVar);
////            }
////        }
////
////        public class get_like_times<I extends AsyncIface> extends AsyncProcessFunction<I, get_like_times_args, Map<Integer, Integer>> {
////            public get_like_times() {
////                super("get_like_times");
////            }
////
////            public get_like_times_args getEmptyArgsInstance() {
////                return new get_like_times_args();
////            }
////
////            public AsyncMethodCallback<Map<Integer, Integer>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Map<Integer, Integer>>() {
////                    public void onComplete(Map<Integer, Integer> map) {
////                        get_like_times_result get_like_times_result = new get_like_times_result();
////                        get_like_times_result.success = map;
////                        try {
////                            this.sendResponse(cVar, get_like_times_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_like_times_result get_like_times_result = new get_like_times_result();
////                        if (exc instanceof BESystemException) {
////                            get_like_times_result.sysException = (BESystemException) exc;
////                            get_like_times_result.setSysExceptionIsSet(true);
////                            fVar = get_like_times_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_like_times_result.logicException = (BELogicException) exc;
////                            get_like_times_result.setLogicExceptionIsSet(true);
////                            fVar = get_like_times_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_like_times_args get_like_times_args, AsyncMethodCallback<Map<Integer, Integer>> aVar) {
////                i.get_like_times(get_like_times_args.notification_ids, aVar);
////            }
////        }
////
////        public class get_miscs<I extends AsyncIface> extends AsyncProcessFunction<I, get_miscs_args, List<BBMiscInfo>> {
////            public get_miscs() {
////                super("get_miscs");
////            }
////
////            public get_miscs_args getEmptyArgsInstance() {
////                return new get_miscs_args();
////            }
////
////            public AsyncMethodCallback<List<BBMiscInfo>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBMiscInfo>>() {
////                    public void onComplete(List<BBMiscInfo> list) {
////                        get_miscs_result get_miscs_result = new get_miscs_result();
////                        get_miscs_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_miscs_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_miscs_result get_miscs_result = new get_miscs_result();
////                        if (exc instanceof BESystemException) {
////                            get_miscs_result.sysException = (BESystemException) exc;
////                            get_miscs_result.setSysExceptionIsSet(true);
////                            fVar = get_miscs_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_miscs_result.logicException = (BELogicException) exc;
////                            get_miscs_result.setLogicExceptionIsSet(true);
////                            fVar = get_miscs_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_miscs_args get_miscs_args, AsyncMethodCallback<List<BBMiscInfo>> aVar) {
////                i.get_miscs(aVar);
////            }
////        }
////
////        public class get_notify_info<I extends AsyncIface> extends AsyncProcessFunction<I, get_notify_info_args, BBUserNotifyResult> {
////            public get_notify_info() {
////                super("get_notify_info");
////            }
////
////            public get_notify_info_args getEmptyArgsInstance() {
////                return new get_notify_info_args();
////            }
////
////            public AsyncMethodCallback<BBUserNotifyResult> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBUserNotifyResult>() {
////                    public void onComplete(BBUserNotifyResult bBUserNotifyResult) {
////                        get_notify_info_result get_notify_info_result = new get_notify_info_result();
////                        get_notify_info_result.success = bBUserNotifyResult;
////                        try {
////                            this.sendResponse(cVar, get_notify_info_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_notify_info_result get_notify_info_result = new get_notify_info_result();
////                        if (exc instanceof BESystemException) {
////                            get_notify_info_result.sysException = (BESystemException) exc;
////                            get_notify_info_result.setSysExceptionIsSet(true);
////                            fVar = get_notify_info_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_notify_info_result.logicException = (BELogicException) exc;
////                            get_notify_info_result.setLogicExceptionIsSet(true);
////                            fVar = get_notify_info_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_notify_info_args get_notify_info_args, AsyncMethodCallback<BBUserNotifyResult> aVar) {
////                i.get_notify_info(aVar);
////            }
////        }
////
////        public class get_shopping_ad<I extends AsyncIface> extends AsyncProcessFunction<I, get_shopping_ad_args, BBShoppingAd> {
////            public get_shopping_ad() {
////                super("get_shopping_ad");
////            }
////
////            public get_shopping_ad_args getEmptyArgsInstance() {
////                return new get_shopping_ad_args();
////            }
////
////            public AsyncMethodCallback<BBShoppingAd> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBShoppingAd>() {
////                    public void onComplete(BBShoppingAd bBShoppingAd) {
////                        get_shopping_ad_result get_shopping_ad_result = new get_shopping_ad_result();
////                        get_shopping_ad_result.success = bBShoppingAd;
////                        try {
////                            this.sendResponse(cVar, get_shopping_ad_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_shopping_ad_result get_shopping_ad_result = new get_shopping_ad_result();
////                        if (exc instanceof BESystemException) {
////                            get_shopping_ad_result.sysException = (BESystemException) exc;
////                            get_shopping_ad_result.setSysExceptionIsSet(true);
////                            fVar = get_shopping_ad_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_shopping_ad_args get_shopping_ad_args, AsyncMethodCallback<BBShoppingAd> aVar) {
////                i.get_shopping_ad(aVar);
////            }
////        }
////
////        public class get_show_ads<I extends AsyncIface> extends AsyncProcessFunction<I, get_show_ads_args, List<Integer>> {
////            public get_show_ads() {
////                super("get_show_ads");
////            }
////
////            public get_show_ads_args getEmptyArgsInstance() {
////                return new get_show_ads_args();
////            }
////
////            public AsyncMethodCallback<List<Integer>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<Integer>>() {
////                    public void onComplete(List<Integer> list) {
////                        get_show_ads_result get_show_ads_result = new get_show_ads_result();
////                        get_show_ads_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_show_ads_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_show_ads_result get_show_ads_result = new get_show_ads_result();
////                        if (exc instanceof BESystemException) {
////                            get_show_ads_result.sysException = (BESystemException) exc;
////                            get_show_ads_result.setSysExceptionIsSet(true);
////                            fVar = get_show_ads_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_show_ads_result.logicException = (BELogicException) exc;
////                            get_show_ads_result.setLogicExceptionIsSet(true);
////                            fVar = get_show_ads_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_show_ads_args get_show_ads_args, AsyncMethodCallback<List<Integer>> aVar) {
////                i.get_show_ads(aVar);
////            }
////        }
////
////        public class get_sys_notifications<I extends AsyncIface> extends AsyncProcessFunction<I, get_sys_notifications_args, List<BBSysNotification>> {
////            public get_sys_notifications() {
////                super("get_sys_notifications");
////            }
////
////            public get_sys_notifications_args getEmptyArgsInstance() {
////                return new get_sys_notifications_args();
////            }
////
////            public AsyncMethodCallback<List<BBSysNotification>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBSysNotification>>() {
////                    public void onComplete(List<BBSysNotification> list) {
////                        get_sys_notifications_result get_sys_notifications_result = new get_sys_notifications_result();
////                        get_sys_notifications_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_sys_notifications_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_sys_notifications_result get_sys_notifications_result = new get_sys_notifications_result();
////                        if (exc instanceof BESystemException) {
////                            get_sys_notifications_result.sysException = (BESystemException) exc;
////                            get_sys_notifications_result.setSysExceptionIsSet(true);
////                            fVar = get_sys_notifications_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_sys_notifications_result.logicException = (BELogicException) exc;
////                            get_sys_notifications_result.setLogicExceptionIsSet(true);
////                            fVar = get_sys_notifications_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_sys_notifications_args get_sys_notifications_args, AsyncMethodCallback<List<BBSysNotification>> aVar) {
////                i.get_sys_notifications(get_sys_notifications_args.last_time, aVar);
////            }
////        }
////
////        public class get_top_sys_notifications<I extends AsyncIface> extends AsyncProcessFunction<I, get_top_sys_notifications_args, List<BBSysNotification>> {
////            public get_top_sys_notifications() {
////                super("get_top_sys_notifications");
////            }
////
////            public get_top_sys_notifications_args getEmptyArgsInstance() {
////                return new get_top_sys_notifications_args();
////            }
////
////            public AsyncMethodCallback<List<BBSysNotification>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBSysNotification>>() {
////                    public void onComplete(List<BBSysNotification> list) {
////                        get_top_sys_notifications_result get_top_sys_notifications_result = new get_top_sys_notifications_result();
////                        get_top_sys_notifications_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_top_sys_notifications_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_top_sys_notifications_result get_top_sys_notifications_result = new get_top_sys_notifications_result();
////                        if (exc instanceof BESystemException) {
////                            get_top_sys_notifications_result.sysException = (BESystemException) exc;
////                            get_top_sys_notifications_result.setSysExceptionIsSet(true);
////                            fVar = get_top_sys_notifications_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_top_sys_notifications_result.logicException = (BELogicException) exc;
////                            get_top_sys_notifications_result.setLogicExceptionIsSet(true);
////                            fVar = get_top_sys_notifications_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_top_sys_notifications_args get_top_sys_notifications_args, AsyncMethodCallback<List<BBSysNotification>> aVar) {
////                i.get_top_sys_notifications(aVar);
////            }
////        }
////
////        public class get_url<I extends AsyncIface> extends AsyncProcessFunction<I, get_url_args, String> {
////            public get_url() {
////                super("get_url");
////            }
////
////            public get_url_args getEmptyArgsInstance() {
////                return new get_url_args();
////            }
////
////            public AsyncMethodCallback<String> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<String>() {
////                    public void onComplete(String str) {
////                        get_url_result get_url_result = new get_url_result();
////                        get_url_result.success = str;
////                        try {
////                            this.sendResponse(cVar, get_url_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_url_result get_url_result = new get_url_result();
////                        if (exc instanceof BESystemException) {
////                            get_url_result.sysException = (BESystemException) exc;
////                            get_url_result.setSysExceptionIsSet(true);
////                            fVar = get_url_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_url_args get_url_args, AsyncMethodCallback<String> aVar) {
////                i.get_url(aVar);
////            }
////        }
////
////        public class get_user_word_media_record<I extends AsyncIface> extends AsyncProcessFunction<I, get_user_word_media_record_args, List<BBUserWordMedia>> {
////            public get_user_word_media_record() {
////                super("get_user_word_media_record");
////            }
////
////            public get_user_word_media_record_args getEmptyArgsInstance() {
////                return new get_user_word_media_record_args();
////            }
////
////            public AsyncMethodCallback<List<BBUserWordMedia>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBUserWordMedia>>() {
////                    public void onComplete(List<BBUserWordMedia> list) {
////                        get_user_word_media_record_result get_user_word_media_record_result = new get_user_word_media_record_result();
////                        get_user_word_media_record_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_user_word_media_record_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_user_word_media_record_result get_user_word_media_record_result = new get_user_word_media_record_result();
////                        if (exc instanceof BESystemException) {
////                            get_user_word_media_record_result.sysException = (BESystemException) exc;
////                            get_user_word_media_record_result.setSysExceptionIsSet(true);
////                            fVar = get_user_word_media_record_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_user_word_media_record_result.logicException = (BELogicException) exc;
////                            get_user_word_media_record_result.setLogicExceptionIsSet(true);
////                            fVar = get_user_word_media_record_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_user_word_media_record_args get_user_word_media_record_args, AsyncMethodCallback<List<BBUserWordMedia>> aVar) {
////                i.get_user_word_media_record(get_user_word_media_record_args.word_level_id, aVar);
////            }
////        }
////
////        public class get_word_friends_info<I extends AsyncIface> extends AsyncProcessFunction<I, get_word_friends_info_args, String> {
////            public get_word_friends_info() {
////                super("get_word_friends_info");
////            }
////
////            public get_word_friends_info_args getEmptyArgsInstance() {
////                return new get_word_friends_info_args();
////            }
////
////            public AsyncMethodCallback<String> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<String>() {
////                    public void onComplete(String str) {
////                        get_word_friends_info_result get_word_friends_info_result = new get_word_friends_info_result();
////                        get_word_friends_info_result.success = str;
////                        try {
////                            this.sendResponse(cVar, get_word_friends_info_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_word_friends_info_result get_word_friends_info_result = new get_word_friends_info_result();
////                        if (exc instanceof BESystemException) {
////                            get_word_friends_info_result.sysException = (BESystemException) exc;
////                            get_word_friends_info_result.setSysExceptionIsSet(true);
////                            fVar = get_word_friends_info_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_word_friends_info_result.logicException = (BELogicException) exc;
////                            get_word_friends_info_result.setLogicExceptionIsSet(true);
////                            fVar = get_word_friends_info_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_word_friends_info_args get_word_friends_info_args, AsyncMethodCallback<String> aVar) {
////                i.get_word_friends_info(get_word_friends_info_args.word_level_id, aVar);
////            }
////        }
////
////        public class get_word_update_info_by_book<I extends AsyncIface> extends AsyncProcessFunction<I, get_word_update_info_by_book_args, List<BBWordUpdateInfo>> {
////            public get_word_update_info_by_book() {
////                super("get_word_update_info_by_book");
////            }
////
////            public get_word_update_info_by_book_args getEmptyArgsInstance() {
////                return new get_word_update_info_by_book_args();
////            }
////
////            public AsyncMethodCallback<List<BBWordUpdateInfo>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBWordUpdateInfo>>() {
////                    public void onComplete(List<BBWordUpdateInfo> list) {
////                        get_word_update_info_by_book_result get_word_update_info_by_book_result = new get_word_update_info_by_book_result();
////                        get_word_update_info_by_book_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_word_update_info_by_book_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_word_update_info_by_book_result get_word_update_info_by_book_result = new get_word_update_info_by_book_result();
////                        if (exc instanceof BESystemException) {
////                            get_word_update_info_by_book_result.sysException = (BESystemException) exc;
////                            get_word_update_info_by_book_result.setSysExceptionIsSet(true);
////                            fVar = get_word_update_info_by_book_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_word_update_info_by_book_result.logicException = (BELogicException) exc;
////                            get_word_update_info_by_book_result.setLogicExceptionIsSet(true);
////                            fVar = get_word_update_info_by_book_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_word_update_info_by_book_args get_word_update_info_by_book_args, AsyncMethodCallback<List<BBWordUpdateInfo>> aVar) {
////                i.get_word_update_info_by_book(get_word_update_info_by_book_args.word_level_id, aVar);
////            }
////        }
////
////        public class get_word_update_md5_by_book<I extends AsyncIface> extends AsyncProcessFunction<I, get_word_update_md5_by_book_args, List<BBWordUpdateMD5>> {
////            public get_word_update_md5_by_book() {
////                super("get_word_update_md5_by_book");
////            }
////
////            public get_word_update_md5_by_book_args getEmptyArgsInstance() {
////                return new get_word_update_md5_by_book_args();
////            }
////
////            public AsyncMethodCallback<List<BBWordUpdateMD5>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBWordUpdateMD5>>() {
////                    public void onComplete(List<BBWordUpdateMD5> list) {
////                        get_word_update_md5_by_book_result get_word_update_md5_by_book_result = new get_word_update_md5_by_book_result();
////                        get_word_update_md5_by_book_result.success = list;
////                        try {
////                            this.sendResponse(cVar, get_word_update_md5_by_book_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        get_word_update_md5_by_book_result get_word_update_md5_by_book_result = new get_word_update_md5_by_book_result();
////                        if (exc instanceof BESystemException) {
////                            get_word_update_md5_by_book_result.sysException = (BESystemException) exc;
////                            get_word_update_md5_by_book_result.setSysExceptionIsSet(true);
////                            fVar = get_word_update_md5_by_book_result;
////                        } else if (exc instanceof BELogicException) {
////                            get_word_update_md5_by_book_result.logicException = (BELogicException) exc;
////                            get_word_update_md5_by_book_result.setLogicExceptionIsSet(true);
////                            fVar = get_word_update_md5_by_book_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, get_word_update_md5_by_book_args get_word_update_md5_by_book_args, AsyncMethodCallback<List<BBWordUpdateMD5>> aVar) {
////                i.get_word_update_md5_by_book(get_word_update_md5_by_book_args.word_level_id, aVar);
////            }
////        }
////
////        public class have_a_try<I extends AsyncIface> extends AsyncProcessFunction<I, have_a_try_args, BBCreateTryResult> {
////            public have_a_try() {
////                super("have_a_try");
////            }
////
////            public have_a_try_args getEmptyArgsInstance() {
////                return new have_a_try_args();
////            }
////
////            public AsyncMethodCallback<BBCreateTryResult> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBCreateTryResult>() {
////                    public void onComplete(BBCreateTryResult bBCreateTryResult) {
////                        have_a_try_result have_a_try_result = new have_a_try_result();
////                        have_a_try_result.success = bBCreateTryResult;
////                        try {
////                            this.sendResponse(cVar, have_a_try_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        have_a_try_result have_a_try_result = new have_a_try_result();
////                        if (exc instanceof BESystemException) {
////                            have_a_try_result.sysException = (BESystemException) exc;
////                            have_a_try_result.setSysExceptionIsSet(true);
////                            fVar = have_a_try_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, have_a_try_args have_a_try_args, AsyncMethodCallback<BBCreateTryResult> aVar) {
////                i.have_a_try(aVar);
////            }
////        }
////
////        public class login<I extends AsyncIface> extends AsyncProcessFunction<I, login_args, BBLoginResult> {
////            public login() {
////                super("login");
////            }
////
////            public login_args getEmptyArgsInstance() {
////                return new login_args();
////            }
////
////            public AsyncMethodCallback<BBLoginResult> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBLoginResult>() {
////                    public void onComplete(BBLoginResult bBLoginResult) {
////                        login_result login_result = new login_result();
////                        login_result.success = bBLoginResult;
////                        try {
////                            this.sendResponse(cVar, login_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        login_result login_result = new login_result();
////                        if (exc instanceof BESystemException) {
////                            login_result.sysException = (BESystemException) exc;
////                            login_result.setSysExceptionIsSet(true);
////                            fVar = login_result;
////                        } else if (exc instanceof BELogicException) {
////                            login_result.logicException = (BELogicException) exc;
////                            login_result.setLogicExceptionIsSet(true);
////                            fVar = login_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, login_args login_args, AsyncMethodCallback<BBLoginResult> aVar) {
////                i.login(login_args.email, login_args.password, aVar);
////            }
////        }
////
////        public class merge_already_learned_words<I extends AsyncIface> extends AsyncProcessFunction<I, merge_already_learned_words_args, Integer> {
////            public merge_already_learned_words() {
////                super("merge_already_learned_words");
////            }
////
////            public merge_already_learned_words_args getEmptyArgsInstance() {
////                return new merge_already_learned_words_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        merge_already_learned_words_result merge_already_learned_words_result = new merge_already_learned_words_result();
////                        merge_already_learned_words_result.success = num.intValue();
////                        merge_already_learned_words_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, merge_already_learned_words_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        merge_already_learned_words_result merge_already_learned_words_result = new merge_already_learned_words_result();
////                        if (exc instanceof BESystemException) {
////                            merge_already_learned_words_result.sysException = (BESystemException) exc;
////                            merge_already_learned_words_result.setSysExceptionIsSet(true);
////                            fVar = merge_already_learned_words_result;
////                        } else if (exc instanceof BELogicException) {
////                            merge_already_learned_words_result.logicException = (BELogicException) exc;
////                            merge_already_learned_words_result.setLogicExceptionIsSet(true);
////                            fVar = merge_already_learned_words_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, merge_already_learned_words_args merge_already_learned_words_args, AsyncMethodCallback<Integer> aVar) {
////                i.merge_already_learned_words(merge_already_learned_words_args.book_id, aVar);
////            }
////        }
////
////        public class modify_password<I extends AsyncIface> extends AsyncProcessFunction<I, modify_password_args, Integer> {
////            public modify_password() {
////                super("modify_password");
////            }
////
////            public modify_password_args getEmptyArgsInstance() {
////                return new modify_password_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        modify_password_result modify_password_result = new modify_password_result();
////                        modify_password_result.success = num.intValue();
////                        modify_password_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, modify_password_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        modify_password_result modify_password_result = new modify_password_result();
////                        if (exc instanceof BESystemException) {
////                            modify_password_result.sysException = (BESystemException) exc;
////                            modify_password_result.setSysExceptionIsSet(true);
////                            fVar = modify_password_result;
////                        } else if (exc instanceof BELogicException) {
////                            modify_password_result.logicException = (BELogicException) exc;
////                            modify_password_result.setLogicExceptionIsSet(true);
////                            fVar = modify_password_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, modify_password_args modify_password_args, AsyncMethodCallback<Integer> aVar) {
////                i.modify_password(modify_password_args.email, modify_password_args.old_password, modify_password_args.new_password, aVar);
////            }
////        }
////
////        public class other_login<I extends AsyncIface> extends AsyncProcessFunction<I, other_login_args, BBOtherLoginResult> {
////            public other_login() {
////                super("other_login");
////            }
////
////            public other_login_args getEmptyArgsInstance() {
////                return new other_login_args();
////            }
////
////            public AsyncMethodCallback<BBOtherLoginResult> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBOtherLoginResult>() {
////                    public void onComplete(BBOtherLoginResult bBOtherLoginResult) {
////                        other_login_result other_login_result = new other_login_result();
////                        other_login_result.success = bBOtherLoginResult;
////                        try {
////                            this.sendResponse(cVar, other_login_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        other_login_result other_login_result = new other_login_result();
////                        if (exc instanceof BESystemException) {
////                            other_login_result.sysException = (BESystemException) exc;
////                            other_login_result.setSysExceptionIsSet(true);
////                            fVar = other_login_result;
////                        } else if (exc instanceof BELogicException) {
////                            other_login_result.logicException = (BELogicException) exc;
////                            other_login_result.setLogicExceptionIsSet(true);
////                            fVar = other_login_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, other_login_args other_login_args, AsyncMethodCallback<BBOtherLoginResult> aVar) {
////                i.other_login(other_login_args.provider, other_login_args.userinfo, other_login_args.is_try_user, aVar);
////            }
////        }
////
////        public class redo_word_friend<I extends AsyncIface> extends AsyncProcessFunction<I, redo_word_friend_args, Integer> {
////            public redo_word_friend() {
////                super("redo_word_friend");
////            }
////
////            public redo_word_friend_args getEmptyArgsInstance() {
////                return new redo_word_friend_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        redo_word_friend_result redo_word_friend_result = new redo_word_friend_result();
////                        redo_word_friend_result.success = num.intValue();
////                        redo_word_friend_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, redo_word_friend_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        redo_word_friend_result redo_word_friend_result = new redo_word_friend_result();
////                        if (exc instanceof BESystemException) {
////                            redo_word_friend_result.sysException = (BESystemException) exc;
////                            redo_word_friend_result.setSysExceptionIsSet(true);
////                            fVar = redo_word_friend_result;
////                        } else if (exc instanceof BELogicException) {
////                            redo_word_friend_result.logicException = (BELogicException) exc;
////                            redo_word_friend_result.setLogicExceptionIsSet(true);
////                            fVar = redo_word_friend_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, redo_word_friend_args redo_word_friend_args, AsyncMethodCallback<Integer> aVar) {
////                i.redo_word_friend(aVar);
////            }
////        }
////
////        public class register_user<I extends AsyncIface> extends AsyncProcessFunction<I, register_user_args, Integer> {
////            public register_user() {
////                super("register_user");
////            }
////
////            public register_user_args getEmptyArgsInstance() {
////                return new register_user_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        register_user_result register_user_result = new register_user_result();
////                        register_user_result.success = num.intValue();
////                        register_user_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, register_user_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        register_user_result register_user_result = new register_user_result();
////                        if (exc instanceof BESystemException) {
////                            register_user_result.sysException = (BESystemException) exc;
////                            register_user_result.setSysExceptionIsSet(true);
////                            fVar = register_user_result;
////                        } else if (exc instanceof BELogicException) {
////                            register_user_result.logicException = (BELogicException) exc;
////                            register_user_result.setLogicExceptionIsSet(true);
////                            fVar = register_user_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, register_user_args register_user_args, AsyncMethodCallback<Integer> aVar) {
////                i.register_user(register_user_args.email, register_user_args.password, aVar);
////            }
////        }
////
////        public class reset_done_score_data<I extends AsyncIface> extends AsyncProcessFunction<I, reset_done_score_data_args, Integer> {
////            public reset_done_score_data() {
////                super("reset_done_score_data");
////            }
////
////            public reset_done_score_data_args getEmptyArgsInstance() {
////                return new reset_done_score_data_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        reset_done_score_data_result reset_done_score_data_result = new reset_done_score_data_result();
////                        reset_done_score_data_result.success = num.intValue();
////                        reset_done_score_data_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, reset_done_score_data_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        reset_done_score_data_result reset_done_score_data_result = new reset_done_score_data_result();
////                        if (exc instanceof BESystemException) {
////                            reset_done_score_data_result.sysException = (BESystemException) exc;
////                            reset_done_score_data_result.setSysExceptionIsSet(true);
////                            fVar = reset_done_score_data_result;
////                        } else if (exc instanceof BELogicException) {
////                            reset_done_score_data_result.logicException = (BELogicException) exc;
////                            reset_done_score_data_result.setLogicExceptionIsSet(true);
////                            fVar = reset_done_score_data_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, reset_done_score_data_args reset_done_score_data_args, AsyncMethodCallback<Integer> aVar) {
////                i.reset_done_score_data(reset_done_score_data_args.word_level_id, aVar);
////            }
////        }
////
////        public class roadmap_by_word_level<I extends AsyncIface> extends AsyncProcessFunction<I, roadmap_by_word_level_args, List<BBRoadMapElement>> {
////            public roadmap_by_word_level() {
////                super("roadmap_by_word_level");
////            }
////
////            public roadmap_by_word_level_args getEmptyArgsInstance() {
////                return new roadmap_by_word_level_args();
////            }
////
////            public AsyncMethodCallback<List<BBRoadMapElement>> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<List<BBRoadMapElement>>() {
////                    public void onComplete(List<BBRoadMapElement> list) {
////                        roadmap_by_word_level_result roadmap_by_word_level_result = new roadmap_by_word_level_result();
////                        roadmap_by_word_level_result.success = list;
////                        try {
////                            this.sendResponse(cVar, roadmap_by_word_level_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        roadmap_by_word_level_result roadmap_by_word_level_result = new roadmap_by_word_level_result();
////                        if (exc instanceof BESystemException) {
////                            roadmap_by_word_level_result.sysException = (BESystemException) exc;
////                            roadmap_by_word_level_result.setSysExceptionIsSet(true);
////                            fVar = roadmap_by_word_level_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, roadmap_by_word_level_args roadmap_by_word_level_args, AsyncMethodCallback<List<BBRoadMapElement>> aVar) {
////                i.roadmap_by_word_level(roadmap_by_word_level_args.current_word_level_id, aVar);
////            }
////        }
////
////        public class save_user_ext_info<I extends AsyncIface> extends AsyncProcessFunction<I, save_user_ext_info_args, Integer> {
////            public save_user_ext_info() {
////                super("save_user_ext_info");
////            }
////
////            public save_user_ext_info_args getEmptyArgsInstance() {
////                return new save_user_ext_info_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        save_user_ext_info_result save_user_ext_info_result = new save_user_ext_info_result();
////                        save_user_ext_info_result.success = num.intValue();
////                        save_user_ext_info_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, save_user_ext_info_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        save_user_ext_info_result save_user_ext_info_result = new save_user_ext_info_result();
////                        if (exc instanceof BESystemException) {
////                            save_user_ext_info_result.sysException = (BESystemException) exc;
////                            save_user_ext_info_result.setSysExceptionIsSet(true);
////                            fVar = save_user_ext_info_result;
////                        } else if (exc instanceof BELogicException) {
////                            save_user_ext_info_result.logicException = (BELogicException) exc;
////                            save_user_ext_info_result.setLogicExceptionIsSet(true);
////                            fVar = save_user_ext_info_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, save_user_ext_info_args save_user_ext_info_args, AsyncMethodCallback<Integer> aVar) {
////                i.save_user_ext_info(save_user_ext_info_args.user_ext_info, aVar);
////            }
////        }
////
////        public class save_word_friend_done_record<I extends AsyncIface> extends AsyncProcessFunction<I, save_word_friend_done_record_args, Integer> {
////            public save_word_friend_done_record() {
////                super("save_word_friend_done_record");
////            }
////
////            public save_word_friend_done_record_args getEmptyArgsInstance() {
////                return new save_word_friend_done_record_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        save_word_friend_done_record_result save_word_friend_done_record_result = new save_word_friend_done_record_result();
////                        save_word_friend_done_record_result.success = num.intValue();
////                        save_word_friend_done_record_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, save_word_friend_done_record_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        save_word_friend_done_record_result save_word_friend_done_record_result = new save_word_friend_done_record_result();
////                        if (exc instanceof BESystemException) {
////                            save_word_friend_done_record_result.sysException = (BESystemException) exc;
////                            save_word_friend_done_record_result.setSysExceptionIsSet(true);
////                            fVar = save_word_friend_done_record_result;
////                        } else if (exc instanceof BELogicException) {
////                            save_word_friend_done_record_result.logicException = (BELogicException) exc;
////                            save_word_friend_done_record_result.setLogicExceptionIsSet(true);
////                            fVar = save_word_friend_done_record_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, save_word_friend_done_record_args save_word_friend_done_record_args, AsyncMethodCallback<Integer> aVar) {
////                i.save_word_friend_done_record(save_word_friend_done_record_args.word_level_id, save_word_friend_done_record_args.done_topic_ids, aVar);
////            }
////        }
////
////        public class select_book<I extends AsyncIface> extends AsyncProcessFunction<I, select_book_args, BBUserSelectedBookInfo> {
////            public select_book() {
////                super("select_book");
////            }
////
////            public select_book_args getEmptyArgsInstance() {
////                return new select_book_args();
////            }
////
////            public AsyncMethodCallback<BBUserSelectedBookInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBUserSelectedBookInfo>() {
////                    public void onComplete(BBUserSelectedBookInfo bBUserSelectedBookInfo) {
////                        select_book_result select_book_result = new select_book_result();
////                        select_book_result.success = bBUserSelectedBookInfo;
////                        try {
////                            this.sendResponse(cVar, select_book_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        select_book_result select_book_result = new select_book_result();
////                        if (exc instanceof BESystemException) {
////                            select_book_result.sysException = (BESystemException) exc;
////                            select_book_result.setSysExceptionIsSet(true);
////                            fVar = select_book_result;
////                        } else if (exc instanceof BELogicException) {
////                            select_book_result.logicException = (BELogicException) exc;
////                            select_book_result.setLogicExceptionIsSet(true);
////                            fVar = select_book_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, select_book_args select_book_args, AsyncMethodCallback<BBUserSelectedBookInfo> aVar) {
////                i.select_book(select_book_args.book_id, select_book_args.end_time, aVar);
////            }
////        }
////
////        public class select_book_v2<I extends AsyncIface> extends AsyncProcessFunction<I, select_book_v2_args, BBSelectedBookInfo> {
////            public select_book_v2() {
////                super("select_book_v2");
////            }
////
////            public select_book_v2_args getEmptyArgsInstance() {
////                return new select_book_v2_args();
////            }
////
////            public AsyncMethodCallback<BBSelectedBookInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBSelectedBookInfo>() {
////                    public void onComplete(BBSelectedBookInfo bBSelectedBookInfo) {
////                        select_book_v2_result select_book_v2_result = new select_book_v2_result();
////                        select_book_v2_result.success = bBSelectedBookInfo;
////                        try {
////                            this.sendResponse(cVar, select_book_v2_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        select_book_v2_result select_book_v2_result = new select_book_v2_result();
////                        if (exc instanceof BESystemException) {
////                            select_book_v2_result.sysException = (BESystemException) exc;
////                            select_book_v2_result.setSysExceptionIsSet(true);
////                            fVar = select_book_v2_result;
////                        } else if (exc instanceof BELogicException) {
////                            select_book_v2_result.logicException = (BELogicException) exc;
////                            select_book_v2_result.setLogicExceptionIsSet(true);
////                            fVar = select_book_v2_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, select_book_v2_args select_book_v2_args, AsyncMethodCallback<BBSelectedBookInfo> aVar) {
////                i.select_book_v2(select_book_v2_args.book_id, select_book_v2_args.end_time, aVar);
////            }
////        }
////
////        public class select_word_level<I extends AsyncIface> extends AsyncProcessFunction<I, select_word_level_args, Integer> {
////            public select_word_level() {
////                super("select_word_level");
////            }
////
////            public select_word_level_args getEmptyArgsInstance() {
////                return new select_word_level_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        select_word_level_result select_word_level_result = new select_word_level_result();
////                        select_word_level_result.success = num.intValue();
////                        select_word_level_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, select_word_level_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        select_word_level_result select_word_level_result = new select_word_level_result();
////                        if (exc instanceof BESystemException) {
////                            select_word_level_result.sysException = (BESystemException) exc;
////                            select_word_level_result.setSysExceptionIsSet(true);
////                            fVar = select_word_level_result;
////                        } else if (exc instanceof BELogicException) {
////                            select_word_level_result.logicException = (BELogicException) exc;
////                            select_word_level_result.setLogicExceptionIsSet(true);
////                            fVar = select_word_level_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, select_word_level_args select_word_level_args, AsyncMethodCallback<Integer> aVar) {
////                i.select_word_level(select_word_level_args.word_level_id, select_word_level_args.end_time, aVar);
////            }
////        }
////
////        public class set_notify_info<I extends AsyncIface> extends AsyncProcessFunction<I, set_notify_info_args, Integer> {
////            public set_notify_info() {
////                super("set_notify_info");
////            }
////
////            public set_notify_info_args getEmptyArgsInstance() {
////                return new set_notify_info_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        set_notify_info_result set_notify_info_result = new set_notify_info_result();
////                        set_notify_info_result.success = num.intValue();
////                        set_notify_info_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, set_notify_info_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        set_notify_info_result set_notify_info_result = new set_notify_info_result();
////                        if (exc instanceof BESystemException) {
////                            set_notify_info_result.sysException = (BESystemException) exc;
////                            set_notify_info_result.setSysExceptionIsSet(true);
////                            fVar = set_notify_info_result;
////                        } else if (exc instanceof BELogicException) {
////                            set_notify_info_result.logicException = (BELogicException) exc;
////                            set_notify_info_result.setLogicExceptionIsSet(true);
////                            fVar = set_notify_info_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, set_notify_info_args set_notify_info_args, AsyncMethodCallback<Integer> aVar) {
////                i.set_notify_info(set_notify_info_args.notify_setting, aVar);
////            }
////        }
////
////        public class sync_user_word_media_record<I extends AsyncIface> extends AsyncProcessFunction<I, sync_user_word_media_record_args, Integer> {
////            public sync_user_word_media_record() {
////                super("sync_user_word_media_record");
////            }
////
////            public sync_user_word_media_record_args getEmptyArgsInstance() {
////                return new sync_user_word_media_record_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        sync_user_word_media_record_result sync_user_word_media_record_result = new sync_user_word_media_record_result();
////                        sync_user_word_media_record_result.success = num.intValue();
////                        sync_user_word_media_record_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, sync_user_word_media_record_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        sync_user_word_media_record_result sync_user_word_media_record_result = new sync_user_word_media_record_result();
////                        if (exc instanceof BESystemException) {
////                            sync_user_word_media_record_result.sysException = (BESystemException) exc;
////                            sync_user_word_media_record_result.setSysExceptionIsSet(true);
////                            fVar = sync_user_word_media_record_result;
////                        } else if (exc instanceof BELogicException) {
////                            sync_user_word_media_record_result.logicException = (BELogicException) exc;
////                            sync_user_word_media_record_result.setLogicExceptionIsSet(true);
////                            fVar = sync_user_word_media_record_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, sync_user_word_media_record_args sync_user_word_media_record_args, AsyncMethodCallback<Integer> aVar) {
////                i.sync_user_word_media_record(sync_user_word_media_record_args.user_media_records, aVar);
////            }
////        }
////
////        public class update_done_data<I extends AsyncIface> extends AsyncProcessFunction<I, update_done_data_args, Integer> {
////            public update_done_data() {
////                super("update_done_data");
////            }
////
////            public update_done_data_args getEmptyArgsInstance() {
////                return new update_done_data_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        update_done_data_result update_done_data_result = new update_done_data_result();
////                        update_done_data_result.success = num.intValue();
////                        update_done_data_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, update_done_data_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        update_done_data_result update_done_data_result = new update_done_data_result();
////                        if (exc instanceof BESystemException) {
////                            update_done_data_result.sysException = (BESystemException) exc;
////                            update_done_data_result.setSysExceptionIsSet(true);
////                            fVar = update_done_data_result;
////                        } else if (exc instanceof BELogicException) {
////                            update_done_data_result.logicException = (BELogicException) exc;
////                            update_done_data_result.setLogicExceptionIsSet(true);
////                            fVar = update_done_data_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, update_done_data_args update_done_data_args, AsyncMethodCallback<Integer> aVar) {
////                i.update_done_data(update_done_data_args.last_sync_at, update_done_data_args.arr_done_records, update_done_data_args.current_word_level_id, update_done_data_args.is_today_completed, aVar);
////            }
////        }
////
////        public class update_miscs<I extends AsyncIface> extends AsyncProcessFunction<I, update_miscs_args, Integer> {
////            public update_miscs() {
////                super("update_miscs");
////            }
////
////            public update_miscs_args getEmptyArgsInstance() {
////                return new update_miscs_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        update_miscs_result update_miscs_result = new update_miscs_result();
////                        update_miscs_result.success = num.intValue();
////                        update_miscs_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, update_miscs_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        update_miscs_result update_miscs_result = new update_miscs_result();
////                        if (exc instanceof BESystemException) {
////                            update_miscs_result.sysException = (BESystemException) exc;
////                            update_miscs_result.setSysExceptionIsSet(true);
////                            fVar = update_miscs_result;
////                        } else if (exc instanceof BELogicException) {
////                            update_miscs_result.logicException = (BELogicException) exc;
////                            update_miscs_result.setLogicExceptionIsSet(true);
////                            fVar = update_miscs_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, update_miscs_args update_miscs_args, AsyncMethodCallback<Integer> aVar) {
////                i.update_miscs(update_miscs_args.miscs, aVar);
////            }
////        }
////
////        public class update_profile<I extends AsyncIface> extends AsyncProcessFunction<I, update_profile_args, BBProfile> {
////            public update_profile() {
////                super("update_profile");
////            }
////
////            public update_profile_args getEmptyArgsInstance() {
////                return new update_profile_args();
////            }
////
////            public AsyncMethodCallback<BBProfile> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBProfile>() {
////                    public void onComplete(BBProfile bBProfile) {
////                        update_profile_result update_profile_result = new update_profile_result();
////                        update_profile_result.success = bBProfile;
////                        try {
////                            this.sendResponse(cVar, update_profile_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        update_profile_result update_profile_result = new update_profile_result();
////                        if (exc instanceof BESystemException) {
////                            update_profile_result.sysException = (BESystemException) exc;
////                            update_profile_result.setSysExceptionIsSet(true);
////                            fVar = update_profile_result;
////                        } else if (exc instanceof BELogicException) {
////                            update_profile_result.logicException = (BELogicException) exc;
////                            update_profile_result.setLogicExceptionIsSet(true);
////                            fVar = update_profile_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, update_profile_args update_profile_args, AsyncMethodCallback<BBProfile> aVar) {
////                i.update_profile(update_profile_args.title_id, update_profile_args.nick_name, aVar);
////            }
////        }
////
////        public class user_basic_info<I extends AsyncIface> extends AsyncProcessFunction<I, user_basic_info_args, BBBasicInfo> {
////            public user_basic_info() {
////                super("user_basic_info");
////            }
////
////            public user_basic_info_args getEmptyArgsInstance() {
////                return new user_basic_info_args();
////            }
////
////            public AsyncMethodCallback<BBBasicInfo> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<BBBasicInfo>() {
////                    public void onComplete(BBBasicInfo bBBasicInfo) {
////                        user_basic_info_result user_basic_info_result = new user_basic_info_result();
////                        user_basic_info_result.success = bBBasicInfo;
////                        try {
////                            this.sendResponse(cVar, user_basic_info_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        user_basic_info_result user_basic_info_result = new user_basic_info_result();
////                        if (exc instanceof BESystemException) {
////                            user_basic_info_result.sysException = (BESystemException) exc;
////                            user_basic_info_result.setSysExceptionIsSet(true);
////                            fVar = user_basic_info_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, user_basic_info_args user_basic_info_args, AsyncMethodCallback<BBBasicInfo> aVar) {
////                i.user_basic_info(aVar);
////            }
////        }
////
////        public class user_operation_stat<I extends AsyncIface> extends AsyncProcessFunction<I, user_operation_stat_args, Integer> {
////            public user_operation_stat() {
////                super("user_operation_stat");
////            }
////
////            public user_operation_stat_args getEmptyArgsInstance() {
////                return new user_operation_stat_args();
////            }
////
////            public AsyncMethodCallback<Integer> getResultHandler(final C2113c cVar, final int i) {
////                return new AsyncMethodCallback<Integer>() {
////                    public void onComplete(Integer num) {
////                        user_operation_stat_result user_operation_stat_result = new user_operation_stat_result();
////                        user_operation_stat_result.success = num.intValue();
////                        user_operation_stat_result.setSuccessIsSet(true);
////                        try {
////                            this.sendResponse(cVar, user_operation_stat_result, 2, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////
////                    public void onError(Exception exc) {
////                        C2116f fVar;
////                        byte b = 2;
////                        user_operation_stat_result user_operation_stat_result = new user_operation_stat_result();
////                        if (exc instanceof BESystemException) {
////                            user_operation_stat_result.sysException = (BESystemException) exc;
////                            user_operation_stat_result.setSysExceptionIsSet(true);
////                            fVar = user_operation_stat_result;
////                        } else {
////                            fVar = (C2116f) new TApplicationException(6, exc.getMessage());
////                            b = 3;
////                        }
////                        try {
////                            this.sendResponse(cVar, fVar, b, i);
////                        } catch (Exception e) {
////                            AsyncProcessor.LOGGER.error("Exception writing to internal frame buffer", (Throwable) e);
////                            cVar.mo18536c();
////                        }
////                    }
////                };
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public void start(I i, user_operation_stat_args user_operation_stat_args, AsyncMethodCallback<Integer> aVar) {
////                i.user_operation_stat(user_operation_stat_args.operation_logs, aVar);
////            }
////        }
////
////        public AsyncProcessor(I i) {
////            super(i, getProcessMap(new HashMap()));
////        }
////
////        protected AsyncProcessor(I i, Map<String, AsyncProcessFunction<I, ? extends C2116f, ?>> map) {
////            super(i, getProcessMap(map));
////        }
////
////        private static <I extends AsyncIface> Map<String, AsyncProcessFunction<I, ? extends C2116f, ?>> getProcessMap(Map<String, AsyncProcessFunction<I, ? extends C2116f, ?>> map) {
////            map.put("check_infos", new check_infos());
////            map.put("login", new login());
////            map.put("register_user", new register_user());
////            map.put("have_a_try", new have_a_try());
////            map.put("bind_try_user", new bind_try_user());
////            map.put("other_login", new other_login());
////            map.put("forget_password", new forget_password());
////            map.put("modify_password", new modify_password());
////            map.put("user_basic_info", new user_basic_info());
////            map.put("book_list", new book_list());
////            map.put("roadmap_by_word_level", new roadmap_by_word_level());
////            map.put("update_profile", new update_profile());
////            map.put("update_done_data", new update_done_data());
////            map.put("select_word_level", new select_word_level());
////            map.put("select_book", new select_book());
////            map.put("select_book_v2", new select_book_v2());
////            map.put("get_learned_words_list", new get_learned_words_list());
////            map.put("get_notify_info", new get_notify_info());
////            map.put("set_notify_info", new set_notify_info());
////            map.put("get_all_notify_msgs", new get_all_notify_msgs());
////            map.put("get_word_update_info_by_book", new get_word_update_info_by_book());
////            map.put("get_word_update_md5_by_book", new get_word_update_md5_by_book());
////            map.put("do_daka", new do_daka());
////            map.put("do_daka_v2", new do_daka_v2());
////            map.put("get_daka_share_info", new get_daka_share_info());
////            map.put("daka_success_notify", new daka_success_notify());
////            map.put("reset_done_score_data", new reset_done_score_data());
////            map.put("delete_done_score_data", new delete_done_score_data());
////            map.put("sync_user_word_media_record", new sync_user_word_media_record());
////            map.put("get_user_word_media_record", new get_user_word_media_record());
////            map.put("get_ads_list", new get_ads_list());
////            map.put("get_show_ads", new get_show_ads());
////            map.put("get_word_friends_info", new get_word_friends_info());
////            map.put("redo_word_friend", new redo_word_friend());
////            map.put("save_word_friend_done_record", new save_word_friend_done_record());
////            map.put("save_user_ext_info", new save_user_ext_info());
////            map.put("add_word_friend_feedback", new add_word_friend_feedback());
////            map.put("get_all_books_basic_info", new get_all_books_basic_info());
////            map.put("get_all_selected_books_info", new get_all_selected_books_info());
////            map.put("get_book_last_updated_time", new get_book_last_updated_time());
////            map.put("get_ad_custom_menu", new get_ad_custom_menu());
////            map.put("done_word_stat", new done_word_stat());
////            map.put("get_miscs", new get_miscs());
////            map.put("update_miscs", new update_miscs());
////            map.put("merge_already_learned_words", new merge_already_learned_words());
////            map.put("user_operation_stat", new user_operation_stat());
////            map.put("get_sys_notifications", new get_sys_notifications());
////            map.put("get_top_sys_notifications", new get_top_sys_notifications());
////            map.put("get_like_times", new get_like_times());
////            map.put("finish_plan_notify", new finish_plan_notify());
////            map.put("get_url", new get_url());
////            map.put("get_shopping_ad", new get_shopping_ad());
////            return map;
////        }
////    }
////
////    public class Client extends TServiceClient implements Iface {
////
////        public class Factory implements TServiceClientFactory<Client> {
////            public Client getClient(C2100f fVar) {
////                return new Client(fVar);
////            }
////
////            public Client getClient(C2100f fVar, C2100f fVar2) {
////                return new Client(fVar, fVar2);
////            }
////        }
////
////        public Client(C2100f fVar) {
////            super(fVar, fVar);
////        }
////
////        public Client(C2100f fVar, C2100f fVar2) {
////            super(fVar, fVar2);
////        }
////
////        public BBCheckInfo check_infos() {
////            send_check_infos();
////            return recv_check_infos();
////        }
////
////        public void send_check_infos() {
////            sendBase("check_infos", new check_infos_args());
////        }
////
////        public BBCheckInfo recv_check_infos() {
////            check_infos_result check_infos_result = new check_infos_result();
////            receiveBase(check_infos_result, "check_infos");
////            if (check_infos_result.isSetSuccess()) {
////                return check_infos_result.success;
////            }
////            if (check_infos_result.sysException != null) {
////                throw check_infos_result.sysException;
////            }
////            throw new TApplicationException(5, "check_infos failed: unknown result");
////        }
////
////        public BBLoginResult login(String str, String str2) {
////            send_login(str, str2);
////            return recv_login();
////        }
////
////        public void send_login(String str, String str2) {
////            login_args login_args = new login_args();
////            login_args.setEmail(str);
////            login_args.setPassword(str2);
////            sendBase("login", login_args);
////        }
////
////        public BBLoginResult recv_login() {
////            login_result login_result = new login_result();
////            receiveBase(login_result, "login");
////            if (login_result.isSetSuccess()) {
////                return login_result.success;
////            }
////            if (login_result.sysException != null) {
////                throw login_result.sysException;
////            } else if (login_result.logicException != null) {
////                throw login_result.logicException;
////            } else {
////                throw new TApplicationException(5, "login failed: unknown result");
////            }
////        }
////
////        public int register_user(String str, String str2) {
////            send_register_user(str, str2);
////            return recv_register_user();
////        }
////
////        public void send_register_user(String str, String str2) {
////            register_user_args register_user_args = new register_user_args();
////            register_user_args.setEmail(str);
////            register_user_args.setPassword(str2);
////            sendBase("register_user", register_user_args);
////        }
////
////        public int recv_register_user() {
////            register_user_result register_user_result = new register_user_result();
////            receiveBase(register_user_result, "register_user");
////            if (register_user_result.isSetSuccess()) {
////                return register_user_result.success;
////            }
////            if (register_user_result.sysException != null) {
////                throw register_user_result.sysException;
////            } else if (register_user_result.logicException != null) {
////                throw register_user_result.logicException;
////            } else {
////                throw new TApplicationException(5, "register_user failed: unknown result");
////            }
////        }
////
////        public BBCreateTryResult have_a_try() {
////            send_have_a_try();
////            return recv_have_a_try();
////        }
////
////        public void send_have_a_try() {
////            sendBase("have_a_try", new have_a_try_args());
////        }
////
////        public BBCreateTryResult recv_have_a_try() {
////            have_a_try_result have_a_try_result = new have_a_try_result();
////            receiveBase(have_a_try_result, "have_a_try");
////            if (have_a_try_result.isSetSuccess()) {
////                return have_a_try_result.success;
////            }
////            if (have_a_try_result.sysException != null) {
////                throw have_a_try_result.sysException;
////            }
////            throw new TApplicationException(5, "have_a_try failed: unknown result");
////        }
////
////        public int bind_try_user(String str, String str2) {
////            send_bind_try_user(str, str2);
////            return recv_bind_try_user();
////        }
////
////        public void send_bind_try_user(String str, String str2) {
////            bind_try_user_args bind_try_user_args = new bind_try_user_args();
////            bind_try_user_args.setEmail(str);
////            bind_try_user_args.setPassword(str2);
////            sendBase("bind_try_user", bind_try_user_args);
////        }
////
////        public int recv_bind_try_user() {
////            bind_try_user_result bind_try_user_result = new bind_try_user_result();
////            receiveBase(bind_try_user_result, "bind_try_user");
////            if (bind_try_user_result.isSetSuccess()) {
////                return bind_try_user_result.success;
////            }
////            if (bind_try_user_result.sysException != null) {
////                throw bind_try_user_result.sysException;
////            } else if (bind_try_user_result.logicException != null) {
////                throw bind_try_user_result.logicException;
////            } else {
////                throw new TApplicationException(5, "bind_try_user failed: unknown result");
////            }
////        }
////
////        public BBOtherLoginResult other_login(String str, BB3PartyUserInfo bB3PartyUserInfo, int i) {
////            send_other_login(str, bB3PartyUserInfo, i);
////            return recv_other_login();
////        }
////
////        public void send_other_login(String str, BB3PartyUserInfo bB3PartyUserInfo, int i) {
////            other_login_args other_login_args = new other_login_args();
////            other_login_args.setProvider(str);
////            other_login_args.setUserinfo(bB3PartyUserInfo);
////            other_login_args.setIs_try_user(i);
////            sendBase("other_login", other_login_args);
////        }
////
////        public BBOtherLoginResult recv_other_login() {
////            other_login_result other_login_result = new other_login_result();
////            receiveBase(other_login_result, "other_login");
////            if (other_login_result.isSetSuccess()) {
////                return other_login_result.success;
////            }
////            if (other_login_result.sysException != null) {
////                throw other_login_result.sysException;
////            } else if (other_login_result.logicException != null) {
////                throw other_login_result.logicException;
////            } else {
////                throw new TApplicationException(5, "other_login failed: unknown result");
////            }
////        }
////
////        public int forget_password(String str) {
////            send_forget_password(str);
////            return recv_forget_password();
////        }
////
////        public void send_forget_password(String str) {
////            forget_password_args forget_password_args = new forget_password_args();
////            forget_password_args.setEmail(str);
////            sendBase("forget_password", forget_password_args);
////        }
////
////        public int recv_forget_password() {
////            forget_password_result forget_password_result = new forget_password_result();
////            receiveBase(forget_password_result, "forget_password");
////            if (forget_password_result.isSetSuccess()) {
////                return forget_password_result.success;
////            }
////            if (forget_password_result.sysException != null) {
////                throw forget_password_result.sysException;
////            } else if (forget_password_result.logicException != null) {
////                throw forget_password_result.logicException;
////            } else {
////                throw new TApplicationException(5, "forget_password failed: unknown result");
////            }
////        }
////
////        public int modify_password(String str, String str2, String str3) {
////            send_modify_password(str, str2, str3);
////            return recv_modify_password();
////        }
////
////        public void send_modify_password(String str, String str2, String str3) {
////            modify_password_args modify_password_args = new modify_password_args();
////            modify_password_args.setEmail(str);
////            modify_password_args.setOld_password(str2);
////            modify_password_args.setNew_password(str3);
////            sendBase("modify_password", modify_password_args);
////        }
////
////        public int recv_modify_password() {
////            modify_password_result modify_password_result = new modify_password_result();
////            receiveBase(modify_password_result, "modify_password");
////            if (modify_password_result.isSetSuccess()) {
////                return modify_password_result.success;
////            }
////            if (modify_password_result.sysException != null) {
////                throw modify_password_result.sysException;
////            } else if (modify_password_result.logicException != null) {
////                throw modify_password_result.logicException;
////            } else {
////                throw new TApplicationException(5, "modify_password failed: unknown result");
////            }
////        }
////
////        public BBBasicInfo user_basic_info() {
////            send_user_basic_info();
////            return recv_user_basic_info();
////        }
////
////        public void send_user_basic_info() {
////            sendBase("user_basic_info", new user_basic_info_args());
////        }
////
////        public BBBasicInfo recv_user_basic_info() {
////            user_basic_info_result user_basic_info_result = new user_basic_info_result();
////            receiveBase(user_basic_info_result, "user_basic_info");
////            if (user_basic_info_result.isSetSuccess()) {
////                return user_basic_info_result.success;
////            }
////            if (user_basic_info_result.sysException != null) {
////                throw user_basic_info_result.sysException;
////            }
////            throw new TApplicationException(5, "user_basic_info failed: unknown result");
////        }
////
////        public BBBookList book_list(boolean z) {
////            send_book_list(z);
////            return recv_book_list();
////        }
////
////        public void send_book_list(boolean z) {
////            book_list_args book_list_args = new book_list_args();
////            book_list_args.setOnly_selected(z);
////            sendBase("book_list", book_list_args);
////        }
////
////        public BBBookList recv_book_list() {
////            book_list_result book_list_result = new book_list_result();
////            receiveBase(book_list_result, "book_list");
////            if (book_list_result.isSetSuccess()) {
////                return book_list_result.success;
////            }
////            if (book_list_result.sysException != null) {
////                throw book_list_result.sysException;
////            }
////            throw new TApplicationException(5, "book_list failed: unknown result");
////        }
////
////        public List<BBRoadMapElement> roadmap_by_word_level(int i) {
////            send_roadmap_by_word_level(i);
////            return recv_roadmap_by_word_level();
////        }
////
////        public void send_roadmap_by_word_level(int i) {
////            roadmap_by_word_level_args roadmap_by_word_level_args = new roadmap_by_word_level_args();
////            roadmap_by_word_level_args.setCurrent_word_level_id(i);
////            sendBase("roadmap_by_word_level", roadmap_by_word_level_args);
////        }
////
////        public List<BBRoadMapElement> recv_roadmap_by_word_level() {
////            roadmap_by_word_level_result roadmap_by_word_level_result = new roadmap_by_word_level_result();
////            receiveBase(roadmap_by_word_level_result, "roadmap_by_word_level");
////            if (roadmap_by_word_level_result.isSetSuccess()) {
////                return roadmap_by_word_level_result.success;
////            }
////            if (roadmap_by_word_level_result.sysException != null) {
////                throw roadmap_by_word_level_result.sysException;
////            }
////            throw new TApplicationException(5, "roadmap_by_word_level failed: unknown result");
////        }
////
////        public BBProfile update_profile(int i, String str) {
////            send_update_profile(i, str);
////            return recv_update_profile();
////        }
////
////        public void send_update_profile(int i, String str) {
////            update_profile_args update_profile_args = new update_profile_args();
////            update_profile_args.setTitle_id(i);
////            update_profile_args.setNick_name(str);
////            sendBase("update_profile", update_profile_args);
////        }
////
////        public BBProfile recv_update_profile() {
////            update_profile_result update_profile_result = new update_profile_result();
////            receiveBase(update_profile_result, "update_profile");
////            if (update_profile_result.isSetSuccess()) {
////                return update_profile_result.success;
////            }
////            if (update_profile_result.sysException != null) {
////                throw update_profile_result.sysException;
////            } else if (update_profile_result.logicException != null) {
////                throw update_profile_result.logicException;
////            } else {
////                throw new TApplicationException(5, "update_profile failed: unknown result");
////            }
////        }
////
////        public int update_done_data(long j, List<BBDoneRecord> list, int i, boolean z) {
////            send_update_done_data(j, list, i, z);
////            return recv_update_done_data();
////        }
////
////        public void send_update_done_data(long j, List<BBDoneRecord> list, int i, boolean z) {
////            update_done_data_args update_done_data_args = new update_done_data_args();
////            update_done_data_args.setLast_sync_at(j);
////            update_done_data_args.setArr_done_records(list);
////            update_done_data_args.setCurrent_word_level_id(i);
////            update_done_data_args.setIs_today_completed(z);
////            sendBase("update_done_data", update_done_data_args);
////        }
////
////        public int recv_update_done_data() {
////            update_done_data_result update_done_data_result = new update_done_data_result();
////            receiveBase(update_done_data_result, "update_done_data");
////            if (update_done_data_result.isSetSuccess()) {
////                return update_done_data_result.success;
////            }
////            if (update_done_data_result.sysException != null) {
////                throw update_done_data_result.sysException;
////            } else if (update_done_data_result.logicException != null) {
////                throw update_done_data_result.logicException;
////            } else {
////                throw new TApplicationException(5, "update_done_data failed: unknown result");
////            }
////        }
////
////        public int select_word_level(int i, long j) {
////            send_select_word_level(i, j);
////            return recv_select_word_level();
////        }
////
////        public void send_select_word_level(int i, long j) {
////            select_word_level_args select_word_level_args = new select_word_level_args();
////            select_word_level_args.setWord_level_id(i);
////            select_word_level_args.setEnd_time(j);
////            sendBase("select_word_level", select_word_level_args);
////        }
////
////        public int recv_select_word_level() {
////            select_word_level_result select_word_level_result = new select_word_level_result();
////            receiveBase(select_word_level_result, "select_word_level");
////            if (select_word_level_result.isSetSuccess()) {
////                return select_word_level_result.success;
////            }
////            if (select_word_level_result.sysException != null) {
////                throw select_word_level_result.sysException;
////            } else if (select_word_level_result.logicException != null) {
////                throw select_word_level_result.logicException;
////            } else {
////                throw new TApplicationException(5, "select_word_level failed: unknown result");
////            }
////        }
////
////        public BBUserSelectedBookInfo select_book(int i, long j) {
////            send_select_book(i, j);
////            return recv_select_book();
////        }
////
////        public void send_select_book(int i, long j) {
////            select_book_args select_book_args = new select_book_args();
////            select_book_args.setBook_id(i);
////            select_book_args.setEnd_time(j);
////            sendBase("select_book", select_book_args);
////        }
////
////        public BBUserSelectedBookInfo recv_select_book() {
////            select_book_result select_book_result = new select_book_result();
////            receiveBase(select_book_result, "select_book");
////            if (select_book_result.isSetSuccess()) {
////                return select_book_result.success;
////            }
////            if (select_book_result.sysException != null) {
////                throw select_book_result.sysException;
////            } else if (select_book_result.logicException != null) {
////                throw select_book_result.logicException;
////            } else {
////                throw new TApplicationException(5, "select_book failed: unknown result");
////            }
////        }
////
////        public BBSelectedBookInfo select_book_v2(int i, long j) {
////            send_select_book_v2(i, j);
////            return recv_select_book_v2();
////        }
////
////        public void send_select_book_v2(int i, long j) {
////            select_book_v2_args select_book_v2_args = new select_book_v2_args();
////            select_book_v2_args.setBook_id(i);
////            select_book_v2_args.setEnd_time(j);
////            sendBase("select_book_v2", select_book_v2_args);
////        }
////
////        public BBSelectedBookInfo recv_select_book_v2() {
////            select_book_v2_result select_book_v2_result = new select_book_v2_result();
////            receiveBase(select_book_v2_result, "select_book_v2");
////            if (select_book_v2_result.isSetSuccess()) {
////                return select_book_v2_result.success;
////            }
////            if (select_book_v2_result.sysException != null) {
////                throw select_book_v2_result.sysException;
////            } else if (select_book_v2_result.logicException != null) {
////                throw select_book_v2_result.logicException;
////            } else {
////                throw new TApplicationException(5, "select_book_v2 failed: unknown result");
////            }
////        }
////
////        public List<BBTopicInfo> get_learned_words_list() {
////            send_get_learned_words_list();
////            return recv_get_learned_words_list();
////        }
////
////        public void send_get_learned_words_list() {
////            sendBase("get_learned_words_list", new get_learned_words_list_args());
////        }
////
////        public List<BBTopicInfo> recv_get_learned_words_list() {
////            get_learned_words_list_result get_learned_words_list_result = new get_learned_words_list_result();
////            receiveBase(get_learned_words_list_result, "get_learned_words_list");
////            if (get_learned_words_list_result.isSetSuccess()) {
////                return get_learned_words_list_result.success;
////            }
////            if (get_learned_words_list_result.sysException != null) {
////                throw get_learned_words_list_result.sysException;
////            } else if (get_learned_words_list_result.logicException != null) {
////                throw get_learned_words_list_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_learned_words_list failed: unknown result");
////            }
////        }
////
////        public BBUserNotifyResult get_notify_info() {
////            send_get_notify_info();
////            return recv_get_notify_info();
////        }
////
////        public void send_get_notify_info() {
////            sendBase("get_notify_info", new get_notify_info_args());
////        }
////
////        public BBUserNotifyResult recv_get_notify_info() {
////            get_notify_info_result get_notify_info_result = new get_notify_info_result();
////            receiveBase(get_notify_info_result, "get_notify_info");
////            if (get_notify_info_result.isSetSuccess()) {
////                return get_notify_info_result.success;
////            }
////            if (get_notify_info_result.sysException != null) {
////                throw get_notify_info_result.sysException;
////            } else if (get_notify_info_result.logicException != null) {
////                throw get_notify_info_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_notify_info failed: unknown result");
////            }
////        }
////
////        public int set_notify_info(BBUserNotifySetting bBUserNotifySetting) {
////            send_set_notify_info(bBUserNotifySetting);
////            return recv_set_notify_info();
////        }
////
////        public void send_set_notify_info(BBUserNotifySetting bBUserNotifySetting) {
////            set_notify_info_args set_notify_info_args = new set_notify_info_args();
////            set_notify_info_args.setNotify_setting(bBUserNotifySetting);
////            sendBase("set_notify_info", set_notify_info_args);
////        }
////
////        public int recv_set_notify_info() {
////            set_notify_info_result set_notify_info_result = new set_notify_info_result();
////            receiveBase(set_notify_info_result, "set_notify_info");
////            if (set_notify_info_result.isSetSuccess()) {
////                return set_notify_info_result.success;
////            }
////            if (set_notify_info_result.sysException != null) {
////                throw set_notify_info_result.sysException;
////            } else if (set_notify_info_result.logicException != null) {
////                throw set_notify_info_result.logicException;
////            } else {
////                throw new TApplicationException(5, "set_notify_info failed: unknown result");
////            }
////        }
////
////        public List<BBUserNotifyMsg> get_all_notify_msgs() {
////            send_get_all_notify_msgs();
////            return recv_get_all_notify_msgs();
////        }
////
////        public void send_get_all_notify_msgs() {
////            sendBase("get_all_notify_msgs", new get_all_notify_msgs_args());
////        }
////
////        public List<BBUserNotifyMsg> recv_get_all_notify_msgs() {
////            get_all_notify_msgs_result get_all_notify_msgs_result = new get_all_notify_msgs_result();
////            receiveBase(get_all_notify_msgs_result, "get_all_notify_msgs");
////            if (get_all_notify_msgs_result.isSetSuccess()) {
////                return get_all_notify_msgs_result.success;
////            }
////            if (get_all_notify_msgs_result.sysException != null) {
////                throw get_all_notify_msgs_result.sysException;
////            } else if (get_all_notify_msgs_result.logicException != null) {
////                throw get_all_notify_msgs_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_all_notify_msgs failed: unknown result");
////            }
////        }
////
////        public List<BBWordUpdateInfo> get_word_update_info_by_book(int i) {
////            send_get_word_update_info_by_book(i);
////            return recv_get_word_update_info_by_book();
////        }
////
////        public void send_get_word_update_info_by_book(int i) {
////            get_word_update_info_by_book_args get_word_update_info_by_book_args = new get_word_update_info_by_book_args();
////            get_word_update_info_by_book_args.setWord_level_id(i);
////            sendBase("get_word_update_info_by_book", get_word_update_info_by_book_args);
////        }
////
////        public List<BBWordUpdateInfo> recv_get_word_update_info_by_book() {
////            get_word_update_info_by_book_result get_word_update_info_by_book_result = new get_word_update_info_by_book_result();
////            receiveBase(get_word_update_info_by_book_result, "get_word_update_info_by_book");
////            if (get_word_update_info_by_book_result.isSetSuccess()) {
////                return get_word_update_info_by_book_result.success;
////            }
////            if (get_word_update_info_by_book_result.sysException != null) {
////                throw get_word_update_info_by_book_result.sysException;
////            } else if (get_word_update_info_by_book_result.logicException != null) {
////                throw get_word_update_info_by_book_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_word_update_info_by_book failed: unknown result");
////            }
////        }
////
////        public List<BBWordUpdateMD5> get_word_update_md5_by_book(int i) {
////            send_get_word_update_md5_by_book(i);
////            return recv_get_word_update_md5_by_book();
////        }
////
////        public void send_get_word_update_md5_by_book(int i) {
////            get_word_update_md5_by_book_args get_word_update_md5_by_book_args = new get_word_update_md5_by_book_args();
////            get_word_update_md5_by_book_args.setWord_level_id(i);
////            sendBase("get_word_update_md5_by_book", get_word_update_md5_by_book_args);
////        }
////
////        public List<BBWordUpdateMD5> recv_get_word_update_md5_by_book() {
////            get_word_update_md5_by_book_result get_word_update_md5_by_book_result = new get_word_update_md5_by_book_result();
////            receiveBase(get_word_update_md5_by_book_result, "get_word_update_md5_by_book");
////            if (get_word_update_md5_by_book_result.isSetSuccess()) {
////                return get_word_update_md5_by_book_result.success;
////            }
////            if (get_word_update_md5_by_book_result.sysException != null) {
////                throw get_word_update_md5_by_book_result.sysException;
////            } else if (get_word_update_md5_by_book_result.logicException != null) {
////                throw get_word_update_md5_by_book_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_word_update_md5_by_book failed: unknown result");
////            }
////        }
////
////        public BBDakaInfo do_daka(int i, int i2) {
////            send_do_daka(i, i2);
////            return recv_do_daka();
////        }
////
////        public void send_do_daka(int i, int i2) {
////            do_daka_args do_daka_args = new do_daka_args();
////            do_daka_args.setDaka_days(i);
////            do_daka_args.setToday_new_learned_count(i2);
////            sendBase("do_daka", do_daka_args);
////        }
////
////        public BBDakaInfo recv_do_daka() {
////            do_daka_result do_daka_result = new do_daka_result();
////            receiveBase(do_daka_result, "do_daka");
////            if (do_daka_result.isSetSuccess()) {
////                return do_daka_result.success;
////            }
////            if (do_daka_result.sysException != null) {
////                throw do_daka_result.sysException;
////            } else if (do_daka_result.logicException != null) {
////                throw do_daka_result.logicException;
////            } else {
////                throw new TApplicationException(5, "do_daka failed: unknown result");
////            }
////        }
////
////        public BBDakaInfo do_daka_v2(int i, List<Integer> list, int i2, int i3) {
////            send_do_daka_v2(i, list, i2, i3);
////            return recv_do_daka_v2();
////        }
////
////        public void send_do_daka_v2(int i, List<Integer> list, int i2, int i3) {
////            do_daka_v2_args do_daka_v2_args = new do_daka_v2_args();
////            do_daka_v2_args.setWord_level_id(i);
////            do_daka_v2_args.setArr_finished_plan_date(list);
////            do_daka_v2_args.setDaka_days(i2);
////            do_daka_v2_args.setToday_new_learned_count(i3);
////            sendBase("do_daka_v2", do_daka_v2_args);
////        }
////
////        public BBDakaInfo recv_do_daka_v2() {
////            do_daka_v2_result do_daka_v2_result = new do_daka_v2_result();
////            receiveBase(do_daka_v2_result, "do_daka_v2");
////            if (do_daka_v2_result.isSetSuccess()) {
////                return do_daka_v2_result.success;
////            }
////            throw new TApplicationException(5, "do_daka_v2 failed: unknown result");
////        }
////
////        public BBDakaShowInfo get_daka_share_info(int i) {
////            send_get_daka_share_info(i);
////            return recv_get_daka_share_info();
////        }
////
////        public void send_get_daka_share_info(int i) {
////            get_daka_share_info_args get_daka_share_info_args = new get_daka_share_info_args();
////            get_daka_share_info_args.setWord_level_id(i);
////            sendBase("get_daka_share_info", get_daka_share_info_args);
////        }
////
////        public BBDakaShowInfo recv_get_daka_share_info() {
////            get_daka_share_info_result get_daka_share_info_result = new get_daka_share_info_result();
////            receiveBase(get_daka_share_info_result, "get_daka_share_info");
////            if (get_daka_share_info_result.isSetSuccess()) {
////                return get_daka_share_info_result.success;
////            }
////            if (get_daka_share_info_result.sysException != null) {
////                throw get_daka_share_info_result.sysException;
////            } else if (get_daka_share_info_result.logicException != null) {
////                throw get_daka_share_info_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_daka_share_info failed: unknown result");
////            }
////        }
////
////        public int daka_success_notify(int i) {
////            send_daka_success_notify(i);
////            return recv_daka_success_notify();
////        }
////
////        public void send_daka_success_notify(int i) {
////            daka_success_notify_args daka_success_notify_args = new daka_success_notify_args();
////            daka_success_notify_args.setDaka_id(i);
////            sendBase("daka_success_notify", daka_success_notify_args);
////        }
////
////        public int recv_daka_success_notify() {
////            daka_success_notify_result daka_success_notify_result = new daka_success_notify_result();
////            receiveBase(daka_success_notify_result, "daka_success_notify");
////            if (daka_success_notify_result.isSetSuccess()) {
////                return daka_success_notify_result.success;
////            }
////            if (daka_success_notify_result.sysException != null) {
////                throw daka_success_notify_result.sysException;
////            } else if (daka_success_notify_result.logicException != null) {
////                throw daka_success_notify_result.logicException;
////            } else {
////                throw new TApplicationException(5, "daka_success_notify failed: unknown result");
////            }
////        }
////
////        public int reset_done_score_data(int i) {
////            send_reset_done_score_data(i);
////            return recv_reset_done_score_data();
////        }
////
////        public void send_reset_done_score_data(int i) {
////            reset_done_score_data_args reset_done_score_data_args = new reset_done_score_data_args();
////            reset_done_score_data_args.setWord_level_id(i);
////            sendBase("reset_done_score_data", reset_done_score_data_args);
////        }
////
////        public int recv_reset_done_score_data() {
////            reset_done_score_data_result reset_done_score_data_result = new reset_done_score_data_result();
////            receiveBase(reset_done_score_data_result, "reset_done_score_data");
////            if (reset_done_score_data_result.isSetSuccess()) {
////                return reset_done_score_data_result.success;
////            }
////            if (reset_done_score_data_result.sysException != null) {
////                throw reset_done_score_data_result.sysException;
////            } else if (reset_done_score_data_result.logicException != null) {
////                throw reset_done_score_data_result.logicException;
////            } else {
////                throw new TApplicationException(5, "reset_done_score_data failed: unknown result");
////            }
////        }
////
////        public int delete_done_score_data(int i) {
////            send_delete_done_score_data(i);
////            return recv_delete_done_score_data();
////        }
////
////        public void send_delete_done_score_data(int i) {
////            delete_done_score_data_args delete_done_score_data_args = new delete_done_score_data_args();
////            delete_done_score_data_args.setWord_level_id(i);
////            sendBase("delete_done_score_data", delete_done_score_data_args);
////        }
////
////        public int recv_delete_done_score_data() {
////            delete_done_score_data_result delete_done_score_data_result = new delete_done_score_data_result();
////            receiveBase(delete_done_score_data_result, "delete_done_score_data");
////            if (delete_done_score_data_result.isSetSuccess()) {
////                return delete_done_score_data_result.success;
////            }
////            if (delete_done_score_data_result.sysException != null) {
////                throw delete_done_score_data_result.sysException;
////            } else if (delete_done_score_data_result.logicException != null) {
////                throw delete_done_score_data_result.logicException;
////            } else {
////                throw new TApplicationException(5, "delete_done_score_data failed: unknown result");
////            }
////        }
////
////        public int sync_user_word_media_record(List<BBUserWordMedia> list) {
////            send_sync_user_word_media_record(list);
////            return recv_sync_user_word_media_record();
////        }
////
////        public void send_sync_user_word_media_record(List<BBUserWordMedia> list) {
////            sync_user_word_media_record_args sync_user_word_media_record_args = new sync_user_word_media_record_args();
////            sync_user_word_media_record_args.setUser_media_records(list);
////            sendBase("sync_user_word_media_record", sync_user_word_media_record_args);
////        }
////
////        public int recv_sync_user_word_media_record() {
////            sync_user_word_media_record_result sync_user_word_media_record_result = new sync_user_word_media_record_result();
////            receiveBase(sync_user_word_media_record_result, "sync_user_word_media_record");
////            if (sync_user_word_media_record_result.isSetSuccess()) {
////                return sync_user_word_media_record_result.success;
////            }
////            if (sync_user_word_media_record_result.sysException != null) {
////                throw sync_user_word_media_record_result.sysException;
////            } else if (sync_user_word_media_record_result.logicException != null) {
////                throw sync_user_word_media_record_result.logicException;
////            } else {
////                throw new TApplicationException(5, "sync_user_word_media_record failed: unknown result");
////            }
////        }
////
////        public List<BBUserWordMedia> get_user_word_media_record(int i) {
////            send_get_user_word_media_record(i);
////            return recv_get_user_word_media_record();
////        }
////
////        public void send_get_user_word_media_record(int i) {
////            get_user_word_media_record_args get_user_word_media_record_args = new get_user_word_media_record_args();
////            get_user_word_media_record_args.setWord_level_id(i);
////            sendBase("get_user_word_media_record", get_user_word_media_record_args);
////        }
////
////        public List<BBUserWordMedia> recv_get_user_word_media_record() {
////            get_user_word_media_record_result get_user_word_media_record_result = new get_user_word_media_record_result();
////            receiveBase(get_user_word_media_record_result, "get_user_word_media_record");
////            if (get_user_word_media_record_result.isSetSuccess()) {
////                return get_user_word_media_record_result.success;
////            }
////            if (get_user_word_media_record_result.sysException != null) {
////                throw get_user_word_media_record_result.sysException;
////            } else if (get_user_word_media_record_result.logicException != null) {
////                throw get_user_word_media_record_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_user_word_media_record failed: unknown result");
////            }
////        }
////
////        public List<BBAdInfo> get_ads_list() {
////            send_get_ads_list();
////            return recv_get_ads_list();
////        }
////
////        public void send_get_ads_list() {
////            sendBase("get_ads_list", new get_ads_list_args());
////        }
////
////        public List<BBAdInfo> recv_get_ads_list() {
////            get_ads_list_result get_ads_list_result = new get_ads_list_result();
////            receiveBase(get_ads_list_result, "get_ads_list");
////            if (get_ads_list_result.isSetSuccess()) {
////                return get_ads_list_result.success;
////            }
////            if (get_ads_list_result.sysException != null) {
////                throw get_ads_list_result.sysException;
////            } else if (get_ads_list_result.logicException != null) {
////                throw get_ads_list_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_ads_list failed: unknown result");
////            }
////        }
////
////        public List<Integer> get_show_ads() {
////            send_get_show_ads();
////            return recv_get_show_ads();
////        }
////
////        public void send_get_show_ads() {
////            sendBase("get_show_ads", new get_show_ads_args());
////        }
////
////        public List<Integer> recv_get_show_ads() {
////            get_show_ads_result get_show_ads_result = new get_show_ads_result();
////            receiveBase(get_show_ads_result, "get_show_ads");
////            if (get_show_ads_result.isSetSuccess()) {
////                return get_show_ads_result.success;
////            }
////            if (get_show_ads_result.sysException != null) {
////                throw get_show_ads_result.sysException;
////            } else if (get_show_ads_result.logicException != null) {
////                throw get_show_ads_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_show_ads failed: unknown result");
////            }
////        }
////
////        public String get_word_friends_info(int i) {
////            send_get_word_friends_info(i);
////            return recv_get_word_friends_info();
////        }
////
////        public void send_get_word_friends_info(int i) {
////            get_word_friends_info_args get_word_friends_info_args = new get_word_friends_info_args();
////            get_word_friends_info_args.setWord_level_id(i);
////            sendBase("get_word_friends_info", get_word_friends_info_args);
////        }
////
////        public String recv_get_word_friends_info() {
////            get_word_friends_info_result get_word_friends_info_result = new get_word_friends_info_result();
////            receiveBase(get_word_friends_info_result, "get_word_friends_info");
////            if (get_word_friends_info_result.isSetSuccess()) {
////                return get_word_friends_info_result.success;
////            }
////            if (get_word_friends_info_result.sysException != null) {
////                throw get_word_friends_info_result.sysException;
////            } else if (get_word_friends_info_result.logicException != null) {
////                throw get_word_friends_info_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_word_friends_info failed: unknown result");
////            }
////        }
////
////        public int redo_word_friend() {
////            send_redo_word_friend();
////            return recv_redo_word_friend();
////        }
////
////        public void send_redo_word_friend() {
////            sendBase("redo_word_friend", new redo_word_friend_args());
////        }
////
////        public int recv_redo_word_friend() {
////            redo_word_friend_result redo_word_friend_result = new redo_word_friend_result();
////            receiveBase(redo_word_friend_result, "redo_word_friend");
////            if (redo_word_friend_result.isSetSuccess()) {
////                return redo_word_friend_result.success;
////            }
////            if (redo_word_friend_result.sysException != null) {
////                throw redo_word_friend_result.sysException;
////            } else if (redo_word_friend_result.logicException != null) {
////                throw redo_word_friend_result.logicException;
////            } else {
////                throw new TApplicationException(5, "redo_word_friend failed: unknown result");
////            }
////        }
////
////        public int save_word_friend_done_record(int i, List<Integer> list) {
////            send_save_word_friend_done_record(i, list);
////            return recv_save_word_friend_done_record();
////        }
////
////        public void send_save_word_friend_done_record(int i, List<Integer> list) {
////            save_word_friend_done_record_args save_word_friend_done_record_args = new save_word_friend_done_record_args();
////            save_word_friend_done_record_args.setWord_level_id(i);
////            save_word_friend_done_record_args.setDone_topic_ids(list);
////            sendBase("save_word_friend_done_record", save_word_friend_done_record_args);
////        }
////
////        public int recv_save_word_friend_done_record() {
////            save_word_friend_done_record_result save_word_friend_done_record_result = new save_word_friend_done_record_result();
////            receiveBase(save_word_friend_done_record_result, "save_word_friend_done_record");
////            if (save_word_friend_done_record_result.isSetSuccess()) {
////                return save_word_friend_done_record_result.success;
////            }
////            if (save_word_friend_done_record_result.sysException != null) {
////                throw save_word_friend_done_record_result.sysException;
////            } else if (save_word_friend_done_record_result.logicException != null) {
////                throw save_word_friend_done_record_result.logicException;
////            } else {
////                throw new TApplicationException(5, "save_word_friend_done_record failed: unknown result");
////            }
////        }
////
////        public int save_user_ext_info(BBUserExtInfo bBUserExtInfo) {
////            send_save_user_ext_info(bBUserExtInfo);
////            return recv_save_user_ext_info();
////        }
////
////        public void send_save_user_ext_info(BBUserExtInfo bBUserExtInfo) {
////            save_user_ext_info_args save_user_ext_info_args = new save_user_ext_info_args();
////            save_user_ext_info_args.setUser_ext_info(bBUserExtInfo);
////            sendBase("save_user_ext_info", save_user_ext_info_args);
////        }
////
////        public int recv_save_user_ext_info() {
////            save_user_ext_info_result save_user_ext_info_result = new save_user_ext_info_result();
////            receiveBase(save_user_ext_info_result, "save_user_ext_info");
////            if (save_user_ext_info_result.isSetSuccess()) {
////                return save_user_ext_info_result.success;
////            }
////            if (save_user_ext_info_result.sysException != null) {
////                throw save_user_ext_info_result.sysException;
////            } else if (save_user_ext_info_result.logicException != null) {
////                throw save_user_ext_info_result.logicException;
////            } else {
////                throw new TApplicationException(5, "save_user_ext_info failed: unknown result");
////            }
////        }
////
////        public int add_word_friend_feedback(int i, String str) {
////            send_add_word_friend_feedback(i, str);
////            return recv_add_word_friend_feedback();
////        }
////
////        public void send_add_word_friend_feedback(int i, String str) {
////            add_word_friend_feedback_args add_word_friend_feedback_args = new add_word_friend_feedback_args();
////            add_word_friend_feedback_args.setTopic_id(i);
////            add_word_friend_feedback_args.setFeedback(str);
////            sendBase("add_word_friend_feedback", add_word_friend_feedback_args);
////        }
////
////        public int recv_add_word_friend_feedback() {
////            add_word_friend_feedback_result add_word_friend_feedback_result = new add_word_friend_feedback_result();
////            receiveBase(add_word_friend_feedback_result, "add_word_friend_feedback");
////            if (add_word_friend_feedback_result.isSetSuccess()) {
////                return add_word_friend_feedback_result.success;
////            }
////            if (add_word_friend_feedback_result.sysException != null) {
////                throw add_word_friend_feedback_result.sysException;
////            } else if (add_word_friend_feedback_result.logicException != null) {
////                throw add_word_friend_feedback_result.logicException;
////            } else {
////                throw new TApplicationException(5, "add_word_friend_feedback failed: unknown result");
////            }
////        }
////
////        public BBBookListInfo get_all_books_basic_info() {
////            send_get_all_books_basic_info();
////            return recv_get_all_books_basic_info();
////        }
////
////        public void send_get_all_books_basic_info() {
////            sendBase("get_all_books_basic_info", new get_all_books_basic_info_args());
////        }
////
////        public BBBookListInfo recv_get_all_books_basic_info() {
////            get_all_books_basic_info_result get_all_books_basic_info_result = new get_all_books_basic_info_result();
////            receiveBase(get_all_books_basic_info_result, "get_all_books_basic_info");
////            if (get_all_books_basic_info_result.isSetSuccess()) {
////                return get_all_books_basic_info_result.success;
////            }
////            if (get_all_books_basic_info_result.sysException != null) {
////                throw get_all_books_basic_info_result.sysException;
////            } else if (get_all_books_basic_info_result.logicException != null) {
////                throw get_all_books_basic_info_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_all_books_basic_info failed: unknown result");
////            }
////        }
////
////        public List<BBUserSelectedBookInfo> get_all_selected_books_info() {
////            send_get_all_selected_books_info();
////            return recv_get_all_selected_books_info();
////        }
////
////        public void send_get_all_selected_books_info() {
////            sendBase("get_all_selected_books_info", new get_all_selected_books_info_args());
////        }
////
////        public List<BBUserSelectedBookInfo> recv_get_all_selected_books_info() {
////            get_all_selected_books_info_result get_all_selected_books_info_result = new get_all_selected_books_info_result();
////            receiveBase(get_all_selected_books_info_result, "get_all_selected_books_info");
////            if (get_all_selected_books_info_result.isSetSuccess()) {
////                return get_all_selected_books_info_result.success;
////            }
////            if (get_all_selected_books_info_result.sysException != null) {
////                throw get_all_selected_books_info_result.sysException;
////            } else if (get_all_selected_books_info_result.logicException != null) {
////                throw get_all_selected_books_info_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_all_selected_books_info failed: unknown result");
////            }
////        }
////
////        public BBUserTailoredBookInfo get_book_last_updated_time(BBUserTailoredBookInfo bBUserTailoredBookInfo) {
////            send_get_book_last_updated_time(bBUserTailoredBookInfo);
////            return recv_get_book_last_updated_time();
////        }
////
////        public void send_get_book_last_updated_time(BBUserTailoredBookInfo bBUserTailoredBookInfo) {
////            get_book_last_updated_time_args get_book_last_updated_time_args = new get_book_last_updated_time_args();
////            get_book_last_updated_time_args.setBook_info(bBUserTailoredBookInfo);
////            sendBase("get_book_last_updated_time", get_book_last_updated_time_args);
////        }
////
////        public BBUserTailoredBookInfo recv_get_book_last_updated_time() {
////            get_book_last_updated_time_result get_book_last_updated_time_result = new get_book_last_updated_time_result();
////            receiveBase(get_book_last_updated_time_result, "get_book_last_updated_time");
////            if (get_book_last_updated_time_result.isSetSuccess()) {
////                return get_book_last_updated_time_result.success;
////            }
////            if (get_book_last_updated_time_result.sysException != null) {
////                throw get_book_last_updated_time_result.sysException;
////            } else if (get_book_last_updated_time_result.logicException != null) {
////                throw get_book_last_updated_time_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_book_last_updated_time failed: unknown result");
////            }
////        }
////
////        public BBAdCustomMenu get_ad_custom_menu() {
////            send_get_ad_custom_menu();
////            return recv_get_ad_custom_menu();
////        }
////
////        public void send_get_ad_custom_menu() {
////            sendBase("get_ad_custom_menu", new get_ad_custom_menu_args());
////        }
////
////        public BBAdCustomMenu recv_get_ad_custom_menu() {
////            get_ad_custom_menu_result get_ad_custom_menu_result = new get_ad_custom_menu_result();
////            receiveBase(get_ad_custom_menu_result, "get_ad_custom_menu");
////            if (get_ad_custom_menu_result.isSetSuccess()) {
////                return get_ad_custom_menu_result.success;
////            }
////            if (get_ad_custom_menu_result.sysException != null) {
////                throw get_ad_custom_menu_result.sysException;
////            } else if (get_ad_custom_menu_result.logicException != null) {
////                throw get_ad_custom_menu_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_ad_custom_menu failed: unknown result");
////            }
////        }
////
////        public int done_word_stat(int i, List<BBDoneWordStatLog> list) {
////            send_done_word_stat(i, list);
////            return recv_done_word_stat();
////        }
////
////        public void send_done_word_stat(int i, List<BBDoneWordStatLog> list) {
////            done_word_stat_args done_word_stat_args = new done_word_stat_args();
////            done_word_stat_args.setBook_id(i);
////            done_word_stat_args.setStat_logs(list);
////            sendBase("done_word_stat", done_word_stat_args);
////        }
////
////        public int recv_done_word_stat() {
////            done_word_stat_result done_word_stat_result = new done_word_stat_result();
////            receiveBase(done_word_stat_result, "done_word_stat");
////            if (done_word_stat_result.isSetSuccess()) {
////                return done_word_stat_result.success;
////            }
////            if (done_word_stat_result.sysException != null) {
////                throw done_word_stat_result.sysException;
////            } else if (done_word_stat_result.logicException != null) {
////                throw done_word_stat_result.logicException;
////            } else {
////                throw new TApplicationException(5, "done_word_stat failed: unknown result");
////            }
////        }
////
////        public List<BBMiscInfo> get_miscs() {
////            send_get_miscs();
////            return recv_get_miscs();
////        }
////
////        public void send_get_miscs() {
////            sendBase("get_miscs", new get_miscs_args());
////        }
////
////        public List<BBMiscInfo> recv_get_miscs() {
////            get_miscs_result get_miscs_result = new get_miscs_result();
////            receiveBase(get_miscs_result, "get_miscs");
////            if (get_miscs_result.isSetSuccess()) {
////                return get_miscs_result.success;
////            }
////            if (get_miscs_result.sysException != null) {
////                throw get_miscs_result.sysException;
////            } else if (get_miscs_result.logicException != null) {
////                throw get_miscs_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_miscs failed: unknown result");
////            }
////        }
////
////        public int update_miscs(List<BBMiscInfo> list) {
////            send_update_miscs(list);
////            return recv_update_miscs();
////        }
////
////        public void send_update_miscs(List<BBMiscInfo> list) {
////            update_miscs_args update_miscs_args = new update_miscs_args();
////            update_miscs_args.setMiscs(list);
////            sendBase("update_miscs", update_miscs_args);
////        }
////
////        public int recv_update_miscs() {
////            update_miscs_result update_miscs_result = new update_miscs_result();
////            receiveBase(update_miscs_result, "update_miscs");
////            if (update_miscs_result.isSetSuccess()) {
////                return update_miscs_result.success;
////            }
////            if (update_miscs_result.sysException != null) {
////                throw update_miscs_result.sysException;
////            } else if (update_miscs_result.logicException != null) {
////                throw update_miscs_result.logicException;
////            } else {
////                throw new TApplicationException(5, "update_miscs failed: unknown result");
////            }
////        }
////
////        public int merge_already_learned_words(int i) {
////            send_merge_already_learned_words(i);
////            return recv_merge_already_learned_words();
////        }
////
////        public void send_merge_already_learned_words(int i) {
////            merge_already_learned_words_args merge_already_learned_words_args = new merge_already_learned_words_args();
////            merge_already_learned_words_args.setBook_id(i);
////            sendBase("merge_already_learned_words", merge_already_learned_words_args);
////        }
////
////        public int recv_merge_already_learned_words() {
////            merge_already_learned_words_result merge_already_learned_words_result = new merge_already_learned_words_result();
////            receiveBase(merge_already_learned_words_result, "merge_already_learned_words");
////            if (merge_already_learned_words_result.isSetSuccess()) {
////                return merge_already_learned_words_result.success;
////            }
////            if (merge_already_learned_words_result.sysException != null) {
////                throw merge_already_learned_words_result.sysException;
////            } else if (merge_already_learned_words_result.logicException != null) {
////                throw merge_already_learned_words_result.logicException;
////            } else {
////                throw new TApplicationException(5, "merge_already_learned_words failed: unknown result");
////            }
////        }
////
////        public int user_operation_stat(List<BBOperationStatLog> list) {
////            send_user_operation_stat(list);
////            return recv_user_operation_stat();
////        }
////
////        public void send_user_operation_stat(List<BBOperationStatLog> list) {
////            user_operation_stat_args user_operation_stat_args = new user_operation_stat_args();
////            user_operation_stat_args.setOperation_logs(list);
////            sendBase("user_operation_stat", user_operation_stat_args);
////        }
////
////        public int recv_user_operation_stat() {
////            user_operation_stat_result user_operation_stat_result = new user_operation_stat_result();
////            receiveBase(user_operation_stat_result, "user_operation_stat");
////            if (user_operation_stat_result.isSetSuccess()) {
////                return user_operation_stat_result.success;
////            }
////            if (user_operation_stat_result.sysException != null) {
////                throw user_operation_stat_result.sysException;
////            }
////            throw new TApplicationException(5, "user_operation_stat failed: unknown result");
////        }
////
////        public List<BBSysNotification> get_sys_notifications(int i) {
////            send_get_sys_notifications(i);
////            return recv_get_sys_notifications();
////        }
////
////        public void send_get_sys_notifications(int i) {
////            get_sys_notifications_args get_sys_notifications_args = new get_sys_notifications_args();
////            get_sys_notifications_args.setLast_time(i);
////            sendBase("get_sys_notifications", get_sys_notifications_args);
////        }
////
////        public List<BBSysNotification> recv_get_sys_notifications() {
////            get_sys_notifications_result get_sys_notifications_result = new get_sys_notifications_result();
////            receiveBase(get_sys_notifications_result, "get_sys_notifications");
////            if (get_sys_notifications_result.isSetSuccess()) {
////                return get_sys_notifications_result.success;
////            }
////            if (get_sys_notifications_result.sysException != null) {
////                throw get_sys_notifications_result.sysException;
////            } else if (get_sys_notifications_result.logicException != null) {
////                throw get_sys_notifications_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_sys_notifications failed: unknown result");
////            }
////        }
////
////        public List<BBSysNotification> get_top_sys_notifications() {
////            send_get_top_sys_notifications();
////            return recv_get_top_sys_notifications();
////        }
////
////        public void send_get_top_sys_notifications() {
////            sendBase("get_top_sys_notifications", new get_top_sys_notifications_args());
////        }
////
////        public List<BBSysNotification> recv_get_top_sys_notifications() {
////            get_top_sys_notifications_result get_top_sys_notifications_result = new get_top_sys_notifications_result();
////            receiveBase(get_top_sys_notifications_result, "get_top_sys_notifications");
////            if (get_top_sys_notifications_result.isSetSuccess()) {
////                return get_top_sys_notifications_result.success;
////            }
////            if (get_top_sys_notifications_result.sysException != null) {
////                throw get_top_sys_notifications_result.sysException;
////            } else if (get_top_sys_notifications_result.logicException != null) {
////                throw get_top_sys_notifications_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_top_sys_notifications failed: unknown result");
////            }
////        }
////
////        public Map<Integer, Integer> get_like_times(List<Integer> list) {
////            send_get_like_times(list);
////            return recv_get_like_times();
////        }
////
////        public void send_get_like_times(List<Integer> list) {
////            get_like_times_args get_like_times_args = new get_like_times_args();
////            get_like_times_args.setNotification_ids(list);
////            sendBase("get_like_times", get_like_times_args);
////        }
////
////        public Map<Integer, Integer> recv_get_like_times() {
////            get_like_times_result get_like_times_result = new get_like_times_result();
////            receiveBase(get_like_times_result, "get_like_times");
////            if (get_like_times_result.isSetSuccess()) {
////                return get_like_times_result.success;
////            }
////            if (get_like_times_result.sysException != null) {
////                throw get_like_times_result.sysException;
////            } else if (get_like_times_result.logicException != null) {
////                throw get_like_times_result.logicException;
////            } else {
////                throw new TApplicationException(5, "get_like_times failed: unknown result");
////            }
////        }
////
////        public int finish_plan_notify(BBUserFinishPlanInfo bBUserFinishPlanInfo) {
////            send_finish_plan_notify(bBUserFinishPlanInfo);
////            return recv_finish_plan_notify();
////        }
////
////        public void send_finish_plan_notify(BBUserFinishPlanInfo bBUserFinishPlanInfo) {
////            finish_plan_notify_args finish_plan_notify_args = new finish_plan_notify_args();
////            finish_plan_notify_args.setFinish_plan_info(bBUserFinishPlanInfo);
////            sendBase("finish_plan_notify", finish_plan_notify_args);
////        }
////
////        public int recv_finish_plan_notify() {
////            finish_plan_notify_result finish_plan_notify_result = new finish_plan_notify_result();
////            receiveBase(finish_plan_notify_result, "finish_plan_notify");
////            if (finish_plan_notify_result.isSetSuccess()) {
////                return finish_plan_notify_result.success;
////            }
////            if (finish_plan_notify_result.sysException != null) {
////                throw finish_plan_notify_result.sysException;
////            }
////            throw new TApplicationException(5, "finish_plan_notify failed: unknown result");
////        }
////
////        public String get_url() {
////            send_get_url();
////            return recv_get_url();
////        }
////
////        public void send_get_url() {
////            sendBase("get_url", new get_url_args());
////        }
////
////        public String recv_get_url() {
////            get_url_result get_url_result = new get_url_result();
////            receiveBase(get_url_result, "get_url");
////            if (get_url_result.isSetSuccess()) {
////                return get_url_result.success;
////            }
////            if (get_url_result.sysException != null) {
////                throw get_url_result.sysException;
////            }
////            throw new TApplicationException(5, "get_url failed: unknown result");
////        }
////
////        public BBShoppingAd get_shopping_ad() {
////            send_get_shopping_ad();
////            return recv_get_shopping_ad();
////        }
////
////        public void send_get_shopping_ad() {
////            sendBase("get_shopping_ad", new get_shopping_ad_args());
////        }
////
////        public BBShoppingAd recv_get_shopping_ad() {
////            get_shopping_ad_result get_shopping_ad_result = new get_shopping_ad_result();
////            receiveBase(get_shopping_ad_result, "get_shopping_ad");
////            if (get_shopping_ad_result.isSetSuccess()) {
////                return get_shopping_ad_result.success;
////            }
////            if (get_shopping_ad_result.sysException != null) {
////                throw get_shopping_ad_result.sysException;
////            }
////            throw new TApplicationException(5, "get_shopping_ad failed: unknown result");
////        }
////    }
////
////    public interface Iface {
////        int add_word_friend_feedback(int i, String str);
////
////        int bind_try_user(String str, String str2);
////
////        BBBookList book_list(boolean z);
////
////        BBCheckInfo check_infos();
////
////        int daka_success_notify(int i);
////
////        int delete_done_score_data(int i);
////
////        BBDakaInfo do_daka(int i, int i2);
////
////        BBDakaInfo do_daka_v2(int i, List<Integer> list, int i2, int i3);
////
////        int done_word_stat(int i, List<BBDoneWordStatLog> list);
////
////        int finish_plan_notify(BBUserFinishPlanInfo bBUserFinishPlanInfo);
////
////        int forget_password(String str);
////
////        BBAdCustomMenu get_ad_custom_menu();
////
////        List<BBAdInfo> get_ads_list();
////
////        BBBookListInfo get_all_books_basic_info();
////
////        List<BBUserNotifyMsg> get_all_notify_msgs();
////
////        List<BBUserSelectedBookInfo> get_all_selected_books_info();
////
////        BBUserTailoredBookInfo get_book_last_updated_time(BBUserTailoredBookInfo bBUserTailoredBookInfo);
////
////        BBDakaShowInfo get_daka_share_info(int i);
////
////        List<BBTopicInfo> get_learned_words_list();
////
////        Map<Integer, Integer> get_like_times(List<Integer> list);
////
////        List<BBMiscInfo> get_miscs();
////
////        BBUserNotifyResult get_notify_info();
////
////        BBShoppingAd get_shopping_ad();
////
////        List<Integer> get_show_ads();
////
////        List<BBSysNotification> get_sys_notifications(int i);
////
////        List<BBSysNotification> get_top_sys_notifications();
////
////        String get_url();
////
////        List<BBUserWordMedia> get_user_word_media_record(int i);
////
////        String get_word_friends_info(int i);
////
////        List<BBWordUpdateInfo> get_word_update_info_by_book(int i);
////
////        List<BBWordUpdateMD5> get_word_update_md5_by_book(int i);
////
////        BBCreateTryResult have_a_try();
////
////        BBLoginResult login(String str, String str2);
////
////        int merge_already_learned_words(int i);
////
////        int modify_password(String str, String str2, String str3);
////
////        BBOtherLoginResult other_login(String str, BB3PartyUserInfo bB3PartyUserInfo, int i);
////
////        int redo_word_friend();
////
////        int register_user(String str, String str2);
////
////        int reset_done_score_data(int i);
////
////        List<BBRoadMapElement> roadmap_by_word_level(int i);
////
////        int save_user_ext_info(BBUserExtInfo bBUserExtInfo);
////
////        int save_word_friend_done_record(int i, List<Integer> list);
////
////        BBUserSelectedBookInfo select_book(int i, long j);
////
////        BBSelectedBookInfo select_book_v2(int i, long j);
////
////        int select_word_level(int i, long j);
////
////        int set_notify_info(BBUserNotifySetting bBUserNotifySetting);
////
////        int sync_user_word_media_record(List<BBUserWordMedia> list);
////
////        int update_done_data(long j, List<BBDoneRecord> list, int i, boolean z);
////
////        int update_miscs(List<BBMiscInfo> list);
////
////        BBProfile update_profile(int i, String str);
////
////        BBBasicInfo user_basic_info();
////
////        int user_operation_stat(List<BBOperationStatLog> list);
////    }
////
////    public class Processor<I extends Iface> extends TBaseProcessor<I> {
////        private static final Logger LOGGER = LoggerFactory.getLogger(Processor.class.getName());
////
////        public class add_word_friend_feedback<I extends Iface> extends ProcessFunction<I, add_word_friend_feedback_args> {
////            public add_word_friend_feedback() {
////                super("add_word_friend_feedback");
////            }
////
////            public add_word_friend_feedback_args getEmptyArgsInstance() {
////                return new add_word_friend_feedback_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public add_word_friend_feedback_result getResult(I i, add_word_friend_feedback_args add_word_friend_feedback_args) {
////                add_word_friend_feedback_result add_word_friend_feedback_result = new add_word_friend_feedback_result();
////                try {
////                    add_word_friend_feedback_result.success = i.add_word_friend_feedback(add_word_friend_feedback_args.topic_id, add_word_friend_feedback_args.feedback);
////                    add_word_friend_feedback_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    add_word_friend_feedback_result.sysException = e;
////                } catch (BELogicException e2) {
////                    add_word_friend_feedback_result.logicException = e2;
////                }
////                return add_word_friend_feedback_result;
////            }
////        }
////
////        public class bind_try_user<I extends Iface> extends ProcessFunction<I, bind_try_user_args> {
////            public bind_try_user() {
////                super("bind_try_user");
////            }
////
////            public bind_try_user_args getEmptyArgsInstance() {
////                return new bind_try_user_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public bind_try_user_result getResult(I i, bind_try_user_args bind_try_user_args) {
////                bind_try_user_result bind_try_user_result = new bind_try_user_result();
////                try {
////                    bind_try_user_result.success = i.bind_try_user(bind_try_user_args.email, bind_try_user_args.password);
////                    bind_try_user_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    bind_try_user_result.sysException = e;
////                } catch (BELogicException e2) {
////                    bind_try_user_result.logicException = e2;
////                }
////                return bind_try_user_result;
////            }
////        }
////
////        public class book_list<I extends Iface> extends ProcessFunction<I, book_list_args> {
////            public book_list() {
////                super("book_list");
////            }
////
////            public book_list_args getEmptyArgsInstance() {
////                return new book_list_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public book_list_result getResult(I i, book_list_args book_list_args) {
////                book_list_result book_list_result = new book_list_result();
////                try {
////                    book_list_result.success = i.book_list(book_list_args.only_selected);
////                } catch (BESystemException e) {
////                    book_list_result.sysException = e;
////                }
////                return book_list_result;
////            }
////        }
////
////        public class check_infos<I extends Iface> extends ProcessFunction<I, check_infos_args> {
////            public check_infos() {
////                super("check_infos");
////            }
////
////            public check_infos_args getEmptyArgsInstance() {
////                return new check_infos_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public check_infos_result getResult(I i, check_infos_args check_infos_args) {
////                check_infos_result check_infos_result = new check_infos_result();
////                try {
////                    check_infos_result.success = i.check_infos();
////                } catch (BESystemException e) {
////                    check_infos_result.sysException = e;
////                }
////                return check_infos_result;
////            }
////        }
////
////        public class daka_success_notify<I extends Iface> extends ProcessFunction<I, daka_success_notify_args> {
////            public daka_success_notify() {
////                super("daka_success_notify");
////            }
////
////            public daka_success_notify_args getEmptyArgsInstance() {
////                return new daka_success_notify_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public daka_success_notify_result getResult(I i, daka_success_notify_args daka_success_notify_args) {
////                daka_success_notify_result daka_success_notify_result = new daka_success_notify_result();
////                try {
////                    daka_success_notify_result.success = i.daka_success_notify(daka_success_notify_args.daka_id);
////                    daka_success_notify_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    daka_success_notify_result.sysException = e;
////                } catch (BELogicException e2) {
////                    daka_success_notify_result.logicException = e2;
////                }
////                return daka_success_notify_result;
////            }
////        }
////
////        public class delete_done_score_data<I extends Iface> extends ProcessFunction<I, delete_done_score_data_args> {
////            public delete_done_score_data() {
////                super("delete_done_score_data");
////            }
////
////            public delete_done_score_data_args getEmptyArgsInstance() {
////                return new delete_done_score_data_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public delete_done_score_data_result getResult(I i, delete_done_score_data_args delete_done_score_data_args) {
////                delete_done_score_data_result delete_done_score_data_result = new delete_done_score_data_result();
////                try {
////                    delete_done_score_data_result.success = i.delete_done_score_data(delete_done_score_data_args.word_level_id);
////                    delete_done_score_data_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    delete_done_score_data_result.sysException = e;
////                } catch (BELogicException e2) {
////                    delete_done_score_data_result.logicException = e2;
////                }
////                return delete_done_score_data_result;
////            }
////        }
////
////        public class do_daka<I extends Iface> extends ProcessFunction<I, do_daka_args> {
////            public do_daka() {
////                super("do_daka");
////            }
////
////            public do_daka_args getEmptyArgsInstance() {
////                return new do_daka_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public do_daka_result getResult(I i, do_daka_args do_daka_args) {
////                do_daka_result do_daka_result = new do_daka_result();
////                try {
////                    do_daka_result.success = i.do_daka(do_daka_args.daka_days, do_daka_args.today_new_learned_count);
////                } catch (BESystemException e) {
////                    do_daka_result.sysException = e;
////                } catch (BELogicException e2) {
////                    do_daka_result.logicException = e2;
////                }
////                return do_daka_result;
////            }
////        }
////
////        public class do_daka_v2<I extends Iface> extends ProcessFunction<I, do_daka_v2_args> {
////            public do_daka_v2() {
////                super("do_daka_v2");
////            }
////
////            public do_daka_v2_args getEmptyArgsInstance() {
////                return new do_daka_v2_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public do_daka_v2_result getResult(I i, do_daka_v2_args do_daka_v2_args) {
////                do_daka_v2_result do_daka_v2_result = new do_daka_v2_result();
////                do_daka_v2_result.success = i.do_daka_v2(do_daka_v2_args.word_level_id, do_daka_v2_args.arr_finished_plan_date, do_daka_v2_args.daka_days, do_daka_v2_args.today_new_learned_count);
////                return do_daka_v2_result;
////            }
////        }
////
////        public class done_word_stat<I extends Iface> extends ProcessFunction<I, done_word_stat_args> {
////            public done_word_stat() {
////                super("done_word_stat");
////            }
////
////            public done_word_stat_args getEmptyArgsInstance() {
////                return new done_word_stat_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public done_word_stat_result getResult(I i, done_word_stat_args done_word_stat_args) {
////                done_word_stat_result done_word_stat_result = new done_word_stat_result();
////                try {
////                    done_word_stat_result.success = i.done_word_stat(done_word_stat_args.book_id, done_word_stat_args.stat_logs);
////                    done_word_stat_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    done_word_stat_result.sysException = e;
////                } catch (BELogicException e2) {
////                    done_word_stat_result.logicException = e2;
////                }
////                return done_word_stat_result;
////            }
////        }
////
////        public class finish_plan_notify<I extends Iface> extends ProcessFunction<I, finish_plan_notify_args> {
////            public finish_plan_notify() {
////                super("finish_plan_notify");
////            }
////
////            public finish_plan_notify_args getEmptyArgsInstance() {
////                return new finish_plan_notify_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public finish_plan_notify_result getResult(I i, finish_plan_notify_args finish_plan_notify_args) {
////                finish_plan_notify_result finish_plan_notify_result = new finish_plan_notify_result();
////                try {
////                    finish_plan_notify_result.success = i.finish_plan_notify(finish_plan_notify_args.finish_plan_info);
////                    finish_plan_notify_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    finish_plan_notify_result.sysException = e;
////                }
////                return finish_plan_notify_result;
////            }
////        }
////
////        public class forget_password<I extends Iface> extends ProcessFunction<I, forget_password_args> {
////            public forget_password() {
////                super("forget_password");
////            }
////
////            public forget_password_args getEmptyArgsInstance() {
////                return new forget_password_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public forget_password_result getResult(I i, forget_password_args forget_password_args) {
////                forget_password_result forget_password_result = new forget_password_result();
////                try {
////                    forget_password_result.success = i.forget_password(forget_password_args.email);
////                    forget_password_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    forget_password_result.sysException = e;
////                } catch (BELogicException e2) {
////                    forget_password_result.logicException = e2;
////                }
////                return forget_password_result;
////            }
////        }
////
////        public class get_ad_custom_menu<I extends Iface> extends ProcessFunction<I, get_ad_custom_menu_args> {
////            public get_ad_custom_menu() {
////                super("get_ad_custom_menu");
////            }
////
////            public get_ad_custom_menu_args getEmptyArgsInstance() {
////                return new get_ad_custom_menu_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_ad_custom_menu_result getResult(I i, get_ad_custom_menu_args get_ad_custom_menu_args) {
////                get_ad_custom_menu_result get_ad_custom_menu_result = new get_ad_custom_menu_result();
////                try {
////                    get_ad_custom_menu_result.success = i.get_ad_custom_menu();
////                } catch (BESystemException e) {
////                    get_ad_custom_menu_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_ad_custom_menu_result.logicException = e2;
////                }
////                return get_ad_custom_menu_result;
////            }
////        }
////
////        public class get_ads_list<I extends Iface> extends ProcessFunction<I, get_ads_list_args> {
////            public get_ads_list() {
////                super("get_ads_list");
////            }
////
////            public get_ads_list_args getEmptyArgsInstance() {
////                return new get_ads_list_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_ads_list_result getResult(I i, get_ads_list_args get_ads_list_args) {
////                get_ads_list_result get_ads_list_result = new get_ads_list_result();
////                try {
////                    get_ads_list_result.success = i.get_ads_list();
////                } catch (BESystemException e) {
////                    get_ads_list_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_ads_list_result.logicException = e2;
////                }
////                return get_ads_list_result;
////            }
////        }
////
////        public class get_all_books_basic_info<I extends Iface> extends ProcessFunction<I, get_all_books_basic_info_args> {
////            public get_all_books_basic_info() {
////                super("get_all_books_basic_info");
////            }
////
////            public get_all_books_basic_info_args getEmptyArgsInstance() {
////                return new get_all_books_basic_info_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_all_books_basic_info_result getResult(I i, get_all_books_basic_info_args get_all_books_basic_info_args) {
////                get_all_books_basic_info_result get_all_books_basic_info_result = new get_all_books_basic_info_result();
////                try {
////                    get_all_books_basic_info_result.success = i.get_all_books_basic_info();
////                } catch (BESystemException e) {
////                    get_all_books_basic_info_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_all_books_basic_info_result.logicException = e2;
////                }
////                return get_all_books_basic_info_result;
////            }
////        }
////
////        public class get_all_notify_msgs<I extends Iface> extends ProcessFunction<I, get_all_notify_msgs_args> {
////            public get_all_notify_msgs() {
////                super("get_all_notify_msgs");
////            }
////
////            public get_all_notify_msgs_args getEmptyArgsInstance() {
////                return new get_all_notify_msgs_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_all_notify_msgs_result getResult(I i, get_all_notify_msgs_args get_all_notify_msgs_args) {
////                get_all_notify_msgs_result get_all_notify_msgs_result = new get_all_notify_msgs_result();
////                try {
////                    get_all_notify_msgs_result.success = i.get_all_notify_msgs();
////                } catch (BESystemException e) {
////                    get_all_notify_msgs_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_all_notify_msgs_result.logicException = e2;
////                }
////                return get_all_notify_msgs_result;
////            }
////        }
////
////        public class get_all_selected_books_info<I extends Iface> extends ProcessFunction<I, get_all_selected_books_info_args> {
////            public get_all_selected_books_info() {
////                super("get_all_selected_books_info");
////            }
////
////            public get_all_selected_books_info_args getEmptyArgsInstance() {
////                return new get_all_selected_books_info_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_all_selected_books_info_result getResult(I i, get_all_selected_books_info_args get_all_selected_books_info_args) {
////                get_all_selected_books_info_result get_all_selected_books_info_result = new get_all_selected_books_info_result();
////                try {
////                    get_all_selected_books_info_result.success = i.get_all_selected_books_info();
////                } catch (BESystemException e) {
////                    get_all_selected_books_info_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_all_selected_books_info_result.logicException = e2;
////                }
////                return get_all_selected_books_info_result;
////            }
////        }
////
////        public class get_book_last_updated_time<I extends Iface> extends ProcessFunction<I, get_book_last_updated_time_args> {
////            public get_book_last_updated_time() {
////                super("get_book_last_updated_time");
////            }
////
////            public get_book_last_updated_time_args getEmptyArgsInstance() {
////                return new get_book_last_updated_time_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_book_last_updated_time_result getResult(I i, get_book_last_updated_time_args get_book_last_updated_time_args) {
////                get_book_last_updated_time_result get_book_last_updated_time_result = new get_book_last_updated_time_result();
////                try {
////                    get_book_last_updated_time_result.success = i.get_book_last_updated_time(get_book_last_updated_time_args.book_info);
////                } catch (BESystemException e) {
////                    get_book_last_updated_time_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_book_last_updated_time_result.logicException = e2;
////                }
////                return get_book_last_updated_time_result;
////            }
////        }
////
////        public class get_daka_share_info<I extends Iface> extends ProcessFunction<I, get_daka_share_info_args> {
////            public get_daka_share_info() {
////                super("get_daka_share_info");
////            }
////
////            public get_daka_share_info_args getEmptyArgsInstance() {
////                return new get_daka_share_info_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_daka_share_info_result getResult(I i, get_daka_share_info_args get_daka_share_info_args) {
////                get_daka_share_info_result get_daka_share_info_result = new get_daka_share_info_result();
////                try {
////                    get_daka_share_info_result.success = i.get_daka_share_info(get_daka_share_info_args.word_level_id);
////                } catch (BESystemException e) {
////                    get_daka_share_info_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_daka_share_info_result.logicException = e2;
////                }
////                return get_daka_share_info_result;
////            }
////        }
////
////        public class get_learned_words_list<I extends Iface> extends ProcessFunction<I, get_learned_words_list_args> {
////            public get_learned_words_list() {
////                super("get_learned_words_list");
////            }
////
////            public get_learned_words_list_args getEmptyArgsInstance() {
////                return new get_learned_words_list_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_learned_words_list_result getResult(I i, get_learned_words_list_args get_learned_words_list_args) {
////                get_learned_words_list_result get_learned_words_list_result = new get_learned_words_list_result();
////                try {
////                    get_learned_words_list_result.success = i.get_learned_words_list();
////                } catch (BESystemException e) {
////                    get_learned_words_list_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_learned_words_list_result.logicException = e2;
////                }
////                return get_learned_words_list_result;
////            }
////        }
////
////        public class get_like_times<I extends Iface> extends ProcessFunction<I, get_like_times_args> {
////            public get_like_times() {
////                super("get_like_times");
////            }
////
////            public get_like_times_args getEmptyArgsInstance() {
////                return new get_like_times_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_like_times_result getResult(I i, get_like_times_args get_like_times_args) {
////                get_like_times_result get_like_times_result = new get_like_times_result();
////                try {
////                    get_like_times_result.success = i.get_like_times(get_like_times_args.notification_ids);
////                } catch (BESystemException e) {
////                    get_like_times_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_like_times_result.logicException = e2;
////                }
////                return get_like_times_result;
////            }
////        }
////
////        public class get_miscs<I extends Iface> extends ProcessFunction<I, get_miscs_args> {
////            public get_miscs() {
////                super("get_miscs");
////            }
////
////            public get_miscs_args getEmptyArgsInstance() {
////                return new get_miscs_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_miscs_result getResult(I i, get_miscs_args get_miscs_args) {
////                get_miscs_result get_miscs_result = new get_miscs_result();
////                try {
////                    get_miscs_result.success = i.get_miscs();
////                } catch (BESystemException e) {
////                    get_miscs_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_miscs_result.logicException = e2;
////                }
////                return get_miscs_result;
////            }
////        }
////
////        public class get_notify_info<I extends Iface> extends ProcessFunction<I, get_notify_info_args> {
////            public get_notify_info() {
////                super("get_notify_info");
////            }
////
////            public get_notify_info_args getEmptyArgsInstance() {
////                return new get_notify_info_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_notify_info_result getResult(I i, get_notify_info_args get_notify_info_args) {
////                get_notify_info_result get_notify_info_result = new get_notify_info_result();
////                try {
////                    get_notify_info_result.success = i.get_notify_info();
////                } catch (BESystemException e) {
////                    get_notify_info_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_notify_info_result.logicException = e2;
////                }
////                return get_notify_info_result;
////            }
////        }
////
////        public class get_shopping_ad<I extends Iface> extends ProcessFunction<I, get_shopping_ad_args> {
////            public get_shopping_ad() {
////                super("get_shopping_ad");
////            }
////
////            public get_shopping_ad_args getEmptyArgsInstance() {
////                return new get_shopping_ad_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_shopping_ad_result getResult(I i, get_shopping_ad_args get_shopping_ad_args) {
////                get_shopping_ad_result get_shopping_ad_result = new get_shopping_ad_result();
////                try {
////                    get_shopping_ad_result.success = i.get_shopping_ad();
////                } catch (BESystemException e) {
////                    get_shopping_ad_result.sysException = e;
////                }
////                return get_shopping_ad_result;
////            }
////        }
////
////        public class get_show_ads<I extends Iface> extends ProcessFunction<I, get_show_ads_args> {
////            public get_show_ads() {
////                super("get_show_ads");
////            }
////
////            public get_show_ads_args getEmptyArgsInstance() {
////                return new get_show_ads_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_show_ads_result getResult(I i, get_show_ads_args get_show_ads_args) {
////                get_show_ads_result get_show_ads_result = new get_show_ads_result();
////                try {
////                    get_show_ads_result.success = i.get_show_ads();
////                } catch (BESystemException e) {
////                    get_show_ads_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_show_ads_result.logicException = e2;
////                }
////                return get_show_ads_result;
////            }
////        }
////
////        public class get_sys_notifications<I extends Iface> extends ProcessFunction<I, get_sys_notifications_args> {
////            public get_sys_notifications() {
////                super("get_sys_notifications");
////            }
////
////            public get_sys_notifications_args getEmptyArgsInstance() {
////                return new get_sys_notifications_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_sys_notifications_result getResult(I i, get_sys_notifications_args get_sys_notifications_args) {
////                get_sys_notifications_result get_sys_notifications_result = new get_sys_notifications_result();
////                try {
////                    get_sys_notifications_result.success = i.get_sys_notifications(get_sys_notifications_args.last_time);
////                } catch (BESystemException e) {
////                    get_sys_notifications_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_sys_notifications_result.logicException = e2;
////                }
////                return get_sys_notifications_result;
////            }
////        }
////
////        public class get_top_sys_notifications<I extends Iface> extends ProcessFunction<I, get_top_sys_notifications_args> {
////            public get_top_sys_notifications() {
////                super("get_top_sys_notifications");
////            }
////
////            public get_top_sys_notifications_args getEmptyArgsInstance() {
////                return new get_top_sys_notifications_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_top_sys_notifications_result getResult(I i, get_top_sys_notifications_args get_top_sys_notifications_args) {
////                get_top_sys_notifications_result get_top_sys_notifications_result = new get_top_sys_notifications_result();
////                try {
////                    get_top_sys_notifications_result.success = i.get_top_sys_notifications();
////                } catch (BESystemException e) {
////                    get_top_sys_notifications_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_top_sys_notifications_result.logicException = e2;
////                }
////                return get_top_sys_notifications_result;
////            }
////        }
////
////        public class get_url<I extends Iface> extends ProcessFunction<I, get_url_args> {
////            public get_url() {
////                super("get_url");
////            }
////
////            public get_url_args getEmptyArgsInstance() {
////                return new get_url_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_url_result getResult(I i, get_url_args get_url_args) {
////                get_url_result get_url_result = new get_url_result();
////                try {
////                    get_url_result.success = i.get_url();
////                } catch (BESystemException e) {
////                    get_url_result.sysException = e;
////                }
////                return get_url_result;
////            }
////        }
////
////        public class get_user_word_media_record<I extends Iface> extends ProcessFunction<I, get_user_word_media_record_args> {
////            public get_user_word_media_record() {
////                super("get_user_word_media_record");
////            }
////
////            public get_user_word_media_record_args getEmptyArgsInstance() {
////                return new get_user_word_media_record_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_user_word_media_record_result getResult(I i, get_user_word_media_record_args get_user_word_media_record_args) {
////                get_user_word_media_record_result get_user_word_media_record_result = new get_user_word_media_record_result();
////                try {
////                    get_user_word_media_record_result.success = i.get_user_word_media_record(get_user_word_media_record_args.word_level_id);
////                } catch (BESystemException e) {
////                    get_user_word_media_record_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_user_word_media_record_result.logicException = e2;
////                }
////                return get_user_word_media_record_result;
////            }
////        }
////
////        public class get_word_friends_info<I extends Iface> extends ProcessFunction<I, get_word_friends_info_args> {
////            public get_word_friends_info() {
////                super("get_word_friends_info");
////            }
////
////            public get_word_friends_info_args getEmptyArgsInstance() {
////                return new get_word_friends_info_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_word_friends_info_result getResult(I i, get_word_friends_info_args get_word_friends_info_args) {
////                get_word_friends_info_result get_word_friends_info_result = new get_word_friends_info_result();
////                try {
////                    get_word_friends_info_result.success = i.get_word_friends_info(get_word_friends_info_args.word_level_id);
////                } catch (BESystemException e) {
////                    get_word_friends_info_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_word_friends_info_result.logicException = e2;
////                }
////                return get_word_friends_info_result;
////            }
////        }
////
////        public class get_word_update_info_by_book<I extends Iface> extends ProcessFunction<I, get_word_update_info_by_book_args> {
////            public get_word_update_info_by_book() {
////                super("get_word_update_info_by_book");
////            }
////
////            public get_word_update_info_by_book_args getEmptyArgsInstance() {
////                return new get_word_update_info_by_book_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_word_update_info_by_book_result getResult(I i, get_word_update_info_by_book_args get_word_update_info_by_book_args) {
////                get_word_update_info_by_book_result get_word_update_info_by_book_result = new get_word_update_info_by_book_result();
////                try {
////                    get_word_update_info_by_book_result.success = i.get_word_update_info_by_book(get_word_update_info_by_book_args.word_level_id);
////                } catch (BESystemException e) {
////                    get_word_update_info_by_book_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_word_update_info_by_book_result.logicException = e2;
////                }
////                return get_word_update_info_by_book_result;
////            }
////        }
////
////        public class get_word_update_md5_by_book<I extends Iface> extends ProcessFunction<I, get_word_update_md5_by_book_args> {
////            public get_word_update_md5_by_book() {
////                super("get_word_update_md5_by_book");
////            }
////
////            public get_word_update_md5_by_book_args getEmptyArgsInstance() {
////                return new get_word_update_md5_by_book_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public get_word_update_md5_by_book_result getResult(I i, get_word_update_md5_by_book_args get_word_update_md5_by_book_args) {
////                get_word_update_md5_by_book_result get_word_update_md5_by_book_result = new get_word_update_md5_by_book_result();
////                try {
////                    get_word_update_md5_by_book_result.success = i.get_word_update_md5_by_book(get_word_update_md5_by_book_args.word_level_id);
////                } catch (BESystemException e) {
////                    get_word_update_md5_by_book_result.sysException = e;
////                } catch (BELogicException e2) {
////                    get_word_update_md5_by_book_result.logicException = e2;
////                }
////                return get_word_update_md5_by_book_result;
////            }
////        }
////
////        public class have_a_try<I extends Iface> extends ProcessFunction<I, have_a_try_args> {
////            public have_a_try() {
////                super("have_a_try");
////            }
////
////            public have_a_try_args getEmptyArgsInstance() {
////                return new have_a_try_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public have_a_try_result getResult(I i, have_a_try_args have_a_try_args) {
////                have_a_try_result have_a_try_result = new have_a_try_result();
////                try {
////                    have_a_try_result.success = i.have_a_try();
////                } catch (BESystemException e) {
////                    have_a_try_result.sysException = e;
////                }
////                return have_a_try_result;
////            }
////        }
////
////        public class login<I extends Iface> extends ProcessFunction<I, login_args> {
////            public login() {
////                super("login");
////            }
////
////            public login_args getEmptyArgsInstance() {
////                return new login_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public login_result getResult(I i, login_args login_args) {
////                login_result login_result = new login_result();
////                try {
////                    login_result.success = i.login(login_args.email, login_args.password);
////                } catch (BESystemException e) {
////                    login_result.sysException = e;
////                } catch (BELogicException e2) {
////                    login_result.logicException = e2;
////                }
////                return login_result;
////            }
////        }
////
////        public class merge_already_learned_words<I extends Iface> extends ProcessFunction<I, merge_already_learned_words_args> {
////            public merge_already_learned_words() {
////                super("merge_already_learned_words");
////            }
////
////            public merge_already_learned_words_args getEmptyArgsInstance() {
////                return new merge_already_learned_words_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public merge_already_learned_words_result getResult(I i, merge_already_learned_words_args merge_already_learned_words_args) {
////                merge_already_learned_words_result merge_already_learned_words_result = new merge_already_learned_words_result();
////                try {
////                    merge_already_learned_words_result.success = i.merge_already_learned_words(merge_already_learned_words_args.book_id);
////                    merge_already_learned_words_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    merge_already_learned_words_result.sysException = e;
////                } catch (BELogicException e2) {
////                    merge_already_learned_words_result.logicException = e2;
////                }
////                return merge_already_learned_words_result;
////            }
////        }
////
////        public class modify_password<I extends Iface> extends ProcessFunction<I, modify_password_args> {
////            public modify_password() {
////                super("modify_password");
////            }
////
////            public modify_password_args getEmptyArgsInstance() {
////                return new modify_password_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public modify_password_result getResult(I i, modify_password_args modify_password_args) {
////                modify_password_result modify_password_result = new modify_password_result();
////                try {
////                    modify_password_result.success = i.modify_password(modify_password_args.email, modify_password_args.old_password, modify_password_args.new_password);
////                    modify_password_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    modify_password_result.sysException = e;
////                } catch (BELogicException e2) {
////                    modify_password_result.logicException = e2;
////                }
////                return modify_password_result;
////            }
////        }
////
////        public class other_login<I extends Iface> extends ProcessFunction<I, other_login_args> {
////            public other_login() {
////                super("other_login");
////            }
////
////            public other_login_args getEmptyArgsInstance() {
////                return new other_login_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public other_login_result getResult(I i, other_login_args other_login_args) {
////                other_login_result other_login_result = new other_login_result();
////                try {
////                    other_login_result.success = i.other_login(other_login_args.provider, other_login_args.userinfo, other_login_args.is_try_user);
////                } catch (BESystemException e) {
////                    other_login_result.sysException = e;
////                } catch (BELogicException e2) {
////                    other_login_result.logicException = e2;
////                }
////                return other_login_result;
////            }
////        }
////
////        public class redo_word_friend<I extends Iface> extends ProcessFunction<I, redo_word_friend_args> {
////            public redo_word_friend() {
////                super("redo_word_friend");
////            }
////
////            public redo_word_friend_args getEmptyArgsInstance() {
////                return new redo_word_friend_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public redo_word_friend_result getResult(I i, redo_word_friend_args redo_word_friend_args) {
////                redo_word_friend_result redo_word_friend_result = new redo_word_friend_result();
////                try {
////                    redo_word_friend_result.success = i.redo_word_friend();
////                    redo_word_friend_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    redo_word_friend_result.sysException = e;
////                } catch (BELogicException e2) {
////                    redo_word_friend_result.logicException = e2;
////                }
////                return redo_word_friend_result;
////            }
////        }
////
////        public class register_user<I extends Iface> extends ProcessFunction<I, register_user_args> {
////            public register_user() {
////                super("register_user");
////            }
////
////            public register_user_args getEmptyArgsInstance() {
////                return new register_user_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public register_user_result getResult(I i, register_user_args register_user_args) {
////                register_user_result register_user_result = new register_user_result();
////                try {
////                    register_user_result.success = i.register_user(register_user_args.email, register_user_args.password);
////                    register_user_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    register_user_result.sysException = e;
////                } catch (BELogicException e2) {
////                    register_user_result.logicException = e2;
////                }
////                return register_user_result;
////            }
////        }
////
////        public class reset_done_score_data<I extends Iface> extends ProcessFunction<I, reset_done_score_data_args> {
////            public reset_done_score_data() {
////                super("reset_done_score_data");
////            }
////
////            public reset_done_score_data_args getEmptyArgsInstance() {
////                return new reset_done_score_data_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public reset_done_score_data_result getResult(I i, reset_done_score_data_args reset_done_score_data_args) {
////                reset_done_score_data_result reset_done_score_data_result = new reset_done_score_data_result();
////                try {
////                    reset_done_score_data_result.success = i.reset_done_score_data(reset_done_score_data_args.word_level_id);
////                    reset_done_score_data_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    reset_done_score_data_result.sysException = e;
////                } catch (BELogicException e2) {
////                    reset_done_score_data_result.logicException = e2;
////                }
////                return reset_done_score_data_result;
////            }
////        }
////
////        public class roadmap_by_word_level<I extends Iface> extends ProcessFunction<I, roadmap_by_word_level_args> {
////            public roadmap_by_word_level() {
////                super("roadmap_by_word_level");
////            }
////
////            public roadmap_by_word_level_args getEmptyArgsInstance() {
////                return new roadmap_by_word_level_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public roadmap_by_word_level_result getResult(I i, roadmap_by_word_level_args roadmap_by_word_level_args) {
////                roadmap_by_word_level_result roadmap_by_word_level_result = new roadmap_by_word_level_result();
////                try {
////                    roadmap_by_word_level_result.success = i.roadmap_by_word_level(roadmap_by_word_level_args.current_word_level_id);
////                } catch (BESystemException e) {
////                    roadmap_by_word_level_result.sysException = e;
////                }
////                return roadmap_by_word_level_result;
////            }
////        }
////
////        public class save_user_ext_info<I extends Iface> extends ProcessFunction<I, save_user_ext_info_args> {
////            public save_user_ext_info() {
////                super("save_user_ext_info");
////            }
////
////            public save_user_ext_info_args getEmptyArgsInstance() {
////                return new save_user_ext_info_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public save_user_ext_info_result getResult(I i, save_user_ext_info_args save_user_ext_info_args) {
////                save_user_ext_info_result save_user_ext_info_result = new save_user_ext_info_result();
////                try {
////                    save_user_ext_info_result.success = i.save_user_ext_info(save_user_ext_info_args.user_ext_info);
////                    save_user_ext_info_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    save_user_ext_info_result.sysException = e;
////                } catch (BELogicException e2) {
////                    save_user_ext_info_result.logicException = e2;
////                }
////                return save_user_ext_info_result;
////            }
////        }
////
////        public class save_word_friend_done_record<I extends Iface> extends ProcessFunction<I, save_word_friend_done_record_args> {
////            public save_word_friend_done_record() {
////                super("save_word_friend_done_record");
////            }
////
////            public save_word_friend_done_record_args getEmptyArgsInstance() {
////                return new save_word_friend_done_record_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public save_word_friend_done_record_result getResult(I i, save_word_friend_done_record_args save_word_friend_done_record_args) {
////                save_word_friend_done_record_result save_word_friend_done_record_result = new save_word_friend_done_record_result();
////                try {
////                    save_word_friend_done_record_result.success = i.save_word_friend_done_record(save_word_friend_done_record_args.word_level_id, save_word_friend_done_record_args.done_topic_ids);
////                    save_word_friend_done_record_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    save_word_friend_done_record_result.sysException = e;
////                } catch (BELogicException e2) {
////                    save_word_friend_done_record_result.logicException = e2;
////                }
////                return save_word_friend_done_record_result;
////            }
////        }
////
////        public class select_book<I extends Iface> extends ProcessFunction<I, select_book_args> {
////            public select_book() {
////                super("select_book");
////            }
////
////            public select_book_args getEmptyArgsInstance() {
////                return new select_book_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public select_book_result getResult(I i, select_book_args select_book_args) {
////                select_book_result select_book_result = new select_book_result();
////                try {
////                    select_book_result.success = i.select_book(select_book_args.book_id, select_book_args.end_time);
////                } catch (BESystemException e) {
////                    select_book_result.sysException = e;
////                } catch (BELogicException e2) {
////                    select_book_result.logicException = e2;
////                }
////                return select_book_result;
////            }
////        }
////
////        public class select_book_v2<I extends Iface> extends ProcessFunction<I, select_book_v2_args> {
////            public select_book_v2() {
////                super("select_book_v2");
////            }
////
////            public select_book_v2_args getEmptyArgsInstance() {
////                return new select_book_v2_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public select_book_v2_result getResult(I i, select_book_v2_args select_book_v2_args) {
////                select_book_v2_result select_book_v2_result = new select_book_v2_result();
////                try {
////                    select_book_v2_result.success = i.select_book_v2(select_book_v2_args.book_id, select_book_v2_args.end_time);
////                } catch (BESystemException e) {
////                    select_book_v2_result.sysException = e;
////                } catch (BELogicException e2) {
////                    select_book_v2_result.logicException = e2;
////                }
////                return select_book_v2_result;
////            }
////        }
////
////        public class select_word_level<I extends Iface> extends ProcessFunction<I, select_word_level_args> {
////            public select_word_level() {
////                super("select_word_level");
////            }
////
////            public select_word_level_args getEmptyArgsInstance() {
////                return new select_word_level_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public select_word_level_result getResult(I i, select_word_level_args select_word_level_args) {
////                select_word_level_result select_word_level_result = new select_word_level_result();
////                try {
////                    select_word_level_result.success = i.select_word_level(select_word_level_args.word_level_id, select_word_level_args.end_time);
////                    select_word_level_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    select_word_level_result.sysException = e;
////                } catch (BELogicException e2) {
////                    select_word_level_result.logicException = e2;
////                }
////                return select_word_level_result;
////            }
////        }
////
////        public class set_notify_info<I extends Iface> extends ProcessFunction<I, set_notify_info_args> {
////            public set_notify_info() {
////                super("set_notify_info");
////            }
////
////            public set_notify_info_args getEmptyArgsInstance() {
////                return new set_notify_info_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public set_notify_info_result getResult(I i, set_notify_info_args set_notify_info_args) {
////                set_notify_info_result set_notify_info_result = new set_notify_info_result();
////                try {
////                    set_notify_info_result.success = i.set_notify_info(set_notify_info_args.notify_setting);
////                    set_notify_info_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    set_notify_info_result.sysException = e;
////                } catch (BELogicException e2) {
////                    set_notify_info_result.logicException = e2;
////                }
////                return set_notify_info_result;
////            }
////        }
////
////        public class sync_user_word_media_record<I extends Iface> extends ProcessFunction<I, sync_user_word_media_record_args> {
////            public sync_user_word_media_record() {
////                super("sync_user_word_media_record");
////            }
////
////            public sync_user_word_media_record_args getEmptyArgsInstance() {
////                return new sync_user_word_media_record_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public sync_user_word_media_record_result getResult(I i, sync_user_word_media_record_args sync_user_word_media_record_args) {
////                sync_user_word_media_record_result sync_user_word_media_record_result = new sync_user_word_media_record_result();
////                try {
////                    sync_user_word_media_record_result.success = i.sync_user_word_media_record(sync_user_word_media_record_args.user_media_records);
////                    sync_user_word_media_record_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    sync_user_word_media_record_result.sysException = e;
////                } catch (BELogicException e2) {
////                    sync_user_word_media_record_result.logicException = e2;
////                }
////                return sync_user_word_media_record_result;
////            }
////        }
////
////        public class update_done_data<I extends Iface> extends ProcessFunction<I, update_done_data_args> {
////            public update_done_data() {
////                super("update_done_data");
////            }
////
////            public update_done_data_args getEmptyArgsInstance() {
////                return new update_done_data_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public update_done_data_result getResult(I i, update_done_data_args update_done_data_args) {
////                update_done_data_result update_done_data_result = new update_done_data_result();
////                try {
////                    update_done_data_result.success = i.update_done_data(update_done_data_args.last_sync_at, update_done_data_args.arr_done_records, update_done_data_args.current_word_level_id, update_done_data_args.is_today_completed);
////                    update_done_data_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    update_done_data_result.sysException = e;
////                } catch (BELogicException e2) {
////                    update_done_data_result.logicException = e2;
////                }
////                return update_done_data_result;
////            }
////        }
////
////        public class update_miscs<I extends Iface> extends ProcessFunction<I, update_miscs_args> {
////            public update_miscs() {
////                super("update_miscs");
////            }
////
////            public update_miscs_args getEmptyArgsInstance() {
////                return new update_miscs_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public update_miscs_result getResult(I i, update_miscs_args update_miscs_args) {
////                update_miscs_result update_miscs_result = new update_miscs_result();
////                try {
////                    update_miscs_result.success = i.update_miscs(update_miscs_args.miscs);
////                    update_miscs_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    update_miscs_result.sysException = e;
////                } catch (BELogicException e2) {
////                    update_miscs_result.logicException = e2;
////                }
////                return update_miscs_result;
////            }
////        }
////
////        public class update_profile<I extends Iface> extends ProcessFunction<I, update_profile_args> {
////            public update_profile() {
////                super("update_profile");
////            }
////
////            public update_profile_args getEmptyArgsInstance() {
////                return new update_profile_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public update_profile_result getResult(I i, update_profile_args update_profile_args) {
////                update_profile_result update_profile_result = new update_profile_result();
////                try {
////                    update_profile_result.success = i.update_profile(update_profile_args.title_id, update_profile_args.nick_name);
////                } catch (BESystemException e) {
////                    update_profile_result.sysException = e;
////                } catch (BELogicException e2) {
////                    update_profile_result.logicException = e2;
////                }
////                return update_profile_result;
////            }
////        }
////
////        public class user_basic_info<I extends Iface> extends ProcessFunction<I, user_basic_info_args> {
////            public user_basic_info() {
////                super("user_basic_info");
////            }
////
////            public user_basic_info_args getEmptyArgsInstance() {
////                return new user_basic_info_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public user_basic_info_result getResult(I i, user_basic_info_args user_basic_info_args) {
////                user_basic_info_result user_basic_info_result = new user_basic_info_result();
////                try {
////                    user_basic_info_result.success = i.user_basic_info();
////                } catch (BESystemException e) {
////                    user_basic_info_result.sysException = e;
////                }
////                return user_basic_info_result;
////            }
////        }
////
////        public class user_operation_stat<I extends Iface> extends ProcessFunction<I, user_operation_stat_args> {
////            public user_operation_stat() {
////                super("user_operation_stat");
////            }
////
////            public user_operation_stat_args getEmptyArgsInstance() {
////                return new user_operation_stat_args();
////            }
////
////            /* access modifiers changed from: protected */
////            public boolean isOneway() {
////                return false;
////            }
////
////            public user_operation_stat_result getResult(I i, user_operation_stat_args user_operation_stat_args) {
////                user_operation_stat_result user_operation_stat_result = new user_operation_stat_result();
////                try {
////                    user_operation_stat_result.success = i.user_operation_stat(user_operation_stat_args.operation_logs);
////                    user_operation_stat_result.setSuccessIsSet(true);
////                } catch (BESystemException e) {
////                    user_operation_stat_result.sysException = e;
////                }
////                return user_operation_stat_result;
////            }
////        }
////
////        public Processor(I i) {
////            super(i, getProcessMap(new HashMap()));
////        }
////
////        protected Processor(I i, Map<String, ProcessFunction<I, ? extends C2116f>> map) {
////            super(i, getProcessMap(map));
////        }
////
////        private static <I extends Iface> Map<String, ProcessFunction<I, ? extends C2116f>> getProcessMap(Map<String, ProcessFunction<I, ? extends C2116f>> map) {
////            map.put("check_infos", new check_infos());
////            map.put("login", new login());
////            map.put("register_user", new register_user());
////            map.put("have_a_try", new have_a_try());
////            map.put("bind_try_user", new bind_try_user());
////            map.put("other_login", new other_login());
////            map.put("forget_password", new forget_password());
////            map.put("modify_password", new modify_password());
////            map.put("user_basic_info", new user_basic_info());
////            map.put("book_list", new book_list());
////            map.put("roadmap_by_word_level", new roadmap_by_word_level());
////            map.put("update_profile", new update_profile());
////            map.put("update_done_data", new update_done_data());
////            map.put("select_word_level", new select_word_level());
////            map.put("select_book", new select_book());
////            map.put("select_book_v2", new select_book_v2());
////            map.put("get_learned_words_list", new get_learned_words_list());
////            map.put("get_notify_info", new get_notify_info());
////            map.put("set_notify_info", new set_notify_info());
////            map.put("get_all_notify_msgs", new get_all_notify_msgs());
////            map.put("get_word_update_info_by_book", new get_word_update_info_by_book());
////            map.put("get_word_update_md5_by_book", new get_word_update_md5_by_book());
////            map.put("do_daka", new do_daka());
////            map.put("do_daka_v2", new do_daka_v2());
////            map.put("get_daka_share_info", new get_daka_share_info());
////            map.put("daka_success_notify", new daka_success_notify());
////            map.put("reset_done_score_data", new reset_done_score_data());
////            map.put("delete_done_score_data", new delete_done_score_data());
////            map.put("sync_user_word_media_record", new sync_user_word_media_record());
////            map.put("get_user_word_media_record", new get_user_word_media_record());
////            map.put("get_ads_list", new get_ads_list());
////            map.put("get_show_ads", new get_show_ads());
////            map.put("get_word_friends_info", new get_word_friends_info());
////            map.put("redo_word_friend", new redo_word_friend());
////            map.put("save_word_friend_done_record", new save_word_friend_done_record());
////            map.put("save_user_ext_info", new save_user_ext_info());
////            map.put("add_word_friend_feedback", new add_word_friend_feedback());
////            map.put("get_all_books_basic_info", new get_all_books_basic_info());
////            map.put("get_all_selected_books_info", new get_all_selected_books_info());
////            map.put("get_book_last_updated_time", new get_book_last_updated_time());
////            map.put("get_ad_custom_menu", new get_ad_custom_menu());
////            map.put("done_word_stat", new done_word_stat());
////            map.put("get_miscs", new get_miscs());
////            map.put("update_miscs", new update_miscs());
////            map.put("merge_already_learned_words", new merge_already_learned_words());
////            map.put("user_operation_stat", new user_operation_stat());
////            map.put("get_sys_notifications", new get_sys_notifications());
////            map.put("get_top_sys_notifications", new get_top_sys_notifications());
////            map.put("get_like_times", new get_like_times());
////            map.put("finish_plan_notify", new finish_plan_notify());
////            map.put("get_url", new get_url());
////            map.put("get_shopping_ad", new get_shopping_ad());
////            return map;
////        }
////    }
////
////    public class add_word_friend_feedback_args implements Serializable, Cloneable, Comparable<add_word_friend_feedback_args>, C2116f<add_word_friend_feedback_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b FEEDBACK_FIELD_DESC = new C2097b("feedback", JceStruct.STRUCT_END, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("add_word_friend_feedback_args");
////        /* access modifiers changed from: private */
////        public static final C2097b TOPIC_ID_FIELD_DESC = new C2097b("topic_id", 8, 1);
////        private static final int __TOPIC_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public String feedback;
////        public int topic_id;
////
////        public enum _Fields implements C2124m {
////            TOPIC_ID(1, "topic_id"),
////            FEEDBACK(2, "feedback");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return TOPIC_ID;
////                    case 2:
////                        return FEEDBACK;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class add_word_friend_feedback_argsStandardScheme extends C2110c<add_word_friend_feedback_args> {
////            private add_word_friend_feedback_argsStandardScheme() {
////            }
////
////            /* synthetic */ add_word_friend_feedback_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, add_word_friend_feedback_args add_word_friend_feedback_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    add_word_friend_feedback_args.topic_id = fVar.mo18513n();
////                                    add_word_friend_feedback_args.setTopic_idIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    add_word_friend_feedback_args.feedback = fVar.mo18516q();
////                                    add_word_friend_feedback_args.setFeedbackIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!add_word_friend_feedback_args.isSetTopic_id()) {
////                            throw new C2101g("Required field 'topic_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        add_word_friend_feedback_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, add_word_friend_feedback_args add_word_friend_feedback_args) {
////                add_word_friend_feedback_args.validate();
////                add_word_friend_feedback_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(add_word_friend_feedback_args.TOPIC_ID_FIELD_DESC);
////                fVar.mo18493a(add_word_friend_feedback_args.topic_id);
////                if (add_word_friend_feedback_args.feedback != null) {
////                    fVar.mo18496a(add_word_friend_feedback_args.FEEDBACK_FIELD_DESC);
////                    fVar.mo18495a(add_word_friend_feedback_args.feedback);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class add_word_friend_feedback_argsStandardSchemeFactory implements C2109b {
////            private add_word_friend_feedback_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ add_word_friend_feedback_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public add_word_friend_feedback_argsStandardScheme getScheme() {
////                return new add_word_friend_feedback_argsStandardScheme(null);
////            }
////        }
////
////        class add_word_friend_feedback_argsTupleScheme extends C2111d<add_word_friend_feedback_args> {
////            private add_word_friend_feedback_argsTupleScheme() {
////            }
////
////            /* synthetic */ add_word_friend_feedback_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, add_word_friend_feedback_args add_word_friend_feedback_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(add_word_friend_feedback_args.topic_id);
////                lVar.mo18495a(add_word_friend_feedback_args.feedback);
////            }
////
////            public void read(C2100f fVar, add_word_friend_feedback_args add_word_friend_feedback_args) {
////                C2106l lVar = (C2106l) fVar;
////                add_word_friend_feedback_args.topic_id = lVar.mo18513n();
////                add_word_friend_feedback_args.setTopic_idIsSet(true);
////                add_word_friend_feedback_args.feedback = lVar.mo18516q();
////                add_word_friend_feedback_args.setFeedbackIsSet(true);
////            }
////        }
////
////        class add_word_friend_feedback_argsTupleSchemeFactory implements C2109b {
////            private add_word_friend_feedback_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ add_word_friend_feedback_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public add_word_friend_feedback_argsTupleScheme getScheme() {
////                return new add_word_friend_feedback_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new add_word_friend_feedback_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new add_word_friend_feedback_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.TOPIC_ID, new C2091a("topic_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.FEEDBACK, new C2091a("feedback", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(add_word_friend_feedback_args.class, metaDataMap);
////        }
////
////        public add_word_friend_feedback_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public add_word_friend_feedback_args(int i, String str) {
////            this();
////            this.topic_id = i;
////            setTopic_idIsSet(true);
////            this.feedback = str;
////        }
////
////        public add_word_friend_feedback_args(add_word_friend_feedback_args add_word_friend_feedback_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = add_word_friend_feedback_args.__isset_bitfield;
////            this.topic_id = add_word_friend_feedback_args.topic_id;
////            if (add_word_friend_feedback_args.isSetFeedback()) {
////                this.feedback = add_word_friend_feedback_args.feedback;
////            }
////        }
////
////        public add_word_friend_feedback_args deepCopy() {
////            return new add_word_friend_feedback_args(this);
////        }
////
////        public void clear() {
////            setTopic_idIsSet(false);
////            this.topic_id = 0;
////            this.feedback = null;
////        }
////
////        public int getTopic_id() {
////            return this.topic_id;
////        }
////
////        public add_word_friend_feedback_args setTopic_id(int i) {
////            this.topic_id = i;
////            setTopic_idIsSet(true);
////            return this;
////        }
////
////        public void unsetTopic_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetTopic_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setTopic_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public String getFeedback() {
////            return this.feedback;
////        }
////
////        public add_word_friend_feedback_args setFeedback(String str) {
////            this.feedback = str;
////            return this;
////        }
////
////        public void unsetFeedback() {
////            this.feedback = null;
////        }
////
////        public boolean isSetFeedback() {
////            return this.feedback != null;
////        }
////
////        public void setFeedbackIsSet(boolean z) {
////            if (!z) {
////                this.feedback = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case TOPIC_ID:
////                    if (obj == null) {
////                        unsetTopic_id();
////                        return;
////                    } else {
////                        setTopic_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case FEEDBACK:
////                    if (obj == null) {
////                        unsetFeedback();
////                        return;
////                    } else {
////                        setFeedback((String) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case TOPIC_ID:
////                    return Integer.valueOf(getTopic_id());
////                case FEEDBACK:
////                    return getFeedback();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case TOPIC_ID:
////                    return isSetTopic_id();
////                case FEEDBACK:
////                    return isSetFeedback();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof add_word_friend_feedback_args)) {
////                return equals((add_word_friend_feedback_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(add_word_friend_feedback_args add_word_friend_feedback_args) {
////            if (add_word_friend_feedback_args == null || this.topic_id != add_word_friend_feedback_args.topic_id) {
////                return false;
////            }
////            boolean isSetFeedback = isSetFeedback();
////            boolean isSetFeedback2 = add_word_friend_feedback_args.isSetFeedback();
////            if ((isSetFeedback || isSetFeedback2) && (!isSetFeedback || !isSetFeedback2 || !this.feedback.equals(add_word_friend_feedback_args.feedback))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(add_word_friend_feedback_args add_word_friend_feedback_args) {
////            if (!getClass().equals(add_word_friend_feedback_args.getClass())) {
////                return getClass().getName().compareTo(add_word_friend_feedback_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetTopic_id()).compareTo(Boolean.valueOf(add_word_friend_feedback_args.isSetTopic_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetTopic_id()) {
////                int a = C2121h.m5522a(this.topic_id, add_word_friend_feedback_args.topic_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetFeedback()).compareTo(Boolean.valueOf(add_word_friend_feedback_args.isSetFeedback()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetFeedback()) {
////                int a2 = C2121h.m5525a(this.feedback, add_word_friend_feedback_args.feedback);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("add_word_friend_feedback_args(");
////            sb.append("topic_id:");
////            sb.append(this.topic_id);
////            sb.append(", ");
////            sb.append("feedback:");
////            if (this.feedback == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.feedback);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.feedback == null) {
////                throw new C2101g("Required field 'feedback' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class add_word_friend_feedback_result implements Serializable, Cloneable, Comparable<add_word_friend_feedback_result>, C2116f<add_word_friend_feedback_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("add_word_friend_feedback_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class add_word_friend_feedback_resultStandardScheme extends C2110c<add_word_friend_feedback_result> {
////            private add_word_friend_feedback_resultStandardScheme() {
////            }
////
////            /* synthetic */ add_word_friend_feedback_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, add_word_friend_feedback_result add_word_friend_feedback_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    add_word_friend_feedback_result.success = fVar.mo18513n();
////                                    add_word_friend_feedback_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    add_word_friend_feedback_result.sysException = new BESystemException();
////                                    add_word_friend_feedback_result.sysException.read(fVar);
////                                    add_word_friend_feedback_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    add_word_friend_feedback_result.logicException = new BELogicException();
////                                    add_word_friend_feedback_result.logicException.read(fVar);
////                                    add_word_friend_feedback_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        add_word_friend_feedback_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, add_word_friend_feedback_result add_word_friend_feedback_result) {
////                add_word_friend_feedback_result.validate();
////                add_word_friend_feedback_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (add_word_friend_feedback_result.isSetSuccess()) {
////                    fVar.mo18496a(add_word_friend_feedback_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(add_word_friend_feedback_result.success);
////                }
////                if (add_word_friend_feedback_result.sysException != null) {
////                    fVar.mo18496a(add_word_friend_feedback_result.SYS_EXCEPTION_FIELD_DESC);
////                    add_word_friend_feedback_result.sysException.write(fVar);
////                }
////                if (add_word_friend_feedback_result.logicException != null) {
////                    fVar.mo18496a(add_word_friend_feedback_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    add_word_friend_feedback_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class add_word_friend_feedback_resultStandardSchemeFactory implements C2109b {
////            private add_word_friend_feedback_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ add_word_friend_feedback_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public add_word_friend_feedback_resultStandardScheme getScheme() {
////                return new add_word_friend_feedback_resultStandardScheme(null);
////            }
////        }
////
////        class add_word_friend_feedback_resultTupleScheme extends C2111d<add_word_friend_feedback_result> {
////            private add_word_friend_feedback_resultTupleScheme() {
////            }
////
////            /* synthetic */ add_word_friend_feedback_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, add_word_friend_feedback_result add_word_friend_feedback_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (add_word_friend_feedback_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (add_word_friend_feedback_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (add_word_friend_feedback_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (add_word_friend_feedback_result.isSetSuccess()) {
////                    lVar.mo18493a(add_word_friend_feedback_result.success);
////                }
////                if (add_word_friend_feedback_result.isSetSysException()) {
////                    add_word_friend_feedback_result.sysException.write(lVar);
////                }
////                if (add_word_friend_feedback_result.isSetLogicException()) {
////                    add_word_friend_feedback_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, add_word_friend_feedback_result add_word_friend_feedback_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    add_word_friend_feedback_result.success = lVar.mo18513n();
////                    add_word_friend_feedback_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    add_word_friend_feedback_result.sysException = new BESystemException();
////                    add_word_friend_feedback_result.sysException.read(lVar);
////                    add_word_friend_feedback_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    add_word_friend_feedback_result.logicException = new BELogicException();
////                    add_word_friend_feedback_result.logicException.read(lVar);
////                    add_word_friend_feedback_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class add_word_friend_feedback_resultTupleSchemeFactory implements C2109b {
////            private add_word_friend_feedback_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ add_word_friend_feedback_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public add_word_friend_feedback_resultTupleScheme getScheme() {
////                return new add_word_friend_feedback_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new add_word_friend_feedback_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new add_word_friend_feedback_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(add_word_friend_feedback_result.class, metaDataMap);
////        }
////
////        public add_word_friend_feedback_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public add_word_friend_feedback_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public add_word_friend_feedback_result(add_word_friend_feedback_result add_word_friend_feedback_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = add_word_friend_feedback_result.__isset_bitfield;
////            this.success = add_word_friend_feedback_result.success;
////            if (add_word_friend_feedback_result.isSetSysException()) {
////                this.sysException = new BESystemException(add_word_friend_feedback_result.sysException);
////            }
////            if (add_word_friend_feedback_result.isSetLogicException()) {
////                this.logicException = new BELogicException(add_word_friend_feedback_result.logicException);
////            }
////        }
////
////        public add_word_friend_feedback_result deepCopy() {
////            return new add_word_friend_feedback_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public add_word_friend_feedback_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public add_word_friend_feedback_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public add_word_friend_feedback_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof add_word_friend_feedback_result)) {
////                return equals((add_word_friend_feedback_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(add_word_friend_feedback_result add_word_friend_feedback_result) {
////            if (add_word_friend_feedback_result == null || this.success != add_word_friend_feedback_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = add_word_friend_feedback_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(add_word_friend_feedback_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = add_word_friend_feedback_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(add_word_friend_feedback_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(add_word_friend_feedback_result add_word_friend_feedback_result) {
////            if (!getClass().equals(add_word_friend_feedback_result.getClass())) {
////                return getClass().getName().compareTo(add_word_friend_feedback_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(add_word_friend_feedback_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, add_word_friend_feedback_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(add_word_friend_feedback_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) add_word_friend_feedback_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(add_word_friend_feedback_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) add_word_friend_feedback_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("add_word_friend_feedback_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class bind_try_user_args implements Serializable, Cloneable, Comparable<bind_try_user_args>, C2116f<bind_try_user_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b EMAIL_FIELD_DESC = new C2097b("email", JceStruct.STRUCT_END, 1);
////        /* access modifiers changed from: private */
////        public static final C2097b PASSWORD_FIELD_DESC = new C2097b("password", JceStruct.STRUCT_END, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("bind_try_user_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public String email;
////        public String password;
////
////        public enum _Fields implements C2124m {
////            EMAIL(1, "email"),
////            PASSWORD(2, "password");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return EMAIL;
////                    case 2:
////                        return PASSWORD;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class bind_try_user_argsStandardScheme extends C2110c<bind_try_user_args> {
////            private bind_try_user_argsStandardScheme() {
////            }
////
////            /* synthetic */ bind_try_user_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, bind_try_user_args bind_try_user_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    bind_try_user_args.email = fVar.mo18516q();
////                                    bind_try_user_args.setEmailIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    bind_try_user_args.password = fVar.mo18516q();
////                                    bind_try_user_args.setPasswordIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        bind_try_user_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, bind_try_user_args bind_try_user_args) {
////                bind_try_user_args.validate();
////                bind_try_user_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (bind_try_user_args.email != null) {
////                    fVar.mo18496a(bind_try_user_args.EMAIL_FIELD_DESC);
////                    fVar.mo18495a(bind_try_user_args.email);
////                }
////                if (bind_try_user_args.password != null) {
////                    fVar.mo18496a(bind_try_user_args.PASSWORD_FIELD_DESC);
////                    fVar.mo18495a(bind_try_user_args.password);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class bind_try_user_argsStandardSchemeFactory implements C2109b {
////            private bind_try_user_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ bind_try_user_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public bind_try_user_argsStandardScheme getScheme() {
////                return new bind_try_user_argsStandardScheme(null);
////            }
////        }
////
////        class bind_try_user_argsTupleScheme extends C2111d<bind_try_user_args> {
////            private bind_try_user_argsTupleScheme() {
////            }
////
////            /* synthetic */ bind_try_user_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, bind_try_user_args bind_try_user_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18495a(bind_try_user_args.email);
////                lVar.mo18495a(bind_try_user_args.password);
////            }
////
////            public void read(C2100f fVar, bind_try_user_args bind_try_user_args) {
////                C2106l lVar = (C2106l) fVar;
////                bind_try_user_args.email = lVar.mo18516q();
////                bind_try_user_args.setEmailIsSet(true);
////                bind_try_user_args.password = lVar.mo18516q();
////                bind_try_user_args.setPasswordIsSet(true);
////            }
////        }
////
////        class bind_try_user_argsTupleSchemeFactory implements C2109b {
////            private bind_try_user_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ bind_try_user_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public bind_try_user_argsTupleScheme getScheme() {
////                return new bind_try_user_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new bind_try_user_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new bind_try_user_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.EMAIL, new C2091a("email", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            enumMap.put(_Fields.PASSWORD, new C2091a("password", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(bind_try_user_args.class, metaDataMap);
////        }
////
////        public bind_try_user_args() {
////        }
////
////        public bind_try_user_args(String str, String str2) {
////            this();
////            this.email = str;
////            this.password = str2;
////        }
////
////        public bind_try_user_args(bind_try_user_args bind_try_user_args) {
////            if (bind_try_user_args.isSetEmail()) {
////                this.email = bind_try_user_args.email;
////            }
////            if (bind_try_user_args.isSetPassword()) {
////                this.password = bind_try_user_args.password;
////            }
////        }
////
////        public bind_try_user_args deepCopy() {
////            return new bind_try_user_args(this);
////        }
////
////        public void clear() {
////            this.email = null;
////            this.password = null;
////        }
////
////        public String getEmail() {
////            return this.email;
////        }
////
////        public bind_try_user_args setEmail(String str) {
////            this.email = str;
////            return this;
////        }
////
////        public void unsetEmail() {
////            this.email = null;
////        }
////
////        public boolean isSetEmail() {
////            return this.email != null;
////        }
////
////        public void setEmailIsSet(boolean z) {
////            if (!z) {
////                this.email = null;
////            }
////        }
////
////        public String getPassword() {
////            return this.password;
////        }
////
////        public bind_try_user_args setPassword(String str) {
////            this.password = str;
////            return this;
////        }
////
////        public void unsetPassword() {
////            this.password = null;
////        }
////
////        public boolean isSetPassword() {
////            return this.password != null;
////        }
////
////        public void setPasswordIsSet(boolean z) {
////            if (!z) {
////                this.password = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case EMAIL:
////                    if (obj == null) {
////                        unsetEmail();
////                        return;
////                    } else {
////                        setEmail((String) obj);
////                        return;
////                    }
////                case PASSWORD:
////                    if (obj == null) {
////                        unsetPassword();
////                        return;
////                    } else {
////                        setPassword((String) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case EMAIL:
////                    return getEmail();
////                case PASSWORD:
////                    return getPassword();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case EMAIL:
////                    return isSetEmail();
////                case PASSWORD:
////                    return isSetPassword();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof bind_try_user_args)) {
////                return equals((bind_try_user_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(bind_try_user_args bind_try_user_args) {
////            if (bind_try_user_args == null) {
////                return false;
////            }
////            boolean isSetEmail = isSetEmail();
////            boolean isSetEmail2 = bind_try_user_args.isSetEmail();
////            if ((isSetEmail || isSetEmail2) && (!isSetEmail || !isSetEmail2 || !this.email.equals(bind_try_user_args.email))) {
////                return false;
////            }
////            boolean isSetPassword = isSetPassword();
////            boolean isSetPassword2 = bind_try_user_args.isSetPassword();
////            if ((isSetPassword || isSetPassword2) && (!isSetPassword || !isSetPassword2 || !this.password.equals(bind_try_user_args.password))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(bind_try_user_args bind_try_user_args) {
////            if (!getClass().equals(bind_try_user_args.getClass())) {
////                return getClass().getName().compareTo(bind_try_user_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetEmail()).compareTo(Boolean.valueOf(bind_try_user_args.isSetEmail()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetEmail()) {
////                int a = C2121h.m5525a(this.email, bind_try_user_args.email);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetPassword()).compareTo(Boolean.valueOf(bind_try_user_args.isSetPassword()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetPassword()) {
////                int a2 = C2121h.m5525a(this.password, bind_try_user_args.password);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("bind_try_user_args(");
////            sb.append("email:");
////            if (this.email == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.email);
////            }
////            sb.append(", ");
////            sb.append("password:");
////            if (this.password == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.password);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.email == null) {
////                throw new C2101g("Required field 'email' was not present! Struct: " + toString());
////            } else if (this.password == null) {
////                throw new C2101g("Required field 'password' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class bind_try_user_result implements Serializable, Cloneable, Comparable<bind_try_user_result>, C2116f<bind_try_user_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("bind_try_user_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class bind_try_user_resultStandardScheme extends C2110c<bind_try_user_result> {
////            private bind_try_user_resultStandardScheme() {
////            }
////
////            /* synthetic */ bind_try_user_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, bind_try_user_result bind_try_user_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    bind_try_user_result.success = fVar.mo18513n();
////                                    bind_try_user_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    bind_try_user_result.sysException = new BESystemException();
////                                    bind_try_user_result.sysException.read(fVar);
////                                    bind_try_user_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    bind_try_user_result.logicException = new BELogicException();
////                                    bind_try_user_result.logicException.read(fVar);
////                                    bind_try_user_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        bind_try_user_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, bind_try_user_result bind_try_user_result) {
////                bind_try_user_result.validate();
////                bind_try_user_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (bind_try_user_result.isSetSuccess()) {
////                    fVar.mo18496a(bind_try_user_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(bind_try_user_result.success);
////                }
////                if (bind_try_user_result.sysException != null) {
////                    fVar.mo18496a(bind_try_user_result.SYS_EXCEPTION_FIELD_DESC);
////                    bind_try_user_result.sysException.write(fVar);
////                }
////                if (bind_try_user_result.logicException != null) {
////                    fVar.mo18496a(bind_try_user_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    bind_try_user_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class bind_try_user_resultStandardSchemeFactory implements C2109b {
////            private bind_try_user_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ bind_try_user_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public bind_try_user_resultStandardScheme getScheme() {
////                return new bind_try_user_resultStandardScheme(null);
////            }
////        }
////
////        class bind_try_user_resultTupleScheme extends C2111d<bind_try_user_result> {
////            private bind_try_user_resultTupleScheme() {
////            }
////
////            /* synthetic */ bind_try_user_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, bind_try_user_result bind_try_user_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (bind_try_user_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (bind_try_user_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (bind_try_user_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (bind_try_user_result.isSetSuccess()) {
////                    lVar.mo18493a(bind_try_user_result.success);
////                }
////                if (bind_try_user_result.isSetSysException()) {
////                    bind_try_user_result.sysException.write(lVar);
////                }
////                if (bind_try_user_result.isSetLogicException()) {
////                    bind_try_user_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, bind_try_user_result bind_try_user_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    bind_try_user_result.success = lVar.mo18513n();
////                    bind_try_user_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    bind_try_user_result.sysException = new BESystemException();
////                    bind_try_user_result.sysException.read(lVar);
////                    bind_try_user_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    bind_try_user_result.logicException = new BELogicException();
////                    bind_try_user_result.logicException.read(lVar);
////                    bind_try_user_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class bind_try_user_resultTupleSchemeFactory implements C2109b {
////            private bind_try_user_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ bind_try_user_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public bind_try_user_resultTupleScheme getScheme() {
////                return new bind_try_user_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new bind_try_user_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new bind_try_user_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(bind_try_user_result.class, metaDataMap);
////        }
////
////        public bind_try_user_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public bind_try_user_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public bind_try_user_result(bind_try_user_result bind_try_user_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = bind_try_user_result.__isset_bitfield;
////            this.success = bind_try_user_result.success;
////            if (bind_try_user_result.isSetSysException()) {
////                this.sysException = new BESystemException(bind_try_user_result.sysException);
////            }
////            if (bind_try_user_result.isSetLogicException()) {
////                this.logicException = new BELogicException(bind_try_user_result.logicException);
////            }
////        }
////
////        public bind_try_user_result deepCopy() {
////            return new bind_try_user_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public bind_try_user_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public bind_try_user_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public bind_try_user_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof bind_try_user_result)) {
////                return equals((bind_try_user_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(bind_try_user_result bind_try_user_result) {
////            if (bind_try_user_result == null || this.success != bind_try_user_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = bind_try_user_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(bind_try_user_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = bind_try_user_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(bind_try_user_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(bind_try_user_result bind_try_user_result) {
////            if (!getClass().equals(bind_try_user_result.getClass())) {
////                return getClass().getName().compareTo(bind_try_user_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(bind_try_user_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, bind_try_user_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(bind_try_user_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) bind_try_user_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(bind_try_user_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) bind_try_user_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("bind_try_user_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class book_list_args implements Serializable, Cloneable, Comparable<book_list_args>, C2116f<book_list_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b ONLY_SELECTED_FIELD_DESC = new C2097b("only_selected", 2, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("book_list_args");
////        private static final int __ONLY_SELECTED_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public boolean only_selected;
////
////        public enum _Fields implements C2124m {
////            ONLY_SELECTED(1, "only_selected");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return ONLY_SELECTED;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class book_list_argsStandardScheme extends C2110c<book_list_args> {
////            private book_list_argsStandardScheme() {
////            }
////
////            /* synthetic */ book_list_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, book_list_args book_list_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 2) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    book_list_args.only_selected = fVar.mo18510k();
////                                    book_list_args.setOnly_selectedIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!book_list_args.isSetOnly_selected()) {
////                            throw new C2101g("Required field 'only_selected' was not found in serialized data! Struct: " + toString());
////                        }
////                        book_list_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, book_list_args book_list_args) {
////                book_list_args.validate();
////                book_list_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(book_list_args.ONLY_SELECTED_FIELD_DESC);
////                fVar.mo18500a(book_list_args.only_selected);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class book_list_argsStandardSchemeFactory implements C2109b {
////            private book_list_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ book_list_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public book_list_argsStandardScheme getScheme() {
////                return new book_list_argsStandardScheme(null);
////            }
////        }
////
////        class book_list_argsTupleScheme extends C2111d<book_list_args> {
////            private book_list_argsTupleScheme() {
////            }
////
////            /* synthetic */ book_list_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, book_list_args book_list_args) {
////                ((C2106l) fVar).mo18500a(book_list_args.only_selected);
////            }
////
////            public void read(C2100f fVar, book_list_args book_list_args) {
////                book_list_args.only_selected = ((C2106l) fVar).mo18510k();
////                book_list_args.setOnly_selectedIsSet(true);
////            }
////        }
////
////        class book_list_argsTupleSchemeFactory implements C2109b {
////            private book_list_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ book_list_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public book_list_argsTupleScheme getScheme() {
////                return new book_list_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new book_list_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new book_list_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.ONLY_SELECTED, new C2091a("only_selected", 1, new C2092b(2, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(book_list_args.class, metaDataMap);
////        }
////
////        public book_list_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public book_list_args(boolean z) {
////            this();
////            this.only_selected = z;
////            setOnly_selectedIsSet(true);
////        }
////
////        public book_list_args(book_list_args book_list_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = book_list_args.__isset_bitfield;
////            this.only_selected = book_list_args.only_selected;
////        }
////
////        public book_list_args deepCopy() {
////            return new book_list_args(this);
////        }
////
////        public void clear() {
////            setOnly_selectedIsSet(false);
////            this.only_selected = false;
////        }
////
////        public boolean isOnly_selected() {
////            return this.only_selected;
////        }
////
////        public book_list_args setOnly_selected(boolean z) {
////            this.only_selected = z;
////            setOnly_selectedIsSet(true);
////            return this;
////        }
////
////        public void unsetOnly_selected() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetOnly_selected() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setOnly_selectedIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case ONLY_SELECTED:
////                    if (obj == null) {
////                        unsetOnly_selected();
////                        return;
////                    } else {
////                        setOnly_selected(((Boolean) obj).booleanValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case ONLY_SELECTED:
////                    return Boolean.valueOf(isOnly_selected());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case ONLY_SELECTED:
////                    return isSetOnly_selected();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof book_list_args)) {
////                return equals((book_list_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(book_list_args book_list_args) {
////            if (book_list_args != null && this.only_selected == book_list_args.only_selected) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(book_list_args book_list_args) {
////            if (!getClass().equals(book_list_args.getClass())) {
////                return getClass().getName().compareTo(book_list_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetOnly_selected()).compareTo(Boolean.valueOf(book_list_args.isSetOnly_selected()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetOnly_selected()) {
////                int a = C2121h.m5529a(this.only_selected, book_list_args.only_selected);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("book_list_args(");
////            sb.append("only_selected:");
////            sb.append(this.only_selected);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class book_list_result implements Serializable, Cloneable, Comparable<book_list_result>, C2116f<book_list_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("book_list_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBBookList success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class book_list_resultStandardScheme extends C2110c<book_list_result> {
////            private book_list_resultStandardScheme() {
////            }
////
////            /* synthetic */ book_list_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, book_list_result book_list_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    book_list_result.success = new BBBookList();
////                                    book_list_result.success.read(fVar);
////                                    book_list_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    book_list_result.sysException = new BESystemException();
////                                    book_list_result.sysException.read(fVar);
////                                    book_list_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        book_list_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, book_list_result book_list_result) {
////                book_list_result.validate();
////                book_list_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (book_list_result.success != null) {
////                    fVar.mo18496a(book_list_result.SUCCESS_FIELD_DESC);
////                    book_list_result.success.write(fVar);
////                }
////                if (book_list_result.sysException != null) {
////                    fVar.mo18496a(book_list_result.SYS_EXCEPTION_FIELD_DESC);
////                    book_list_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class book_list_resultStandardSchemeFactory implements C2109b {
////            private book_list_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ book_list_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public book_list_resultStandardScheme getScheme() {
////                return new book_list_resultStandardScheme(null);
////            }
////        }
////
////        class book_list_resultTupleScheme extends C2111d<book_list_result> {
////            private book_list_resultTupleScheme() {
////            }
////
////            /* synthetic */ book_list_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, book_list_result book_list_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (book_list_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (book_list_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (book_list_result.isSetSuccess()) {
////                    book_list_result.success.write(lVar);
////                }
////                if (book_list_result.isSetSysException()) {
////                    book_list_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, book_list_result book_list_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    book_list_result.success = new BBBookList();
////                    book_list_result.success.read(lVar);
////                    book_list_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    book_list_result.sysException = new BESystemException();
////                    book_list_result.sysException.read(lVar);
////                    book_list_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class book_list_resultTupleSchemeFactory implements C2109b {
////            private book_list_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ book_list_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public book_list_resultTupleScheme getScheme() {
////                return new book_list_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new book_list_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new book_list_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBBookList.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(book_list_result.class, metaDataMap);
////        }
////
////        public book_list_result() {
////        }
////
////        public book_list_result(BBBookList bBBookList, BESystemException bESystemException) {
////            this();
////            this.success = bBBookList;
////            this.sysException = bESystemException;
////        }
////
////        public book_list_result(book_list_result book_list_result) {
////            if (book_list_result.isSetSuccess()) {
////                this.success = new BBBookList(book_list_result.success);
////            }
////            if (book_list_result.isSetSysException()) {
////                this.sysException = new BESystemException(book_list_result.sysException);
////            }
////        }
////
////        public book_list_result deepCopy() {
////            return new book_list_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////        }
////
////        public BBBookList getSuccess() {
////            return this.success;
////        }
////
////        public book_list_result setSuccess(BBBookList bBBookList) {
////            this.success = bBBookList;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public book_list_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBBookList) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof book_list_result)) {
////                return equals((book_list_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(book_list_result book_list_result) {
////            if (book_list_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = book_list_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(book_list_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = book_list_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(book_list_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(book_list_result book_list_result) {
////            if (!getClass().equals(book_list_result.getClass())) {
////                return getClass().getName().compareTo(book_list_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(book_list_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) book_list_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(book_list_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) book_list_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("book_list_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class check_infos_args implements Serializable, Cloneable, Comparable<check_infos_args>, C2116f<check_infos_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("check_infos_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class check_infos_argsStandardScheme extends C2110c<check_infos_args> {
////            private check_infos_argsStandardScheme() {
////            }
////
////            /* synthetic */ check_infos_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, check_infos_args check_infos_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        check_infos_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, check_infos_args check_infos_args) {
////                check_infos_args.validate();
////                check_infos_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class check_infos_argsStandardSchemeFactory implements C2109b {
////            private check_infos_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ check_infos_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public check_infos_argsStandardScheme getScheme() {
////                return new check_infos_argsStandardScheme(null);
////            }
////        }
////
////        class check_infos_argsTupleScheme extends C2111d<check_infos_args> {
////            private check_infos_argsTupleScheme() {
////            }
////
////            /* synthetic */ check_infos_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, check_infos_args check_infos_args) {
////            }
////
////            public void read(C2100f fVar, check_infos_args check_infos_args) {
////            }
////        }
////
////        class check_infos_argsTupleSchemeFactory implements C2109b {
////            private check_infos_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ check_infos_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public check_infos_argsTupleScheme getScheme() {
////                return new check_infos_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new check_infos_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new check_infos_argsTupleSchemeFactory(null));
////            C2091a.m5430a(check_infos_args.class, metaDataMap);
////        }
////
////        public check_infos_args() {
////        }
////
////        public check_infos_args(check_infos_args check_infos_args) {
////        }
////
////        public check_infos_args deepCopy() {
////            return new check_infos_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2434x58b8d764;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2434x58b8d764;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2434x58b8d764;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof check_infos_args)) {
////                return equals((check_infos_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(check_infos_args check_infos_args) {
////            if (check_infos_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(check_infos_args check_infos_args) {
////            if (!getClass().equals(check_infos_args.getClass())) {
////                return getClass().getName().compareTo(check_infos_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("check_infos_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class check_infos_result implements Serializable, Cloneable, Comparable<check_infos_result>, C2116f<check_infos_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("check_infos_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBCheckInfo success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class check_infos_resultStandardScheme extends C2110c<check_infos_result> {
////            private check_infos_resultStandardScheme() {
////            }
////
////            /* synthetic */ check_infos_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, check_infos_result check_infos_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    check_infos_result.success = new BBCheckInfo();
////                                    check_infos_result.success.read(fVar);
////                                    check_infos_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    check_infos_result.sysException = new BESystemException();
////                                    check_infos_result.sysException.read(fVar);
////                                    check_infos_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        check_infos_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, check_infos_result check_infos_result) {
////                check_infos_result.validate();
////                check_infos_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (check_infos_result.success != null) {
////                    fVar.mo18496a(check_infos_result.SUCCESS_FIELD_DESC);
////                    check_infos_result.success.write(fVar);
////                }
////                if (check_infos_result.sysException != null) {
////                    fVar.mo18496a(check_infos_result.SYS_EXCEPTION_FIELD_DESC);
////                    check_infos_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class check_infos_resultStandardSchemeFactory implements C2109b {
////            private check_infos_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ check_infos_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public check_infos_resultStandardScheme getScheme() {
////                return new check_infos_resultStandardScheme(null);
////            }
////        }
////
////        class check_infos_resultTupleScheme extends C2111d<check_infos_result> {
////            private check_infos_resultTupleScheme() {
////            }
////
////            /* synthetic */ check_infos_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, check_infos_result check_infos_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (check_infos_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (check_infos_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (check_infos_result.isSetSuccess()) {
////                    check_infos_result.success.write(lVar);
////                }
////                if (check_infos_result.isSetSysException()) {
////                    check_infos_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, check_infos_result check_infos_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    check_infos_result.success = new BBCheckInfo();
////                    check_infos_result.success.read(lVar);
////                    check_infos_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    check_infos_result.sysException = new BESystemException();
////                    check_infos_result.sysException.read(lVar);
////                    check_infos_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class check_infos_resultTupleSchemeFactory implements C2109b {
////            private check_infos_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ check_infos_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public check_infos_resultTupleScheme getScheme() {
////                return new check_infos_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new check_infos_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new check_infos_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBCheckInfo.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(check_infos_result.class, metaDataMap);
////        }
////
////        public check_infos_result() {
////        }
////
////        public check_infos_result(BBCheckInfo bBCheckInfo, BESystemException bESystemException) {
////            this();
////            this.success = bBCheckInfo;
////            this.sysException = bESystemException;
////        }
////
////        public check_infos_result(check_infos_result check_infos_result) {
////            if (check_infos_result.isSetSuccess()) {
////                this.success = new BBCheckInfo(check_infos_result.success);
////            }
////            if (check_infos_result.isSetSysException()) {
////                this.sysException = new BESystemException(check_infos_result.sysException);
////            }
////        }
////
////        public check_infos_result deepCopy() {
////            return new check_infos_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////        }
////
////        public BBCheckInfo getSuccess() {
////            return this.success;
////        }
////
////        public check_infos_result setSuccess(BBCheckInfo bBCheckInfo) {
////            this.success = bBCheckInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public check_infos_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBCheckInfo) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof check_infos_result)) {
////                return equals((check_infos_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(check_infos_result check_infos_result) {
////            if (check_infos_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = check_infos_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(check_infos_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = check_infos_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(check_infos_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(check_infos_result check_infos_result) {
////            if (!getClass().equals(check_infos_result.getClass())) {
////                return getClass().getName().compareTo(check_infos_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(check_infos_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) check_infos_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(check_infos_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) check_infos_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("check_infos_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class daka_success_notify_args implements Serializable, Cloneable, Comparable<daka_success_notify_args>, C2116f<daka_success_notify_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b DAKA_ID_FIELD_DESC = new C2097b("daka_id", 8, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("daka_success_notify_args");
////        private static final int __DAKA_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int daka_id;
////
////        public enum _Fields implements C2124m {
////            DAKA_ID(1, "daka_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return DAKA_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class daka_success_notify_argsStandardScheme extends C2110c<daka_success_notify_args> {
////            private daka_success_notify_argsStandardScheme() {
////            }
////
////            /* synthetic */ daka_success_notify_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, daka_success_notify_args daka_success_notify_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    daka_success_notify_args.daka_id = fVar.mo18513n();
////                                    daka_success_notify_args.setDaka_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!daka_success_notify_args.isSetDaka_id()) {
////                            throw new C2101g("Required field 'daka_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        daka_success_notify_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, daka_success_notify_args daka_success_notify_args) {
////                daka_success_notify_args.validate();
////                daka_success_notify_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(daka_success_notify_args.DAKA_ID_FIELD_DESC);
////                fVar.mo18493a(daka_success_notify_args.daka_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class daka_success_notify_argsStandardSchemeFactory implements C2109b {
////            private daka_success_notify_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ daka_success_notify_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public daka_success_notify_argsStandardScheme getScheme() {
////                return new daka_success_notify_argsStandardScheme(null);
////            }
////        }
////
////        class daka_success_notify_argsTupleScheme extends C2111d<daka_success_notify_args> {
////            private daka_success_notify_argsTupleScheme() {
////            }
////
////            /* synthetic */ daka_success_notify_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, daka_success_notify_args daka_success_notify_args) {
////                ((C2106l) fVar).mo18493a(daka_success_notify_args.daka_id);
////            }
////
////            public void read(C2100f fVar, daka_success_notify_args daka_success_notify_args) {
////                daka_success_notify_args.daka_id = ((C2106l) fVar).mo18513n();
////                daka_success_notify_args.setDaka_idIsSet(true);
////            }
////        }
////
////        class daka_success_notify_argsTupleSchemeFactory implements C2109b {
////            private daka_success_notify_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ daka_success_notify_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public daka_success_notify_argsTupleScheme getScheme() {
////                return new daka_success_notify_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new daka_success_notify_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new daka_success_notify_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.DAKA_ID, new C2091a("daka_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(daka_success_notify_args.class, metaDataMap);
////        }
////
////        public daka_success_notify_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public daka_success_notify_args(int i) {
////            this();
////            this.daka_id = i;
////            setDaka_idIsSet(true);
////        }
////
////        public daka_success_notify_args(daka_success_notify_args daka_success_notify_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = daka_success_notify_args.__isset_bitfield;
////            this.daka_id = daka_success_notify_args.daka_id;
////        }
////
////        public daka_success_notify_args deepCopy() {
////            return new daka_success_notify_args(this);
////        }
////
////        public void clear() {
////            setDaka_idIsSet(false);
////            this.daka_id = 0;
////        }
////
////        public int getDaka_id() {
////            return this.daka_id;
////        }
////
////        public daka_success_notify_args setDaka_id(int i) {
////            this.daka_id = i;
////            setDaka_idIsSet(true);
////            return this;
////        }
////
////        public void unsetDaka_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetDaka_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setDaka_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case DAKA_ID:
////                    if (obj == null) {
////                        unsetDaka_id();
////                        return;
////                    } else {
////                        setDaka_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case DAKA_ID:
////                    return Integer.valueOf(getDaka_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case DAKA_ID:
////                    return isSetDaka_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof daka_success_notify_args)) {
////                return equals((daka_success_notify_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(daka_success_notify_args daka_success_notify_args) {
////            if (daka_success_notify_args != null && this.daka_id == daka_success_notify_args.daka_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(daka_success_notify_args daka_success_notify_args) {
////            if (!getClass().equals(daka_success_notify_args.getClass())) {
////                return getClass().getName().compareTo(daka_success_notify_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetDaka_id()).compareTo(Boolean.valueOf(daka_success_notify_args.isSetDaka_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetDaka_id()) {
////                int a = C2121h.m5522a(this.daka_id, daka_success_notify_args.daka_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("daka_success_notify_args(");
////            sb.append("daka_id:");
////            sb.append(this.daka_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class daka_success_notify_result implements Serializable, Cloneable, Comparable<daka_success_notify_result>, C2116f<daka_success_notify_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("daka_success_notify_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class daka_success_notify_resultStandardScheme extends C2110c<daka_success_notify_result> {
////            private daka_success_notify_resultStandardScheme() {
////            }
////
////            /* synthetic */ daka_success_notify_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, daka_success_notify_result daka_success_notify_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    daka_success_notify_result.success = fVar.mo18513n();
////                                    daka_success_notify_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    daka_success_notify_result.sysException = new BESystemException();
////                                    daka_success_notify_result.sysException.read(fVar);
////                                    daka_success_notify_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    daka_success_notify_result.logicException = new BELogicException();
////                                    daka_success_notify_result.logicException.read(fVar);
////                                    daka_success_notify_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        daka_success_notify_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, daka_success_notify_result daka_success_notify_result) {
////                daka_success_notify_result.validate();
////                daka_success_notify_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (daka_success_notify_result.isSetSuccess()) {
////                    fVar.mo18496a(daka_success_notify_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(daka_success_notify_result.success);
////                }
////                if (daka_success_notify_result.sysException != null) {
////                    fVar.mo18496a(daka_success_notify_result.SYS_EXCEPTION_FIELD_DESC);
////                    daka_success_notify_result.sysException.write(fVar);
////                }
////                if (daka_success_notify_result.logicException != null) {
////                    fVar.mo18496a(daka_success_notify_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    daka_success_notify_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class daka_success_notify_resultStandardSchemeFactory implements C2109b {
////            private daka_success_notify_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ daka_success_notify_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public daka_success_notify_resultStandardScheme getScheme() {
////                return new daka_success_notify_resultStandardScheme(null);
////            }
////        }
////
////        class daka_success_notify_resultTupleScheme extends C2111d<daka_success_notify_result> {
////            private daka_success_notify_resultTupleScheme() {
////            }
////
////            /* synthetic */ daka_success_notify_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, daka_success_notify_result daka_success_notify_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (daka_success_notify_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (daka_success_notify_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (daka_success_notify_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (daka_success_notify_result.isSetSuccess()) {
////                    lVar.mo18493a(daka_success_notify_result.success);
////                }
////                if (daka_success_notify_result.isSetSysException()) {
////                    daka_success_notify_result.sysException.write(lVar);
////                }
////                if (daka_success_notify_result.isSetLogicException()) {
////                    daka_success_notify_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, daka_success_notify_result daka_success_notify_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    daka_success_notify_result.success = lVar.mo18513n();
////                    daka_success_notify_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    daka_success_notify_result.sysException = new BESystemException();
////                    daka_success_notify_result.sysException.read(lVar);
////                    daka_success_notify_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    daka_success_notify_result.logicException = new BELogicException();
////                    daka_success_notify_result.logicException.read(lVar);
////                    daka_success_notify_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class daka_success_notify_resultTupleSchemeFactory implements C2109b {
////            private daka_success_notify_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ daka_success_notify_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public daka_success_notify_resultTupleScheme getScheme() {
////                return new daka_success_notify_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new daka_success_notify_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new daka_success_notify_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(daka_success_notify_result.class, metaDataMap);
////        }
////
////        public daka_success_notify_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public daka_success_notify_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public daka_success_notify_result(daka_success_notify_result daka_success_notify_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = daka_success_notify_result.__isset_bitfield;
////            this.success = daka_success_notify_result.success;
////            if (daka_success_notify_result.isSetSysException()) {
////                this.sysException = new BESystemException(daka_success_notify_result.sysException);
////            }
////            if (daka_success_notify_result.isSetLogicException()) {
////                this.logicException = new BELogicException(daka_success_notify_result.logicException);
////            }
////        }
////
////        public daka_success_notify_result deepCopy() {
////            return new daka_success_notify_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public daka_success_notify_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public daka_success_notify_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public daka_success_notify_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof daka_success_notify_result)) {
////                return equals((daka_success_notify_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(daka_success_notify_result daka_success_notify_result) {
////            if (daka_success_notify_result == null || this.success != daka_success_notify_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = daka_success_notify_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(daka_success_notify_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = daka_success_notify_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(daka_success_notify_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(daka_success_notify_result daka_success_notify_result) {
////            if (!getClass().equals(daka_success_notify_result.getClass())) {
////                return getClass().getName().compareTo(daka_success_notify_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(daka_success_notify_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, daka_success_notify_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(daka_success_notify_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) daka_success_notify_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(daka_success_notify_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) daka_success_notify_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("daka_success_notify_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class delete_done_score_data_args implements Serializable, Cloneable, Comparable<delete_done_score_data_args>, C2116f<delete_done_score_data_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("delete_done_score_data_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class delete_done_score_data_argsStandardScheme extends C2110c<delete_done_score_data_args> {
////            private delete_done_score_data_argsStandardScheme() {
////            }
////
////            /* synthetic */ delete_done_score_data_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, delete_done_score_data_args delete_done_score_data_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    delete_done_score_data_args.word_level_id = fVar.mo18513n();
////                                    delete_done_score_data_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!delete_done_score_data_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        delete_done_score_data_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, delete_done_score_data_args delete_done_score_data_args) {
////                delete_done_score_data_args.validate();
////                delete_done_score_data_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(delete_done_score_data_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(delete_done_score_data_args.word_level_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class delete_done_score_data_argsStandardSchemeFactory implements C2109b {
////            private delete_done_score_data_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ delete_done_score_data_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public delete_done_score_data_argsStandardScheme getScheme() {
////                return new delete_done_score_data_argsStandardScheme(null);
////            }
////        }
////
////        class delete_done_score_data_argsTupleScheme extends C2111d<delete_done_score_data_args> {
////            private delete_done_score_data_argsTupleScheme() {
////            }
////
////            /* synthetic */ delete_done_score_data_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, delete_done_score_data_args delete_done_score_data_args) {
////                ((C2106l) fVar).mo18493a(delete_done_score_data_args.word_level_id);
////            }
////
////            public void read(C2100f fVar, delete_done_score_data_args delete_done_score_data_args) {
////                delete_done_score_data_args.word_level_id = ((C2106l) fVar).mo18513n();
////                delete_done_score_data_args.setWord_level_idIsSet(true);
////            }
////        }
////
////        class delete_done_score_data_argsTupleSchemeFactory implements C2109b {
////            private delete_done_score_data_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ delete_done_score_data_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public delete_done_score_data_argsTupleScheme getScheme() {
////                return new delete_done_score_data_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new delete_done_score_data_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new delete_done_score_data_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(delete_done_score_data_args.class, metaDataMap);
////        }
////
////        public delete_done_score_data_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public delete_done_score_data_args(int i) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////        }
////
////        public delete_done_score_data_args(delete_done_score_data_args delete_done_score_data_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = delete_done_score_data_args.__isset_bitfield;
////            this.word_level_id = delete_done_score_data_args.word_level_id;
////        }
////
////        public delete_done_score_data_args deepCopy() {
////            return new delete_done_score_data_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public delete_done_score_data_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof delete_done_score_data_args)) {
////                return equals((delete_done_score_data_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(delete_done_score_data_args delete_done_score_data_args) {
////            if (delete_done_score_data_args != null && this.word_level_id == delete_done_score_data_args.word_level_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(delete_done_score_data_args delete_done_score_data_args) {
////            if (!getClass().equals(delete_done_score_data_args.getClass())) {
////                return getClass().getName().compareTo(delete_done_score_data_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(delete_done_score_data_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, delete_done_score_data_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("delete_done_score_data_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class delete_done_score_data_result implements Serializable, Cloneable, Comparable<delete_done_score_data_result>, C2116f<delete_done_score_data_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("delete_done_score_data_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class delete_done_score_data_resultStandardScheme extends C2110c<delete_done_score_data_result> {
////            private delete_done_score_data_resultStandardScheme() {
////            }
////
////            /* synthetic */ delete_done_score_data_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, delete_done_score_data_result delete_done_score_data_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    delete_done_score_data_result.success = fVar.mo18513n();
////                                    delete_done_score_data_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    delete_done_score_data_result.sysException = new BESystemException();
////                                    delete_done_score_data_result.sysException.read(fVar);
////                                    delete_done_score_data_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    delete_done_score_data_result.logicException = new BELogicException();
////                                    delete_done_score_data_result.logicException.read(fVar);
////                                    delete_done_score_data_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        delete_done_score_data_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, delete_done_score_data_result delete_done_score_data_result) {
////                delete_done_score_data_result.validate();
////                delete_done_score_data_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (delete_done_score_data_result.isSetSuccess()) {
////                    fVar.mo18496a(delete_done_score_data_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(delete_done_score_data_result.success);
////                }
////                if (delete_done_score_data_result.sysException != null) {
////                    fVar.mo18496a(delete_done_score_data_result.SYS_EXCEPTION_FIELD_DESC);
////                    delete_done_score_data_result.sysException.write(fVar);
////                }
////                if (delete_done_score_data_result.logicException != null) {
////                    fVar.mo18496a(delete_done_score_data_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    delete_done_score_data_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class delete_done_score_data_resultStandardSchemeFactory implements C2109b {
////            private delete_done_score_data_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ delete_done_score_data_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public delete_done_score_data_resultStandardScheme getScheme() {
////                return new delete_done_score_data_resultStandardScheme(null);
////            }
////        }
////
////        class delete_done_score_data_resultTupleScheme extends C2111d<delete_done_score_data_result> {
////            private delete_done_score_data_resultTupleScheme() {
////            }
////
////            /* synthetic */ delete_done_score_data_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, delete_done_score_data_result delete_done_score_data_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (delete_done_score_data_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (delete_done_score_data_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (delete_done_score_data_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (delete_done_score_data_result.isSetSuccess()) {
////                    lVar.mo18493a(delete_done_score_data_result.success);
////                }
////                if (delete_done_score_data_result.isSetSysException()) {
////                    delete_done_score_data_result.sysException.write(lVar);
////                }
////                if (delete_done_score_data_result.isSetLogicException()) {
////                    delete_done_score_data_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, delete_done_score_data_result delete_done_score_data_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    delete_done_score_data_result.success = lVar.mo18513n();
////                    delete_done_score_data_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    delete_done_score_data_result.sysException = new BESystemException();
////                    delete_done_score_data_result.sysException.read(lVar);
////                    delete_done_score_data_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    delete_done_score_data_result.logicException = new BELogicException();
////                    delete_done_score_data_result.logicException.read(lVar);
////                    delete_done_score_data_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class delete_done_score_data_resultTupleSchemeFactory implements C2109b {
////            private delete_done_score_data_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ delete_done_score_data_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public delete_done_score_data_resultTupleScheme getScheme() {
////                return new delete_done_score_data_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new delete_done_score_data_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new delete_done_score_data_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(delete_done_score_data_result.class, metaDataMap);
////        }
////
////        public delete_done_score_data_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public delete_done_score_data_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public delete_done_score_data_result(delete_done_score_data_result delete_done_score_data_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = delete_done_score_data_result.__isset_bitfield;
////            this.success = delete_done_score_data_result.success;
////            if (delete_done_score_data_result.isSetSysException()) {
////                this.sysException = new BESystemException(delete_done_score_data_result.sysException);
////            }
////            if (delete_done_score_data_result.isSetLogicException()) {
////                this.logicException = new BELogicException(delete_done_score_data_result.logicException);
////            }
////        }
////
////        public delete_done_score_data_result deepCopy() {
////            return new delete_done_score_data_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public delete_done_score_data_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public delete_done_score_data_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public delete_done_score_data_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof delete_done_score_data_result)) {
////                return equals((delete_done_score_data_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(delete_done_score_data_result delete_done_score_data_result) {
////            if (delete_done_score_data_result == null || this.success != delete_done_score_data_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = delete_done_score_data_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(delete_done_score_data_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = delete_done_score_data_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(delete_done_score_data_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(delete_done_score_data_result delete_done_score_data_result) {
////            if (!getClass().equals(delete_done_score_data_result.getClass())) {
////                return getClass().getName().compareTo(delete_done_score_data_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(delete_done_score_data_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, delete_done_score_data_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(delete_done_score_data_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) delete_done_score_data_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(delete_done_score_data_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) delete_done_score_data_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("delete_done_score_data_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class do_daka_args implements Serializable, Cloneable, Comparable<do_daka_args>, C2116f<do_daka_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b DAKA_DAYS_FIELD_DESC = new C2097b("daka_days", 8, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("do_daka_args");
////        /* access modifiers changed from: private */
////        public static final C2097b TODAY_NEW_LEARNED_COUNT_FIELD_DESC = new C2097b("today_new_learned_count", 8, 2);
////        private static final int __DAKA_DAYS_ISSET_ID = 0;
////        private static final int __TODAY_NEW_LEARNED_COUNT_ISSET_ID = 1;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int daka_days;
////        public int today_new_learned_count;
////
////        public enum _Fields implements C2124m {
////            DAKA_DAYS(1, "daka_days"),
////            TODAY_NEW_LEARNED_COUNT(2, "today_new_learned_count");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return DAKA_DAYS;
////                    case 2:
////                        return TODAY_NEW_LEARNED_COUNT;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class do_daka_argsStandardScheme extends C2110c<do_daka_args> {
////            private do_daka_argsStandardScheme() {
////            }
////
////            /* synthetic */ do_daka_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, do_daka_args do_daka_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_args.daka_days = fVar.mo18513n();
////                                    do_daka_args.setDaka_daysIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_args.today_new_learned_count = fVar.mo18513n();
////                                    do_daka_args.setToday_new_learned_countIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!do_daka_args.isSetDaka_days()) {
////                            throw new C2101g("Required field 'daka_days' was not found in serialized data! Struct: " + toString());
////                        } else if (!do_daka_args.isSetToday_new_learned_count()) {
////                            throw new C2101g("Required field 'today_new_learned_count' was not found in serialized data! Struct: " + toString());
////                        } else {
////                            do_daka_args.validate();
////                            return;
////                        }
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, do_daka_args do_daka_args) {
////                do_daka_args.validate();
////                do_daka_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(do_daka_args.DAKA_DAYS_FIELD_DESC);
////                fVar.mo18493a(do_daka_args.daka_days);
////                fVar.mo18496a(do_daka_args.TODAY_NEW_LEARNED_COUNT_FIELD_DESC);
////                fVar.mo18493a(do_daka_args.today_new_learned_count);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class do_daka_argsStandardSchemeFactory implements C2109b {
////            private do_daka_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ do_daka_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public do_daka_argsStandardScheme getScheme() {
////                return new do_daka_argsStandardScheme(null);
////            }
////        }
////
////        class do_daka_argsTupleScheme extends C2111d<do_daka_args> {
////            private do_daka_argsTupleScheme() {
////            }
////
////            /* synthetic */ do_daka_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, do_daka_args do_daka_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(do_daka_args.daka_days);
////                lVar.mo18493a(do_daka_args.today_new_learned_count);
////            }
////
////            public void read(C2100f fVar, do_daka_args do_daka_args) {
////                C2106l lVar = (C2106l) fVar;
////                do_daka_args.daka_days = lVar.mo18513n();
////                do_daka_args.setDaka_daysIsSet(true);
////                do_daka_args.today_new_learned_count = lVar.mo18513n();
////                do_daka_args.setToday_new_learned_countIsSet(true);
////            }
////        }
////
////        class do_daka_argsTupleSchemeFactory implements C2109b {
////            private do_daka_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ do_daka_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public do_daka_argsTupleScheme getScheme() {
////                return new do_daka_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new do_daka_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new do_daka_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.DAKA_DAYS, new C2091a("daka_days", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.TODAY_NEW_LEARNED_COUNT, new C2091a("today_new_learned_count", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(do_daka_args.class, metaDataMap);
////        }
////
////        public do_daka_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public do_daka_args(int i, int i2) {
////            this();
////            this.daka_days = i;
////            setDaka_daysIsSet(true);
////            this.today_new_learned_count = i2;
////            setToday_new_learned_countIsSet(true);
////        }
////
////        public do_daka_args(do_daka_args do_daka_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = do_daka_args.__isset_bitfield;
////            this.daka_days = do_daka_args.daka_days;
////            this.today_new_learned_count = do_daka_args.today_new_learned_count;
////        }
////
////        public do_daka_args deepCopy() {
////            return new do_daka_args(this);
////        }
////
////        public void clear() {
////            setDaka_daysIsSet(false);
////            this.daka_days = 0;
////            setToday_new_learned_countIsSet(false);
////            this.today_new_learned_count = 0;
////        }
////
////        public int getDaka_days() {
////            return this.daka_days;
////        }
////
////        public do_daka_args setDaka_days(int i) {
////            this.daka_days = i;
////            setDaka_daysIsSet(true);
////            return this;
////        }
////
////        public void unsetDaka_days() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetDaka_days() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setDaka_daysIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public int getToday_new_learned_count() {
////            return this.today_new_learned_count;
////        }
////
////        public do_daka_args setToday_new_learned_count(int i) {
////            this.today_new_learned_count = i;
////            setToday_new_learned_countIsSet(true);
////            return this;
////        }
////
////        public void unsetToday_new_learned_count() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -3);
////        }
////
////        public boolean isSetToday_new_learned_count() {
////            return C2090b.m5429a(this.__isset_bitfield, 1);
////        }
////
////        public void setToday_new_learned_countIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 1, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case DAKA_DAYS:
////                    if (obj == null) {
////                        unsetDaka_days();
////                        return;
////                    } else {
////                        setDaka_days(((Integer) obj).intValue());
////                        return;
////                    }
////                case TODAY_NEW_LEARNED_COUNT:
////                    if (obj == null) {
////                        unsetToday_new_learned_count();
////                        return;
////                    } else {
////                        setToday_new_learned_count(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case DAKA_DAYS:
////                    return Integer.valueOf(getDaka_days());
////                case TODAY_NEW_LEARNED_COUNT:
////                    return Integer.valueOf(getToday_new_learned_count());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case DAKA_DAYS:
////                    return isSetDaka_days();
////                case TODAY_NEW_LEARNED_COUNT:
////                    return isSetToday_new_learned_count();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof do_daka_args)) {
////                return equals((do_daka_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(do_daka_args do_daka_args) {
////            if (do_daka_args != null && this.daka_days == do_daka_args.daka_days && this.today_new_learned_count == do_daka_args.today_new_learned_count) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(do_daka_args do_daka_args) {
////            if (!getClass().equals(do_daka_args.getClass())) {
////                return getClass().getName().compareTo(do_daka_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetDaka_days()).compareTo(Boolean.valueOf(do_daka_args.isSetDaka_days()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetDaka_days()) {
////                int a = C2121h.m5522a(this.daka_days, do_daka_args.daka_days);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetToday_new_learned_count()).compareTo(Boolean.valueOf(do_daka_args.isSetToday_new_learned_count()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetToday_new_learned_count()) {
////                int a2 = C2121h.m5522a(this.today_new_learned_count, do_daka_args.today_new_learned_count);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("do_daka_args(");
////            sb.append("daka_days:");
////            sb.append(this.daka_days);
////            sb.append(", ");
////            sb.append("today_new_learned_count:");
////            sb.append(this.today_new_learned_count);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class do_daka_result implements Serializable, Cloneable, Comparable<do_daka_result>, C2116f<do_daka_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("do_daka_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBDakaInfo success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class do_daka_resultStandardScheme extends C2110c<do_daka_result> {
////            private do_daka_resultStandardScheme() {
////            }
////
////            /* synthetic */ do_daka_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, do_daka_result do_daka_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_result.success = new BBDakaInfo();
////                                    do_daka_result.success.read(fVar);
////                                    do_daka_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_result.sysException = new BESystemException();
////                                    do_daka_result.sysException.read(fVar);
////                                    do_daka_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_result.logicException = new BELogicException();
////                                    do_daka_result.logicException.read(fVar);
////                                    do_daka_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        do_daka_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, do_daka_result do_daka_result) {
////                do_daka_result.validate();
////                do_daka_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (do_daka_result.success != null) {
////                    fVar.mo18496a(do_daka_result.SUCCESS_FIELD_DESC);
////                    do_daka_result.success.write(fVar);
////                }
////                if (do_daka_result.sysException != null) {
////                    fVar.mo18496a(do_daka_result.SYS_EXCEPTION_FIELD_DESC);
////                    do_daka_result.sysException.write(fVar);
////                }
////                if (do_daka_result.logicException != null) {
////                    fVar.mo18496a(do_daka_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    do_daka_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class do_daka_resultStandardSchemeFactory implements C2109b {
////            private do_daka_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ do_daka_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public do_daka_resultStandardScheme getScheme() {
////                return new do_daka_resultStandardScheme(null);
////            }
////        }
////
////        class do_daka_resultTupleScheme extends C2111d<do_daka_result> {
////            private do_daka_resultTupleScheme() {
////            }
////
////            /* synthetic */ do_daka_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, do_daka_result do_daka_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (do_daka_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (do_daka_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (do_daka_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (do_daka_result.isSetSuccess()) {
////                    do_daka_result.success.write(lVar);
////                }
////                if (do_daka_result.isSetSysException()) {
////                    do_daka_result.sysException.write(lVar);
////                }
////                if (do_daka_result.isSetLogicException()) {
////                    do_daka_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, do_daka_result do_daka_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    do_daka_result.success = new BBDakaInfo();
////                    do_daka_result.success.read(lVar);
////                    do_daka_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    do_daka_result.sysException = new BESystemException();
////                    do_daka_result.sysException.read(lVar);
////                    do_daka_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    do_daka_result.logicException = new BELogicException();
////                    do_daka_result.logicException.read(lVar);
////                    do_daka_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class do_daka_resultTupleSchemeFactory implements C2109b {
////            private do_daka_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ do_daka_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public do_daka_resultTupleScheme getScheme() {
////                return new do_daka_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new do_daka_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new do_daka_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBDakaInfo.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(do_daka_result.class, metaDataMap);
////        }
////
////        public do_daka_result() {
////        }
////
////        public do_daka_result(BBDakaInfo bBDakaInfo, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBDakaInfo;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public do_daka_result(do_daka_result do_daka_result) {
////            if (do_daka_result.isSetSuccess()) {
////                this.success = new BBDakaInfo(do_daka_result.success);
////            }
////            if (do_daka_result.isSetSysException()) {
////                this.sysException = new BESystemException(do_daka_result.sysException);
////            }
////            if (do_daka_result.isSetLogicException()) {
////                this.logicException = new BELogicException(do_daka_result.logicException);
////            }
////        }
////
////        public do_daka_result deepCopy() {
////            return new do_daka_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBDakaInfo getSuccess() {
////            return this.success;
////        }
////
////        public do_daka_result setSuccess(BBDakaInfo bBDakaInfo) {
////            this.success = bBDakaInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public do_daka_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public do_daka_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBDakaInfo) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof do_daka_result)) {
////                return equals((do_daka_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(do_daka_result do_daka_result) {
////            if (do_daka_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = do_daka_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(do_daka_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = do_daka_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(do_daka_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = do_daka_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(do_daka_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(do_daka_result do_daka_result) {
////            if (!getClass().equals(do_daka_result.getClass())) {
////                return getClass().getName().compareTo(do_daka_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(do_daka_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) do_daka_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(do_daka_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) do_daka_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(do_daka_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) do_daka_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("do_daka_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class do_daka_v2_args implements Serializable, Cloneable, Comparable<do_daka_v2_args>, C2116f<do_daka_v2_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b ARR_FINISHED_PLAN_DATE_FIELD_DESC = new C2097b("arr_finished_plan_date", 15, 2);
////        /* access modifiers changed from: private */
////        public static final C2097b DAKA_DAYS_FIELD_DESC = new C2097b("daka_days", 8, 3);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("do_daka_v2_args");
////        /* access modifiers changed from: private */
////        public static final C2097b TODAY_NEW_LEARNED_COUNT_FIELD_DESC = new C2097b("today_new_learned_count", 8, 4);
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __DAKA_DAYS_ISSET_ID = 1;
////        private static final int __TODAY_NEW_LEARNED_COUNT_ISSET_ID = 2;
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public List<Integer> arr_finished_plan_date;
////        public int daka_days;
////        public int today_new_learned_count;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id"),
////            ARR_FINISHED_PLAN_DATE(2, "arr_finished_plan_date"),
////            DAKA_DAYS(3, "daka_days"),
////            TODAY_NEW_LEARNED_COUNT(4, "today_new_learned_count");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    case 2:
////                        return ARR_FINISHED_PLAN_DATE;
////                    case 3:
////                        return DAKA_DAYS;
////                    case 4:
////                        return TODAY_NEW_LEARNED_COUNT;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class do_daka_v2_argsStandardScheme extends C2110c<do_daka_v2_args> {
////            private do_daka_v2_argsStandardScheme() {
////            }
////
////            /* synthetic */ do_daka_v2_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, do_daka_v2_args do_daka_v2_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_v2_args.word_level_id = fVar.mo18513n();
////                                    do_daka_v2_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    do_daka_v2_args.arr_finished_plan_date = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        do_daka_v2_args.arr_finished_plan_date.add(Integer.valueOf(fVar.mo18513n()));
////                                    }
////                                    do_daka_v2_args.setArr_finished_plan_dateIsSet(true);
////                                    break;
////                                }
////                            case 3:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_v2_args.daka_days = fVar.mo18513n();
////                                    do_daka_v2_args.setDaka_daysIsSet(true);
////                                    break;
////                                }
////                            case 4:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_v2_args.today_new_learned_count = fVar.mo18513n();
////                                    do_daka_v2_args.setToday_new_learned_countIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!do_daka_v2_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        } else if (!do_daka_v2_args.isSetDaka_days()) {
////                            throw new C2101g("Required field 'daka_days' was not found in serialized data! Struct: " + toString());
////                        } else if (!do_daka_v2_args.isSetToday_new_learned_count()) {
////                            throw new C2101g("Required field 'today_new_learned_count' was not found in serialized data! Struct: " + toString());
////                        } else {
////                            do_daka_v2_args.validate();
////                            return;
////                        }
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, do_daka_v2_args do_daka_v2_args) {
////                do_daka_v2_args.validate();
////                do_daka_v2_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(do_daka_v2_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(do_daka_v2_args.word_level_id);
////                if (do_daka_v2_args.arr_finished_plan_date != null) {
////                    fVar.mo18496a(do_daka_v2_args.ARR_FINISHED_PLAN_DATE_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(8, do_daka_v2_args.arr_finished_plan_date.size()));
////                    for (Integer intValue : do_daka_v2_args.arr_finished_plan_date) {
////                        fVar.mo18493a(intValue.intValue());
////                    }
////                }
////                fVar.mo18496a(do_daka_v2_args.DAKA_DAYS_FIELD_DESC);
////                fVar.mo18493a(do_daka_v2_args.daka_days);
////                fVar.mo18496a(do_daka_v2_args.TODAY_NEW_LEARNED_COUNT_FIELD_DESC);
////                fVar.mo18493a(do_daka_v2_args.today_new_learned_count);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class do_daka_v2_argsStandardSchemeFactory implements C2109b {
////            private do_daka_v2_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ do_daka_v2_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public do_daka_v2_argsStandardScheme getScheme() {
////                return new do_daka_v2_argsStandardScheme(null);
////            }
////        }
////
////        class do_daka_v2_argsTupleScheme extends C2111d<do_daka_v2_args> {
////            private do_daka_v2_argsTupleScheme() {
////            }
////
////            /* synthetic */ do_daka_v2_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, do_daka_v2_args do_daka_v2_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(do_daka_v2_args.word_level_id);
////                lVar.mo18493a(do_daka_v2_args.arr_finished_plan_date.size());
////                for (Integer intValue : do_daka_v2_args.arr_finished_plan_date) {
////                    lVar.mo18493a(intValue.intValue());
////                }
////                lVar.mo18493a(do_daka_v2_args.daka_days);
////                lVar.mo18493a(do_daka_v2_args.today_new_learned_count);
////            }
////
////            public void read(C2100f fVar, do_daka_v2_args do_daka_v2_args) {
////                C2106l lVar = (C2106l) fVar;
////                do_daka_v2_args.word_level_id = lVar.mo18513n();
////                do_daka_v2_args.setWord_level_idIsSet(true);
////                C2098c cVar = new C2098c(8, lVar.mo18513n());
////                do_daka_v2_args.arr_finished_plan_date = new ArrayList(cVar.f5838b);
////                for (int i = 0; i < cVar.f5838b; i++) {
////                    do_daka_v2_args.arr_finished_plan_date.add(Integer.valueOf(lVar.mo18513n()));
////                }
////                do_daka_v2_args.setArr_finished_plan_dateIsSet(true);
////                do_daka_v2_args.daka_days = lVar.mo18513n();
////                do_daka_v2_args.setDaka_daysIsSet(true);
////                do_daka_v2_args.today_new_learned_count = lVar.mo18513n();
////                do_daka_v2_args.setToday_new_learned_countIsSet(true);
////            }
////        }
////
////        class do_daka_v2_argsTupleSchemeFactory implements C2109b {
////            private do_daka_v2_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ do_daka_v2_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public do_daka_v2_argsTupleScheme getScheme() {
////                return new do_daka_v2_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new do_daka_v2_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new do_daka_v2_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.ARR_FINISHED_PLAN_DATE, new C2091a("arr_finished_plan_date", 1, new C2093c(new C2092b(8, 0))));
////            enumMap.put(_Fields.DAKA_DAYS, new C2091a("daka_days", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.TODAY_NEW_LEARNED_COUNT, new C2091a("today_new_learned_count", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(do_daka_v2_args.class, metaDataMap);
////        }
////
////        public do_daka_v2_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public do_daka_v2_args(int i, List<Integer> list, int i2, int i3) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            this.arr_finished_plan_date = list;
////            this.daka_days = i2;
////            setDaka_daysIsSet(true);
////            this.today_new_learned_count = i3;
////            setToday_new_learned_countIsSet(true);
////        }
////
////        public do_daka_v2_args(do_daka_v2_args do_daka_v2_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = do_daka_v2_args.__isset_bitfield;
////            this.word_level_id = do_daka_v2_args.word_level_id;
////            if (do_daka_v2_args.isSetArr_finished_plan_date()) {
////                this.arr_finished_plan_date = new ArrayList(do_daka_v2_args.arr_finished_plan_date);
////            }
////            this.daka_days = do_daka_v2_args.daka_days;
////            this.today_new_learned_count = do_daka_v2_args.today_new_learned_count;
////        }
////
////        public do_daka_v2_args deepCopy() {
////            return new do_daka_v2_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////            this.arr_finished_plan_date = null;
////            setDaka_daysIsSet(false);
////            this.daka_days = 0;
////            setToday_new_learned_countIsSet(false);
////            this.today_new_learned_count = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public do_daka_v2_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public int getArr_finished_plan_dateSize() {
////            if (this.arr_finished_plan_date == null) {
////                return 0;
////            }
////            return this.arr_finished_plan_date.size();
////        }
////
////        public Iterator<Integer> getArr_finished_plan_dateIterator() {
////            if (this.arr_finished_plan_date == null) {
////                return null;
////            }
////            return this.arr_finished_plan_date.iterator();
////        }
////
////        public void addToArr_finished_plan_date(int i) {
////            if (this.arr_finished_plan_date == null) {
////                this.arr_finished_plan_date = new ArrayList();
////            }
////            this.arr_finished_plan_date.add(Integer.valueOf(i));
////        }
////
////        public List<Integer> getArr_finished_plan_date() {
////            return this.arr_finished_plan_date;
////        }
////
////        public do_daka_v2_args setArr_finished_plan_date(List<Integer> list) {
////            this.arr_finished_plan_date = list;
////            return this;
////        }
////
////        public void unsetArr_finished_plan_date() {
////            this.arr_finished_plan_date = null;
////        }
////
////        public boolean isSetArr_finished_plan_date() {
////            return this.arr_finished_plan_date != null;
////        }
////
////        public void setArr_finished_plan_dateIsSet(boolean z) {
////            if (!z) {
////                this.arr_finished_plan_date = null;
////            }
////        }
////
////        public int getDaka_days() {
////            return this.daka_days;
////        }
////
////        public do_daka_v2_args setDaka_days(int i) {
////            this.daka_days = i;
////            setDaka_daysIsSet(true);
////            return this;
////        }
////
////        public void unsetDaka_days() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -3);
////        }
////
////        public boolean isSetDaka_days() {
////            return C2090b.m5429a(this.__isset_bitfield, 1);
////        }
////
////        public void setDaka_daysIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 1, z);
////        }
////
////        public int getToday_new_learned_count() {
////            return this.today_new_learned_count;
////        }
////
////        public do_daka_v2_args setToday_new_learned_count(int i) {
////            this.today_new_learned_count = i;
////            setToday_new_learned_countIsSet(true);
////            return this;
////        }
////
////        public void unsetToday_new_learned_count() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -5);
////        }
////
////        public boolean isSetToday_new_learned_count() {
////            return C2090b.m5429a(this.__isset_bitfield, 2);
////        }
////
////        public void setToday_new_learned_countIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 2, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case ARR_FINISHED_PLAN_DATE:
////                    if (obj == null) {
////                        unsetArr_finished_plan_date();
////                        return;
////                    } else {
////                        setArr_finished_plan_date((List) obj);
////                        return;
////                    }
////                case DAKA_DAYS:
////                    if (obj == null) {
////                        unsetDaka_days();
////                        return;
////                    } else {
////                        setDaka_days(((Integer) obj).intValue());
////                        return;
////                    }
////                case TODAY_NEW_LEARNED_COUNT:
////                    if (obj == null) {
////                        unsetToday_new_learned_count();
////                        return;
////                    } else {
////                        setToday_new_learned_count(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                case ARR_FINISHED_PLAN_DATE:
////                    return getArr_finished_plan_date();
////                case DAKA_DAYS:
////                    return Integer.valueOf(getDaka_days());
////                case TODAY_NEW_LEARNED_COUNT:
////                    return Integer.valueOf(getToday_new_learned_count());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                case ARR_FINISHED_PLAN_DATE:
////                    return isSetArr_finished_plan_date();
////                case DAKA_DAYS:
////                    return isSetDaka_days();
////                case TODAY_NEW_LEARNED_COUNT:
////                    return isSetToday_new_learned_count();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof do_daka_v2_args)) {
////                return equals((do_daka_v2_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(do_daka_v2_args do_daka_v2_args) {
////            if (do_daka_v2_args == null || this.word_level_id != do_daka_v2_args.word_level_id) {
////                return false;
////            }
////            boolean isSetArr_finished_plan_date = isSetArr_finished_plan_date();
////            boolean isSetArr_finished_plan_date2 = do_daka_v2_args.isSetArr_finished_plan_date();
////            if (((!isSetArr_finished_plan_date && !isSetArr_finished_plan_date2) || (isSetArr_finished_plan_date && isSetArr_finished_plan_date2 && this.arr_finished_plan_date.equals(do_daka_v2_args.arr_finished_plan_date))) && this.daka_days == do_daka_v2_args.daka_days && this.today_new_learned_count == do_daka_v2_args.today_new_learned_count) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(do_daka_v2_args do_daka_v2_args) {
////            if (!getClass().equals(do_daka_v2_args.getClass())) {
////                return getClass().getName().compareTo(do_daka_v2_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(do_daka_v2_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, do_daka_v2_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetArr_finished_plan_date()).compareTo(Boolean.valueOf(do_daka_v2_args.isSetArr_finished_plan_date()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetArr_finished_plan_date()) {
////                int a2 = C2121h.m5526a((List) this.arr_finished_plan_date, (List) do_daka_v2_args.arr_finished_plan_date);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetDaka_days()).compareTo(Boolean.valueOf(do_daka_v2_args.isSetDaka_days()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetDaka_days()) {
////                int a3 = C2121h.m5522a(this.daka_days, do_daka_v2_args.daka_days);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            int compareTo4 = Boolean.valueOf(isSetToday_new_learned_count()).compareTo(Boolean.valueOf(do_daka_v2_args.isSetToday_new_learned_count()));
////            if (compareTo4 != 0) {
////                return compareTo4;
////            }
////            if (isSetToday_new_learned_count()) {
////                int a4 = C2121h.m5522a(this.today_new_learned_count, do_daka_v2_args.today_new_learned_count);
////                if (a4 != 0) {
////                    return a4;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("do_daka_v2_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(", ");
////            sb.append("arr_finished_plan_date:");
////            if (this.arr_finished_plan_date == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.arr_finished_plan_date);
////            }
////            sb.append(", ");
////            sb.append("daka_days:");
////            sb.append(this.daka_days);
////            sb.append(", ");
////            sb.append("today_new_learned_count:");
////            sb.append(this.today_new_learned_count);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.arr_finished_plan_date == null) {
////                throw new C2101g("Required field 'arr_finished_plan_date' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class do_daka_v2_result implements Serializable, Cloneable, Comparable<do_daka_v2_result>, C2116f<do_daka_v2_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("do_daka_v2_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBDakaInfo success;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class do_daka_v2_resultStandardScheme extends C2110c<do_daka_v2_result> {
////            private do_daka_v2_resultStandardScheme() {
////            }
////
////            /* synthetic */ do_daka_v2_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, do_daka_v2_result do_daka_v2_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    do_daka_v2_result.success = new BBDakaInfo();
////                                    do_daka_v2_result.success.read(fVar);
////                                    do_daka_v2_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        do_daka_v2_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, do_daka_v2_result do_daka_v2_result) {
////                do_daka_v2_result.validate();
////                do_daka_v2_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (do_daka_v2_result.success != null) {
////                    fVar.mo18496a(do_daka_v2_result.SUCCESS_FIELD_DESC);
////                    do_daka_v2_result.success.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class do_daka_v2_resultStandardSchemeFactory implements C2109b {
////            private do_daka_v2_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ do_daka_v2_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public do_daka_v2_resultStandardScheme getScheme() {
////                return new do_daka_v2_resultStandardScheme(null);
////            }
////        }
////
////        class do_daka_v2_resultTupleScheme extends C2111d<do_daka_v2_result> {
////            private do_daka_v2_resultTupleScheme() {
////            }
////
////            /* synthetic */ do_daka_v2_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, do_daka_v2_result do_daka_v2_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (do_daka_v2_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                lVar.mo18527a(bitSet, 1);
////                if (do_daka_v2_result.isSetSuccess()) {
////                    do_daka_v2_result.success.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, do_daka_v2_result do_daka_v2_result) {
////                C2106l lVar = (C2106l) fVar;
////                if (lVar.mo18528b(1).get(0)) {
////                    do_daka_v2_result.success = new BBDakaInfo();
////                    do_daka_v2_result.success.read(lVar);
////                    do_daka_v2_result.setSuccessIsSet(true);
////                }
////            }
////        }
////
////        class do_daka_v2_resultTupleSchemeFactory implements C2109b {
////            private do_daka_v2_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ do_daka_v2_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public do_daka_v2_resultTupleScheme getScheme() {
////                return new do_daka_v2_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new do_daka_v2_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new do_daka_v2_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBDakaInfo.class)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(do_daka_v2_result.class, metaDataMap);
////        }
////
////        public do_daka_v2_result() {
////        }
////
////        public do_daka_v2_result(BBDakaInfo bBDakaInfo) {
////            this();
////            this.success = bBDakaInfo;
////        }
////
////        public do_daka_v2_result(do_daka_v2_result do_daka_v2_result) {
////            if (do_daka_v2_result.isSetSuccess()) {
////                this.success = new BBDakaInfo(do_daka_v2_result.success);
////            }
////        }
////
////        public do_daka_v2_result deepCopy() {
////            return new do_daka_v2_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////        }
////
////        public BBDakaInfo getSuccess() {
////            return this.success;
////        }
////
////        public do_daka_v2_result setSuccess(BBDakaInfo bBDakaInfo) {
////            this.success = bBDakaInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBDakaInfo) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof do_daka_v2_result)) {
////                return equals((do_daka_v2_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(do_daka_v2_result do_daka_v2_result) {
////            if (do_daka_v2_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = do_daka_v2_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(do_daka_v2_result.success))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(do_daka_v2_result do_daka_v2_result) {
////            if (!getClass().equals(do_daka_v2_result.getClass())) {
////                return getClass().getName().compareTo(do_daka_v2_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(do_daka_v2_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) do_daka_v2_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("do_daka_v2_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class done_word_stat_args implements Serializable, Cloneable, Comparable<done_word_stat_args>, C2116f<done_word_stat_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b BOOK_ID_FIELD_DESC = new C2097b("book_id", 8, 1);
////        /* access modifiers changed from: private */
////        public static final C2097b STAT_LOGS_FIELD_DESC = new C2097b("stat_logs", 15, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("done_word_stat_args");
////        private static final int __BOOK_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int book_id;
////        public List<BBDoneWordStatLog> stat_logs;
////
////        public enum _Fields implements C2124m {
////            BOOK_ID(1, "book_id"),
////            STAT_LOGS(2, "stat_logs");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return BOOK_ID;
////                    case 2:
////                        return STAT_LOGS;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class done_word_stat_argsStandardScheme extends C2110c<done_word_stat_args> {
////            private done_word_stat_argsStandardScheme() {
////            }
////
////            /* synthetic */ done_word_stat_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, done_word_stat_args done_word_stat_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    done_word_stat_args.book_id = fVar.mo18513n();
////                                    done_word_stat_args.setBook_idIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    done_word_stat_args.stat_logs = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBDoneWordStatLog bBDoneWordStatLog = new BBDoneWordStatLog();
////                                        bBDoneWordStatLog.read(fVar);
////                                        done_word_stat_args.stat_logs.add(bBDoneWordStatLog);
////                                    }
////                                    done_word_stat_args.setStat_logsIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!done_word_stat_args.isSetBook_id()) {
////                            throw new C2101g("Required field 'book_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        done_word_stat_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, done_word_stat_args done_word_stat_args) {
////                done_word_stat_args.validate();
////                done_word_stat_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(done_word_stat_args.BOOK_ID_FIELD_DESC);
////                fVar.mo18493a(done_word_stat_args.book_id);
////                if (done_word_stat_args.stat_logs != null) {
////                    fVar.mo18496a(done_word_stat_args.STAT_LOGS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, done_word_stat_args.stat_logs.size()));
////                    for (BBDoneWordStatLog write : done_word_stat_args.stat_logs) {
////                        write.write(fVar);
////                    }
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class done_word_stat_argsStandardSchemeFactory implements C2109b {
////            private done_word_stat_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ done_word_stat_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public done_word_stat_argsStandardScheme getScheme() {
////                return new done_word_stat_argsStandardScheme(null);
////            }
////        }
////
////        class done_word_stat_argsTupleScheme extends C2111d<done_word_stat_args> {
////            private done_word_stat_argsTupleScheme() {
////            }
////
////            /* synthetic */ done_word_stat_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, done_word_stat_args done_word_stat_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(done_word_stat_args.book_id);
////                lVar.mo18493a(done_word_stat_args.stat_logs.size());
////                for (BBDoneWordStatLog write : done_word_stat_args.stat_logs) {
////                    write.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, done_word_stat_args done_word_stat_args) {
////                C2106l lVar = (C2106l) fVar;
////                done_word_stat_args.book_id = lVar.mo18513n();
////                done_word_stat_args.setBook_idIsSet(true);
////                C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                done_word_stat_args.stat_logs = new ArrayList(cVar.f5838b);
////                for (int i = 0; i < cVar.f5838b; i++) {
////                    BBDoneWordStatLog bBDoneWordStatLog = new BBDoneWordStatLog();
////                    bBDoneWordStatLog.read(lVar);
////                    done_word_stat_args.stat_logs.add(bBDoneWordStatLog);
////                }
////                done_word_stat_args.setStat_logsIsSet(true);
////            }
////        }
////
////        class done_word_stat_argsTupleSchemeFactory implements C2109b {
////            private done_word_stat_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ done_word_stat_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public done_word_stat_argsTupleScheme getScheme() {
////                return new done_word_stat_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new done_word_stat_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new done_word_stat_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.BOOK_ID, new C2091a("book_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.STAT_LOGS, new C2091a("stat_logs", 1, new C2093c(new C2095e(BBDoneWordStatLog.class))));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(done_word_stat_args.class, metaDataMap);
////        }
////
////        public done_word_stat_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public done_word_stat_args(int i, List<BBDoneWordStatLog> list) {
////            this();
////            this.book_id = i;
////            setBook_idIsSet(true);
////            this.stat_logs = list;
////        }
////
////        public done_word_stat_args(done_word_stat_args done_word_stat_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = done_word_stat_args.__isset_bitfield;
////            this.book_id = done_word_stat_args.book_id;
////            if (done_word_stat_args.isSetStat_logs()) {
////                ArrayList arrayList = new ArrayList(done_word_stat_args.stat_logs.size());
////                for (BBDoneWordStatLog bBDoneWordStatLog : done_word_stat_args.stat_logs) {
////                    arrayList.add(new BBDoneWordStatLog(bBDoneWordStatLog));
////                }
////                this.stat_logs = arrayList;
////            }
////        }
////
////        public done_word_stat_args deepCopy() {
////            return new done_word_stat_args(this);
////        }
////
////        public void clear() {
////            setBook_idIsSet(false);
////            this.book_id = 0;
////            this.stat_logs = null;
////        }
////
////        public int getBook_id() {
////            return this.book_id;
////        }
////
////        public done_word_stat_args setBook_id(int i) {
////            this.book_id = i;
////            setBook_idIsSet(true);
////            return this;
////        }
////
////        public void unsetBook_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetBook_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setBook_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public int getStat_logsSize() {
////            if (this.stat_logs == null) {
////                return 0;
////            }
////            return this.stat_logs.size();
////        }
////
////        public Iterator<BBDoneWordStatLog> getStat_logsIterator() {
////            if (this.stat_logs == null) {
////                return null;
////            }
////            return this.stat_logs.iterator();
////        }
////
////        public void addToStat_logs(BBDoneWordStatLog bBDoneWordStatLog) {
////            if (this.stat_logs == null) {
////                this.stat_logs = new ArrayList();
////            }
////            this.stat_logs.add(bBDoneWordStatLog);
////        }
////
////        public List<BBDoneWordStatLog> getStat_logs() {
////            return this.stat_logs;
////        }
////
////        public done_word_stat_args setStat_logs(List<BBDoneWordStatLog> list) {
////            this.stat_logs = list;
////            return this;
////        }
////
////        public void unsetStat_logs() {
////            this.stat_logs = null;
////        }
////
////        public boolean isSetStat_logs() {
////            return this.stat_logs != null;
////        }
////
////        public void setStat_logsIsSet(boolean z) {
////            if (!z) {
////                this.stat_logs = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case BOOK_ID:
////                    if (obj == null) {
////                        unsetBook_id();
////                        return;
////                    } else {
////                        setBook_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case STAT_LOGS:
////                    if (obj == null) {
////                        unsetStat_logs();
////                        return;
////                    } else {
////                        setStat_logs((List) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case BOOK_ID:
////                    return Integer.valueOf(getBook_id());
////                case STAT_LOGS:
////                    return getStat_logs();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case BOOK_ID:
////                    return isSetBook_id();
////                case STAT_LOGS:
////                    return isSetStat_logs();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof done_word_stat_args)) {
////                return equals((done_word_stat_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(done_word_stat_args done_word_stat_args) {
////            if (done_word_stat_args == null || this.book_id != done_word_stat_args.book_id) {
////                return false;
////            }
////            boolean isSetStat_logs = isSetStat_logs();
////            boolean isSetStat_logs2 = done_word_stat_args.isSetStat_logs();
////            if ((isSetStat_logs || isSetStat_logs2) && (!isSetStat_logs || !isSetStat_logs2 || !this.stat_logs.equals(done_word_stat_args.stat_logs))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(done_word_stat_args done_word_stat_args) {
////            if (!getClass().equals(done_word_stat_args.getClass())) {
////                return getClass().getName().compareTo(done_word_stat_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetBook_id()).compareTo(Boolean.valueOf(done_word_stat_args.isSetBook_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetBook_id()) {
////                int a = C2121h.m5522a(this.book_id, done_word_stat_args.book_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetStat_logs()).compareTo(Boolean.valueOf(done_word_stat_args.isSetStat_logs()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetStat_logs()) {
////                int a2 = C2121h.m5526a((List) this.stat_logs, (List) done_word_stat_args.stat_logs);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("done_word_stat_args(");
////            sb.append("book_id:");
////            sb.append(this.book_id);
////            sb.append(", ");
////            sb.append("stat_logs:");
////            if (this.stat_logs == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.stat_logs);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.stat_logs == null) {
////                throw new C2101g("Required field 'stat_logs' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class done_word_stat_result implements Serializable, Cloneable, Comparable<done_word_stat_result>, C2116f<done_word_stat_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("done_word_stat_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class done_word_stat_resultStandardScheme extends C2110c<done_word_stat_result> {
////            private done_word_stat_resultStandardScheme() {
////            }
////
////            /* synthetic */ done_word_stat_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, done_word_stat_result done_word_stat_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    done_word_stat_result.success = fVar.mo18513n();
////                                    done_word_stat_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    done_word_stat_result.sysException = new BESystemException();
////                                    done_word_stat_result.sysException.read(fVar);
////                                    done_word_stat_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    done_word_stat_result.logicException = new BELogicException();
////                                    done_word_stat_result.logicException.read(fVar);
////                                    done_word_stat_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        done_word_stat_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, done_word_stat_result done_word_stat_result) {
////                done_word_stat_result.validate();
////                done_word_stat_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (done_word_stat_result.isSetSuccess()) {
////                    fVar.mo18496a(done_word_stat_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(done_word_stat_result.success);
////                }
////                if (done_word_stat_result.sysException != null) {
////                    fVar.mo18496a(done_word_stat_result.SYS_EXCEPTION_FIELD_DESC);
////                    done_word_stat_result.sysException.write(fVar);
////                }
////                if (done_word_stat_result.logicException != null) {
////                    fVar.mo18496a(done_word_stat_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    done_word_stat_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class done_word_stat_resultStandardSchemeFactory implements C2109b {
////            private done_word_stat_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ done_word_stat_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public done_word_stat_resultStandardScheme getScheme() {
////                return new done_word_stat_resultStandardScheme(null);
////            }
////        }
////
////        class done_word_stat_resultTupleScheme extends C2111d<done_word_stat_result> {
////            private done_word_stat_resultTupleScheme() {
////            }
////
////            /* synthetic */ done_word_stat_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, done_word_stat_result done_word_stat_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (done_word_stat_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (done_word_stat_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (done_word_stat_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (done_word_stat_result.isSetSuccess()) {
////                    lVar.mo18493a(done_word_stat_result.success);
////                }
////                if (done_word_stat_result.isSetSysException()) {
////                    done_word_stat_result.sysException.write(lVar);
////                }
////                if (done_word_stat_result.isSetLogicException()) {
////                    done_word_stat_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, done_word_stat_result done_word_stat_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    done_word_stat_result.success = lVar.mo18513n();
////                    done_word_stat_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    done_word_stat_result.sysException = new BESystemException();
////                    done_word_stat_result.sysException.read(lVar);
////                    done_word_stat_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    done_word_stat_result.logicException = new BELogicException();
////                    done_word_stat_result.logicException.read(lVar);
////                    done_word_stat_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class done_word_stat_resultTupleSchemeFactory implements C2109b {
////            private done_word_stat_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ done_word_stat_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public done_word_stat_resultTupleScheme getScheme() {
////                return new done_word_stat_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new done_word_stat_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new done_word_stat_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(done_word_stat_result.class, metaDataMap);
////        }
////
////        public done_word_stat_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public done_word_stat_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public done_word_stat_result(done_word_stat_result done_word_stat_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = done_word_stat_result.__isset_bitfield;
////            this.success = done_word_stat_result.success;
////            if (done_word_stat_result.isSetSysException()) {
////                this.sysException = new BESystemException(done_word_stat_result.sysException);
////            }
////            if (done_word_stat_result.isSetLogicException()) {
////                this.logicException = new BELogicException(done_word_stat_result.logicException);
////            }
////        }
////
////        public done_word_stat_result deepCopy() {
////            return new done_word_stat_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public done_word_stat_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public done_word_stat_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public done_word_stat_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof done_word_stat_result)) {
////                return equals((done_word_stat_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(done_word_stat_result done_word_stat_result) {
////            if (done_word_stat_result == null || this.success != done_word_stat_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = done_word_stat_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(done_word_stat_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = done_word_stat_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(done_word_stat_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(done_word_stat_result done_word_stat_result) {
////            if (!getClass().equals(done_word_stat_result.getClass())) {
////                return getClass().getName().compareTo(done_word_stat_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(done_word_stat_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, done_word_stat_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(done_word_stat_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) done_word_stat_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(done_word_stat_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) done_word_stat_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("done_word_stat_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class finish_plan_notify_args implements Serializable, Cloneable, Comparable<finish_plan_notify_args>, C2116f<finish_plan_notify_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b FINISH_PLAN_INFO_FIELD_DESC = new C2097b("finish_plan_info", JceStruct.ZERO_TAG, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("finish_plan_notify_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBUserFinishPlanInfo finish_plan_info;
////
////        public enum _Fields implements C2124m {
////            FINISH_PLAN_INFO(1, "finish_plan_info");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return FINISH_PLAN_INFO;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class finish_plan_notify_argsStandardScheme extends C2110c<finish_plan_notify_args> {
////            private finish_plan_notify_argsStandardScheme() {
////            }
////
////            /* synthetic */ finish_plan_notify_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, finish_plan_notify_args finish_plan_notify_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    finish_plan_notify_args.finish_plan_info = new BBUserFinishPlanInfo();
////                                    finish_plan_notify_args.finish_plan_info.read(fVar);
////                                    finish_plan_notify_args.setFinish_plan_infoIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        finish_plan_notify_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, finish_plan_notify_args finish_plan_notify_args) {
////                finish_plan_notify_args.validate();
////                finish_plan_notify_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (finish_plan_notify_args.finish_plan_info != null) {
////                    fVar.mo18496a(finish_plan_notify_args.FINISH_PLAN_INFO_FIELD_DESC);
////                    finish_plan_notify_args.finish_plan_info.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class finish_plan_notify_argsStandardSchemeFactory implements C2109b {
////            private finish_plan_notify_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ finish_plan_notify_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public finish_plan_notify_argsStandardScheme getScheme() {
////                return new finish_plan_notify_argsStandardScheme(null);
////            }
////        }
////
////        class finish_plan_notify_argsTupleScheme extends C2111d<finish_plan_notify_args> {
////            private finish_plan_notify_argsTupleScheme() {
////            }
////
////            /* synthetic */ finish_plan_notify_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, finish_plan_notify_args finish_plan_notify_args) {
////                finish_plan_notify_args.finish_plan_info.write((C2106l) fVar);
////            }
////
////            public void read(C2100f fVar, finish_plan_notify_args finish_plan_notify_args) {
////                C2106l lVar = (C2106l) fVar;
////                finish_plan_notify_args.finish_plan_info = new BBUserFinishPlanInfo();
////                finish_plan_notify_args.finish_plan_info.read(lVar);
////                finish_plan_notify_args.setFinish_plan_infoIsSet(true);
////            }
////        }
////
////        class finish_plan_notify_argsTupleSchemeFactory implements C2109b {
////            private finish_plan_notify_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ finish_plan_notify_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public finish_plan_notify_argsTupleScheme getScheme() {
////                return new finish_plan_notify_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new finish_plan_notify_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new finish_plan_notify_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.FINISH_PLAN_INFO, new C2091a("finish_plan_info", 1, new C2095e(BBUserFinishPlanInfo.class)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(finish_plan_notify_args.class, metaDataMap);
////        }
////
////        public finish_plan_notify_args() {
////        }
////
////        public finish_plan_notify_args(BBUserFinishPlanInfo bBUserFinishPlanInfo) {
////            this();
////            this.finish_plan_info = bBUserFinishPlanInfo;
////        }
////
////        public finish_plan_notify_args(finish_plan_notify_args finish_plan_notify_args) {
////            if (finish_plan_notify_args.isSetFinish_plan_info()) {
////                this.finish_plan_info = new BBUserFinishPlanInfo(finish_plan_notify_args.finish_plan_info);
////            }
////        }
////
////        public finish_plan_notify_args deepCopy() {
////            return new finish_plan_notify_args(this);
////        }
////
////        public void clear() {
////            this.finish_plan_info = null;
////        }
////
////        public BBUserFinishPlanInfo getFinish_plan_info() {
////            return this.finish_plan_info;
////        }
////
////        public finish_plan_notify_args setFinish_plan_info(BBUserFinishPlanInfo bBUserFinishPlanInfo) {
////            this.finish_plan_info = bBUserFinishPlanInfo;
////            return this;
////        }
////
////        public void unsetFinish_plan_info() {
////            this.finish_plan_info = null;
////        }
////
////        public boolean isSetFinish_plan_info() {
////            return this.finish_plan_info != null;
////        }
////
////        public void setFinish_plan_infoIsSet(boolean z) {
////            if (!z) {
////                this.finish_plan_info = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case FINISH_PLAN_INFO:
////                    if (obj == null) {
////                        unsetFinish_plan_info();
////                        return;
////                    } else {
////                        setFinish_plan_info((BBUserFinishPlanInfo) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case FINISH_PLAN_INFO:
////                    return getFinish_plan_info();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case FINISH_PLAN_INFO:
////                    return isSetFinish_plan_info();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof finish_plan_notify_args)) {
////                return equals((finish_plan_notify_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(finish_plan_notify_args finish_plan_notify_args) {
////            if (finish_plan_notify_args == null) {
////                return false;
////            }
////            boolean isSetFinish_plan_info = isSetFinish_plan_info();
////            boolean isSetFinish_plan_info2 = finish_plan_notify_args.isSetFinish_plan_info();
////            if ((isSetFinish_plan_info || isSetFinish_plan_info2) && (!isSetFinish_plan_info || !isSetFinish_plan_info2 || !this.finish_plan_info.equals(finish_plan_notify_args.finish_plan_info))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(finish_plan_notify_args finish_plan_notify_args) {
////            if (!getClass().equals(finish_plan_notify_args.getClass())) {
////                return getClass().getName().compareTo(finish_plan_notify_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetFinish_plan_info()).compareTo(Boolean.valueOf(finish_plan_notify_args.isSetFinish_plan_info()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetFinish_plan_info()) {
////                int a = C2121h.m5524a((Comparable) this.finish_plan_info, (Comparable) finish_plan_notify_args.finish_plan_info);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("finish_plan_notify_args(");
////            sb.append("finish_plan_info:");
////            if (this.finish_plan_info == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.finish_plan_info);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.finish_plan_info == null) {
////                throw new C2101g("Required field 'finish_plan_info' was not present! Struct: " + toString());
////            } else if (this.finish_plan_info != null) {
////                this.finish_plan_info.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class finish_plan_notify_result implements Serializable, Cloneable, Comparable<finish_plan_notify_result>, C2116f<finish_plan_notify_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("finish_plan_notify_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class finish_plan_notify_resultStandardScheme extends C2110c<finish_plan_notify_result> {
////            private finish_plan_notify_resultStandardScheme() {
////            }
////
////            /* synthetic */ finish_plan_notify_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, finish_plan_notify_result finish_plan_notify_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    finish_plan_notify_result.success = fVar.mo18513n();
////                                    finish_plan_notify_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    finish_plan_notify_result.sysException = new BESystemException();
////                                    finish_plan_notify_result.sysException.read(fVar);
////                                    finish_plan_notify_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        finish_plan_notify_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, finish_plan_notify_result finish_plan_notify_result) {
////                finish_plan_notify_result.validate();
////                finish_plan_notify_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (finish_plan_notify_result.isSetSuccess()) {
////                    fVar.mo18496a(finish_plan_notify_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(finish_plan_notify_result.success);
////                }
////                if (finish_plan_notify_result.sysException != null) {
////                    fVar.mo18496a(finish_plan_notify_result.SYS_EXCEPTION_FIELD_DESC);
////                    finish_plan_notify_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class finish_plan_notify_resultStandardSchemeFactory implements C2109b {
////            private finish_plan_notify_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ finish_plan_notify_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public finish_plan_notify_resultStandardScheme getScheme() {
////                return new finish_plan_notify_resultStandardScheme(null);
////            }
////        }
////
////        class finish_plan_notify_resultTupleScheme extends C2111d<finish_plan_notify_result> {
////            private finish_plan_notify_resultTupleScheme() {
////            }
////
////            /* synthetic */ finish_plan_notify_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, finish_plan_notify_result finish_plan_notify_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (finish_plan_notify_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (finish_plan_notify_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (finish_plan_notify_result.isSetSuccess()) {
////                    lVar.mo18493a(finish_plan_notify_result.success);
////                }
////                if (finish_plan_notify_result.isSetSysException()) {
////                    finish_plan_notify_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, finish_plan_notify_result finish_plan_notify_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    finish_plan_notify_result.success = lVar.mo18513n();
////                    finish_plan_notify_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    finish_plan_notify_result.sysException = new BESystemException();
////                    finish_plan_notify_result.sysException.read(lVar);
////                    finish_plan_notify_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class finish_plan_notify_resultTupleSchemeFactory implements C2109b {
////            private finish_plan_notify_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ finish_plan_notify_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public finish_plan_notify_resultTupleScheme getScheme() {
////                return new finish_plan_notify_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new finish_plan_notify_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new finish_plan_notify_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(finish_plan_notify_result.class, metaDataMap);
////        }
////
////        public finish_plan_notify_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public finish_plan_notify_result(int i, BESystemException bESystemException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////        }
////
////        public finish_plan_notify_result(finish_plan_notify_result finish_plan_notify_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = finish_plan_notify_result.__isset_bitfield;
////            this.success = finish_plan_notify_result.success;
////            if (finish_plan_notify_result.isSetSysException()) {
////                this.sysException = new BESystemException(finish_plan_notify_result.sysException);
////            }
////        }
////
////        public finish_plan_notify_result deepCopy() {
////            return new finish_plan_notify_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public finish_plan_notify_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public finish_plan_notify_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof finish_plan_notify_result)) {
////                return equals((finish_plan_notify_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(finish_plan_notify_result finish_plan_notify_result) {
////            if (finish_plan_notify_result == null || this.success != finish_plan_notify_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = finish_plan_notify_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(finish_plan_notify_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(finish_plan_notify_result finish_plan_notify_result) {
////            if (!getClass().equals(finish_plan_notify_result.getClass())) {
////                return getClass().getName().compareTo(finish_plan_notify_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(finish_plan_notify_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, finish_plan_notify_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(finish_plan_notify_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) finish_plan_notify_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("finish_plan_notify_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class forget_password_args implements Serializable, Cloneable, Comparable<forget_password_args>, C2116f<forget_password_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b EMAIL_FIELD_DESC = new C2097b("email", JceStruct.STRUCT_END, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("forget_password_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public String email;
////
////        public enum _Fields implements C2124m {
////            EMAIL(1, "email");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return EMAIL;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class forget_password_argsStandardScheme extends C2110c<forget_password_args> {
////            private forget_password_argsStandardScheme() {
////            }
////
////            /* synthetic */ forget_password_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, forget_password_args forget_password_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    forget_password_args.email = fVar.mo18516q();
////                                    forget_password_args.setEmailIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        forget_password_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, forget_password_args forget_password_args) {
////                forget_password_args.validate();
////                forget_password_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (forget_password_args.email != null) {
////                    fVar.mo18496a(forget_password_args.EMAIL_FIELD_DESC);
////                    fVar.mo18495a(forget_password_args.email);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class forget_password_argsStandardSchemeFactory implements C2109b {
////            private forget_password_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ forget_password_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public forget_password_argsStandardScheme getScheme() {
////                return new forget_password_argsStandardScheme(null);
////            }
////        }
////
////        class forget_password_argsTupleScheme extends C2111d<forget_password_args> {
////            private forget_password_argsTupleScheme() {
////            }
////
////            /* synthetic */ forget_password_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, forget_password_args forget_password_args) {
////                ((C2106l) fVar).mo18495a(forget_password_args.email);
////            }
////
////            public void read(C2100f fVar, forget_password_args forget_password_args) {
////                forget_password_args.email = ((C2106l) fVar).mo18516q();
////                forget_password_args.setEmailIsSet(true);
////            }
////        }
////
////        class forget_password_argsTupleSchemeFactory implements C2109b {
////            private forget_password_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ forget_password_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public forget_password_argsTupleScheme getScheme() {
////                return new forget_password_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new forget_password_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new forget_password_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.EMAIL, new C2091a("email", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(forget_password_args.class, metaDataMap);
////        }
////
////        public forget_password_args() {
////        }
////
////        public forget_password_args(String str) {
////            this();
////            this.email = str;
////        }
////
////        public forget_password_args(forget_password_args forget_password_args) {
////            if (forget_password_args.isSetEmail()) {
////                this.email = forget_password_args.email;
////            }
////        }
////
////        public forget_password_args deepCopy() {
////            return new forget_password_args(this);
////        }
////
////        public void clear() {
////            this.email = null;
////        }
////
////        public String getEmail() {
////            return this.email;
////        }
////
////        public forget_password_args setEmail(String str) {
////            this.email = str;
////            return this;
////        }
////
////        public void unsetEmail() {
////            this.email = null;
////        }
////
////        public boolean isSetEmail() {
////            return this.email != null;
////        }
////
////        public void setEmailIsSet(boolean z) {
////            if (!z) {
////                this.email = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case EMAIL:
////                    if (obj == null) {
////                        unsetEmail();
////                        return;
////                    } else {
////                        setEmail((String) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case EMAIL:
////                    return getEmail();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case EMAIL:
////                    return isSetEmail();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof forget_password_args)) {
////                return equals((forget_password_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(forget_password_args forget_password_args) {
////            if (forget_password_args == null) {
////                return false;
////            }
////            boolean isSetEmail = isSetEmail();
////            boolean isSetEmail2 = forget_password_args.isSetEmail();
////            if ((isSetEmail || isSetEmail2) && (!isSetEmail || !isSetEmail2 || !this.email.equals(forget_password_args.email))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(forget_password_args forget_password_args) {
////            if (!getClass().equals(forget_password_args.getClass())) {
////                return getClass().getName().compareTo(forget_password_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetEmail()).compareTo(Boolean.valueOf(forget_password_args.isSetEmail()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetEmail()) {
////                int a = C2121h.m5525a(this.email, forget_password_args.email);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("forget_password_args(");
////            sb.append("email:");
////            if (this.email == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.email);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.email == null) {
////                throw new C2101g("Required field 'email' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class forget_password_result implements Serializable, Cloneable, Comparable<forget_password_result>, C2116f<forget_password_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("forget_password_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class forget_password_resultStandardScheme extends C2110c<forget_password_result> {
////            private forget_password_resultStandardScheme() {
////            }
////
////            /* synthetic */ forget_password_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, forget_password_result forget_password_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    forget_password_result.success = fVar.mo18513n();
////                                    forget_password_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    forget_password_result.sysException = new BESystemException();
////                                    forget_password_result.sysException.read(fVar);
////                                    forget_password_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    forget_password_result.logicException = new BELogicException();
////                                    forget_password_result.logicException.read(fVar);
////                                    forget_password_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        forget_password_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, forget_password_result forget_password_result) {
////                forget_password_result.validate();
////                forget_password_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (forget_password_result.isSetSuccess()) {
////                    fVar.mo18496a(forget_password_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(forget_password_result.success);
////                }
////                if (forget_password_result.sysException != null) {
////                    fVar.mo18496a(forget_password_result.SYS_EXCEPTION_FIELD_DESC);
////                    forget_password_result.sysException.write(fVar);
////                }
////                if (forget_password_result.logicException != null) {
////                    fVar.mo18496a(forget_password_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    forget_password_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class forget_password_resultStandardSchemeFactory implements C2109b {
////            private forget_password_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ forget_password_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public forget_password_resultStandardScheme getScheme() {
////                return new forget_password_resultStandardScheme(null);
////            }
////        }
////
////        class forget_password_resultTupleScheme extends C2111d<forget_password_result> {
////            private forget_password_resultTupleScheme() {
////            }
////
////            /* synthetic */ forget_password_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, forget_password_result forget_password_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (forget_password_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (forget_password_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (forget_password_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (forget_password_result.isSetSuccess()) {
////                    lVar.mo18493a(forget_password_result.success);
////                }
////                if (forget_password_result.isSetSysException()) {
////                    forget_password_result.sysException.write(lVar);
////                }
////                if (forget_password_result.isSetLogicException()) {
////                    forget_password_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, forget_password_result forget_password_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    forget_password_result.success = lVar.mo18513n();
////                    forget_password_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    forget_password_result.sysException = new BESystemException();
////                    forget_password_result.sysException.read(lVar);
////                    forget_password_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    forget_password_result.logicException = new BELogicException();
////                    forget_password_result.logicException.read(lVar);
////                    forget_password_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class forget_password_resultTupleSchemeFactory implements C2109b {
////            private forget_password_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ forget_password_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public forget_password_resultTupleScheme getScheme() {
////                return new forget_password_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new forget_password_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new forget_password_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(forget_password_result.class, metaDataMap);
////        }
////
////        public forget_password_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public forget_password_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public forget_password_result(forget_password_result forget_password_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = forget_password_result.__isset_bitfield;
////            this.success = forget_password_result.success;
////            if (forget_password_result.isSetSysException()) {
////                this.sysException = new BESystemException(forget_password_result.sysException);
////            }
////            if (forget_password_result.isSetLogicException()) {
////                this.logicException = new BELogicException(forget_password_result.logicException);
////            }
////        }
////
////        public forget_password_result deepCopy() {
////            return new forget_password_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public forget_password_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public forget_password_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public forget_password_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof forget_password_result)) {
////                return equals((forget_password_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(forget_password_result forget_password_result) {
////            if (forget_password_result == null || this.success != forget_password_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = forget_password_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(forget_password_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = forget_password_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(forget_password_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(forget_password_result forget_password_result) {
////            if (!getClass().equals(forget_password_result.getClass())) {
////                return getClass().getName().compareTo(forget_password_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(forget_password_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, forget_password_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(forget_password_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) forget_password_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(forget_password_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) forget_password_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("forget_password_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_ad_custom_menu_args implements Serializable, Cloneable, Comparable<get_ad_custom_menu_args>, C2116f<get_ad_custom_menu_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_ad_custom_menu_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_ad_custom_menu_argsStandardScheme extends C2110c<get_ad_custom_menu_args> {
////            private get_ad_custom_menu_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_ad_custom_menu_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_ad_custom_menu_args get_ad_custom_menu_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_ad_custom_menu_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_ad_custom_menu_args get_ad_custom_menu_args) {
////                get_ad_custom_menu_args.validate();
////                get_ad_custom_menu_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_ad_custom_menu_argsStandardSchemeFactory implements C2109b {
////            private get_ad_custom_menu_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_ad_custom_menu_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_ad_custom_menu_argsStandardScheme getScheme() {
////                return new get_ad_custom_menu_argsStandardScheme(null);
////            }
////        }
////
////        class get_ad_custom_menu_argsTupleScheme extends C2111d<get_ad_custom_menu_args> {
////            private get_ad_custom_menu_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_ad_custom_menu_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_ad_custom_menu_args get_ad_custom_menu_args) {
////            }
////
////            public void read(C2100f fVar, get_ad_custom_menu_args get_ad_custom_menu_args) {
////            }
////        }
////
////        class get_ad_custom_menu_argsTupleSchemeFactory implements C2109b {
////            private get_ad_custom_menu_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_ad_custom_menu_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_ad_custom_menu_argsTupleScheme getScheme() {
////                return new get_ad_custom_menu_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_ad_custom_menu_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_ad_custom_menu_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_ad_custom_menu_args.class, metaDataMap);
////        }
////
////        public get_ad_custom_menu_args() {
////        }
////
////        public get_ad_custom_menu_args(get_ad_custom_menu_args get_ad_custom_menu_args) {
////        }
////
////        public get_ad_custom_menu_args deepCopy() {
////            return new get_ad_custom_menu_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2450xf03b9694;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2450xf03b9694;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2450xf03b9694;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_ad_custom_menu_args)) {
////                return equals((get_ad_custom_menu_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_ad_custom_menu_args get_ad_custom_menu_args) {
////            if (get_ad_custom_menu_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_ad_custom_menu_args get_ad_custom_menu_args) {
////            if (!getClass().equals(get_ad_custom_menu_args.getClass())) {
////                return getClass().getName().compareTo(get_ad_custom_menu_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_ad_custom_menu_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_ad_custom_menu_result implements Serializable, Cloneable, Comparable<get_ad_custom_menu_result>, C2116f<get_ad_custom_menu_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_ad_custom_menu_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBAdCustomMenu success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_ad_custom_menu_resultStandardScheme extends C2110c<get_ad_custom_menu_result> {
////            private get_ad_custom_menu_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_ad_custom_menu_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_ad_custom_menu_result get_ad_custom_menu_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_ad_custom_menu_result.success = new BBAdCustomMenu();
////                                    get_ad_custom_menu_result.success.read(fVar);
////                                    get_ad_custom_menu_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_ad_custom_menu_result.sysException = new BESystemException();
////                                    get_ad_custom_menu_result.sysException.read(fVar);
////                                    get_ad_custom_menu_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_ad_custom_menu_result.logicException = new BELogicException();
////                                    get_ad_custom_menu_result.logicException.read(fVar);
////                                    get_ad_custom_menu_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_ad_custom_menu_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_ad_custom_menu_result get_ad_custom_menu_result) {
////                get_ad_custom_menu_result.validate();
////                get_ad_custom_menu_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_ad_custom_menu_result.success != null) {
////                    fVar.mo18496a(get_ad_custom_menu_result.SUCCESS_FIELD_DESC);
////                    get_ad_custom_menu_result.success.write(fVar);
////                }
////                if (get_ad_custom_menu_result.sysException != null) {
////                    fVar.mo18496a(get_ad_custom_menu_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_ad_custom_menu_result.sysException.write(fVar);
////                }
////                if (get_ad_custom_menu_result.logicException != null) {
////                    fVar.mo18496a(get_ad_custom_menu_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_ad_custom_menu_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_ad_custom_menu_resultStandardSchemeFactory implements C2109b {
////            private get_ad_custom_menu_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_ad_custom_menu_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_ad_custom_menu_resultStandardScheme getScheme() {
////                return new get_ad_custom_menu_resultStandardScheme(null);
////            }
////        }
////
////        class get_ad_custom_menu_resultTupleScheme extends C2111d<get_ad_custom_menu_result> {
////            private get_ad_custom_menu_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_ad_custom_menu_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_ad_custom_menu_result get_ad_custom_menu_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_ad_custom_menu_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_ad_custom_menu_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_ad_custom_menu_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_ad_custom_menu_result.isSetSuccess()) {
////                    get_ad_custom_menu_result.success.write(lVar);
////                }
////                if (get_ad_custom_menu_result.isSetSysException()) {
////                    get_ad_custom_menu_result.sysException.write(lVar);
////                }
////                if (get_ad_custom_menu_result.isSetLogicException()) {
////                    get_ad_custom_menu_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_ad_custom_menu_result get_ad_custom_menu_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    get_ad_custom_menu_result.success = new BBAdCustomMenu();
////                    get_ad_custom_menu_result.success.read(lVar);
////                    get_ad_custom_menu_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_ad_custom_menu_result.sysException = new BESystemException();
////                    get_ad_custom_menu_result.sysException.read(lVar);
////                    get_ad_custom_menu_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_ad_custom_menu_result.logicException = new BELogicException();
////                    get_ad_custom_menu_result.logicException.read(lVar);
////                    get_ad_custom_menu_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_ad_custom_menu_resultTupleSchemeFactory implements C2109b {
////            private get_ad_custom_menu_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_ad_custom_menu_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_ad_custom_menu_resultTupleScheme getScheme() {
////                return new get_ad_custom_menu_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_ad_custom_menu_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_ad_custom_menu_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBAdCustomMenu.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_ad_custom_menu_result.class, metaDataMap);
////        }
////
////        public get_ad_custom_menu_result() {
////        }
////
////        public get_ad_custom_menu_result(BBAdCustomMenu bBAdCustomMenu, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBAdCustomMenu;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_ad_custom_menu_result(get_ad_custom_menu_result get_ad_custom_menu_result) {
////            if (get_ad_custom_menu_result.isSetSuccess()) {
////                this.success = new BBAdCustomMenu(get_ad_custom_menu_result.success);
////            }
////            if (get_ad_custom_menu_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_ad_custom_menu_result.sysException);
////            }
////            if (get_ad_custom_menu_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_ad_custom_menu_result.logicException);
////            }
////        }
////
////        public get_ad_custom_menu_result deepCopy() {
////            return new get_ad_custom_menu_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBAdCustomMenu getSuccess() {
////            return this.success;
////        }
////
////        public get_ad_custom_menu_result setSuccess(BBAdCustomMenu bBAdCustomMenu) {
////            this.success = bBAdCustomMenu;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_ad_custom_menu_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_ad_custom_menu_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBAdCustomMenu) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_ad_custom_menu_result)) {
////                return equals((get_ad_custom_menu_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_ad_custom_menu_result get_ad_custom_menu_result) {
////            if (get_ad_custom_menu_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_ad_custom_menu_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_ad_custom_menu_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_ad_custom_menu_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_ad_custom_menu_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_ad_custom_menu_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_ad_custom_menu_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_ad_custom_menu_result get_ad_custom_menu_result) {
////            if (!getClass().equals(get_ad_custom_menu_result.getClass())) {
////                return getClass().getName().compareTo(get_ad_custom_menu_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_ad_custom_menu_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) get_ad_custom_menu_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_ad_custom_menu_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_ad_custom_menu_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_ad_custom_menu_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_ad_custom_menu_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_ad_custom_menu_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_ads_list_args implements Serializable, Cloneable, Comparable<get_ads_list_args>, C2116f<get_ads_list_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_ads_list_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_ads_list_argsStandardScheme extends C2110c<get_ads_list_args> {
////            private get_ads_list_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_ads_list_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_ads_list_args get_ads_list_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_ads_list_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_ads_list_args get_ads_list_args) {
////                get_ads_list_args.validate();
////                get_ads_list_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_ads_list_argsStandardSchemeFactory implements C2109b {
////            private get_ads_list_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_ads_list_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_ads_list_argsStandardScheme getScheme() {
////                return new get_ads_list_argsStandardScheme(null);
////            }
////        }
////
////        class get_ads_list_argsTupleScheme extends C2111d<get_ads_list_args> {
////            private get_ads_list_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_ads_list_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_ads_list_args get_ads_list_args) {
////            }
////
////            public void read(C2100f fVar, get_ads_list_args get_ads_list_args) {
////            }
////        }
////
////        class get_ads_list_argsTupleSchemeFactory implements C2109b {
////            private get_ads_list_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_ads_list_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_ads_list_argsTupleScheme getScheme() {
////                return new get_ads_list_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_ads_list_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_ads_list_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_ads_list_args.class, metaDataMap);
////        }
////
////        public get_ads_list_args() {
////        }
////
////        public get_ads_list_args(get_ads_list_args get_ads_list_args) {
////        }
////
////        public get_ads_list_args deepCopy() {
////            return new get_ads_list_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2452x19bd1c58;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2452x19bd1c58;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2452x19bd1c58;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_ads_list_args)) {
////                return equals((get_ads_list_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_ads_list_args get_ads_list_args) {
////            if (get_ads_list_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_ads_list_args get_ads_list_args) {
////            if (!getClass().equals(get_ads_list_args.getClass())) {
////                return getClass().getName().compareTo(get_ads_list_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_ads_list_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_ads_list_result implements Serializable, Cloneable, Comparable<get_ads_list_result>, C2116f<get_ads_list_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_ads_list_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBAdInfo> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_ads_list_resultStandardScheme extends C2110c<get_ads_list_result> {
////            private get_ads_list_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_ads_list_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_ads_list_result get_ads_list_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_ads_list_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBAdInfo bBAdInfo = new BBAdInfo();
////                                        bBAdInfo.read(fVar);
////                                        get_ads_list_result.success.add(bBAdInfo);
////                                    }
////                                    get_ads_list_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_ads_list_result.sysException = new BESystemException();
////                                    get_ads_list_result.sysException.read(fVar);
////                                    get_ads_list_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_ads_list_result.logicException = new BELogicException();
////                                    get_ads_list_result.logicException.read(fVar);
////                                    get_ads_list_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_ads_list_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_ads_list_result get_ads_list_result) {
////                get_ads_list_result.validate();
////                get_ads_list_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_ads_list_result.success != null) {
////                    fVar.mo18496a(get_ads_list_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_ads_list_result.success.size()));
////                    for (BBAdInfo write : get_ads_list_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_ads_list_result.sysException != null) {
////                    fVar.mo18496a(get_ads_list_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_ads_list_result.sysException.write(fVar);
////                }
////                if (get_ads_list_result.logicException != null) {
////                    fVar.mo18496a(get_ads_list_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_ads_list_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_ads_list_resultStandardSchemeFactory implements C2109b {
////            private get_ads_list_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_ads_list_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_ads_list_resultStandardScheme getScheme() {
////                return new get_ads_list_resultStandardScheme(null);
////            }
////        }
////
////        class get_ads_list_resultTupleScheme extends C2111d<get_ads_list_result> {
////            private get_ads_list_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_ads_list_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_ads_list_result get_ads_list_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_ads_list_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_ads_list_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_ads_list_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_ads_list_result.isSetSuccess()) {
////                    lVar.mo18493a(get_ads_list_result.success.size());
////                    for (BBAdInfo write : get_ads_list_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_ads_list_result.isSetSysException()) {
////                    get_ads_list_result.sysException.write(lVar);
////                }
////                if (get_ads_list_result.isSetLogicException()) {
////                    get_ads_list_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_ads_list_result get_ads_list_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_ads_list_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBAdInfo bBAdInfo = new BBAdInfo();
////                        bBAdInfo.read(lVar);
////                        get_ads_list_result.success.add(bBAdInfo);
////                    }
////                    get_ads_list_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_ads_list_result.sysException = new BESystemException();
////                    get_ads_list_result.sysException.read(lVar);
////                    get_ads_list_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_ads_list_result.logicException = new BELogicException();
////                    get_ads_list_result.logicException.read(lVar);
////                    get_ads_list_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_ads_list_resultTupleSchemeFactory implements C2109b {
////            private get_ads_list_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_ads_list_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_ads_list_resultTupleScheme getScheme() {
////                return new get_ads_list_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_ads_list_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_ads_list_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBAdInfo.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_ads_list_result.class, metaDataMap);
////        }
////
////        public get_ads_list_result() {
////        }
////
////        public get_ads_list_result(List<BBAdInfo> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_ads_list_result(get_ads_list_result get_ads_list_result) {
////            if (get_ads_list_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_ads_list_result.success.size());
////                for (BBAdInfo bBAdInfo : get_ads_list_result.success) {
////                    arrayList.add(new BBAdInfo(bBAdInfo));
////                }
////                this.success = arrayList;
////            }
////            if (get_ads_list_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_ads_list_result.sysException);
////            }
////            if (get_ads_list_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_ads_list_result.logicException);
////            }
////        }
////
////        public get_ads_list_result deepCopy() {
////            return new get_ads_list_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBAdInfo> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBAdInfo bBAdInfo) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBAdInfo);
////        }
////
////        public List<BBAdInfo> getSuccess() {
////            return this.success;
////        }
////
////        public get_ads_list_result setSuccess(List<BBAdInfo> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_ads_list_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_ads_list_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_ads_list_result)) {
////                return equals((get_ads_list_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_ads_list_result get_ads_list_result) {
////            if (get_ads_list_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_ads_list_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_ads_list_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_ads_list_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_ads_list_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_ads_list_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_ads_list_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_ads_list_result get_ads_list_result) {
////            if (!getClass().equals(get_ads_list_result.getClass())) {
////                return getClass().getName().compareTo(get_ads_list_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_ads_list_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_ads_list_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_ads_list_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_ads_list_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_ads_list_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_ads_list_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_ads_list_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_all_books_basic_info_args implements Serializable, Cloneable, Comparable<get_all_books_basic_info_args>, C2116f<get_all_books_basic_info_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_all_books_basic_info_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_all_books_basic_info_argsStandardScheme extends C2110c<get_all_books_basic_info_args> {
////            private get_all_books_basic_info_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_all_books_basic_info_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_all_books_basic_info_args get_all_books_basic_info_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_all_books_basic_info_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_all_books_basic_info_args get_all_books_basic_info_args) {
////                get_all_books_basic_info_args.validate();
////                get_all_books_basic_info_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_all_books_basic_info_argsStandardSchemeFactory implements C2109b {
////            private get_all_books_basic_info_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_books_basic_info_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_books_basic_info_argsStandardScheme getScheme() {
////                return new get_all_books_basic_info_argsStandardScheme(null);
////            }
////        }
////
////        class get_all_books_basic_info_argsTupleScheme extends C2111d<get_all_books_basic_info_args> {
////            private get_all_books_basic_info_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_all_books_basic_info_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_all_books_basic_info_args get_all_books_basic_info_args) {
////            }
////
////            public void read(C2100f fVar, get_all_books_basic_info_args get_all_books_basic_info_args) {
////            }
////        }
////
////        class get_all_books_basic_info_argsTupleSchemeFactory implements C2109b {
////            private get_all_books_basic_info_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_books_basic_info_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_books_basic_info_argsTupleScheme getScheme() {
////                return new get_all_books_basic_info_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_all_books_basic_info_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_all_books_basic_info_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_all_books_basic_info_args.class, metaDataMap);
////        }
////
////        public get_all_books_basic_info_args() {
////        }
////
////        public get_all_books_basic_info_args(get_all_books_basic_info_args get_all_books_basic_info_args) {
////        }
////
////        public get_all_books_basic_info_args deepCopy() {
////            return new get_all_books_basic_info_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2454x9e4d1613;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2454x9e4d1613;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2454x9e4d1613;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_all_books_basic_info_args)) {
////                return equals((get_all_books_basic_info_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_all_books_basic_info_args get_all_books_basic_info_args) {
////            if (get_all_books_basic_info_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_all_books_basic_info_args get_all_books_basic_info_args) {
////            if (!getClass().equals(get_all_books_basic_info_args.getClass())) {
////                return getClass().getName().compareTo(get_all_books_basic_info_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_all_books_basic_info_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_all_books_basic_info_result implements Serializable, Cloneable, Comparable<get_all_books_basic_info_result>, C2116f<get_all_books_basic_info_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_all_books_basic_info_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBBookListInfo success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_all_books_basic_info_resultStandardScheme extends C2110c<get_all_books_basic_info_result> {
////            private get_all_books_basic_info_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_all_books_basic_info_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_all_books_basic_info_result get_all_books_basic_info_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_all_books_basic_info_result.success = new BBBookListInfo();
////                                    get_all_books_basic_info_result.success.read(fVar);
////                                    get_all_books_basic_info_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_all_books_basic_info_result.sysException = new BESystemException();
////                                    get_all_books_basic_info_result.sysException.read(fVar);
////                                    get_all_books_basic_info_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_all_books_basic_info_result.logicException = new BELogicException();
////                                    get_all_books_basic_info_result.logicException.read(fVar);
////                                    get_all_books_basic_info_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_all_books_basic_info_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_all_books_basic_info_result get_all_books_basic_info_result) {
////                get_all_books_basic_info_result.validate();
////                get_all_books_basic_info_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_all_books_basic_info_result.success != null) {
////                    fVar.mo18496a(get_all_books_basic_info_result.SUCCESS_FIELD_DESC);
////                    get_all_books_basic_info_result.success.write(fVar);
////                }
////                if (get_all_books_basic_info_result.sysException != null) {
////                    fVar.mo18496a(get_all_books_basic_info_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_all_books_basic_info_result.sysException.write(fVar);
////                }
////                if (get_all_books_basic_info_result.logicException != null) {
////                    fVar.mo18496a(get_all_books_basic_info_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_all_books_basic_info_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_all_books_basic_info_resultStandardSchemeFactory implements C2109b {
////            private get_all_books_basic_info_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_books_basic_info_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_books_basic_info_resultStandardScheme getScheme() {
////                return new get_all_books_basic_info_resultStandardScheme(null);
////            }
////        }
////
////        class get_all_books_basic_info_resultTupleScheme extends C2111d<get_all_books_basic_info_result> {
////            private get_all_books_basic_info_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_all_books_basic_info_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_all_books_basic_info_result get_all_books_basic_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_all_books_basic_info_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_all_books_basic_info_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_all_books_basic_info_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_all_books_basic_info_result.isSetSuccess()) {
////                    get_all_books_basic_info_result.success.write(lVar);
////                }
////                if (get_all_books_basic_info_result.isSetSysException()) {
////                    get_all_books_basic_info_result.sysException.write(lVar);
////                }
////                if (get_all_books_basic_info_result.isSetLogicException()) {
////                    get_all_books_basic_info_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_all_books_basic_info_result get_all_books_basic_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    get_all_books_basic_info_result.success = new BBBookListInfo();
////                    get_all_books_basic_info_result.success.read(lVar);
////                    get_all_books_basic_info_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_all_books_basic_info_result.sysException = new BESystemException();
////                    get_all_books_basic_info_result.sysException.read(lVar);
////                    get_all_books_basic_info_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_all_books_basic_info_result.logicException = new BELogicException();
////                    get_all_books_basic_info_result.logicException.read(lVar);
////                    get_all_books_basic_info_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_all_books_basic_info_resultTupleSchemeFactory implements C2109b {
////            private get_all_books_basic_info_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_books_basic_info_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_books_basic_info_resultTupleScheme getScheme() {
////                return new get_all_books_basic_info_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_all_books_basic_info_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_all_books_basic_info_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBBookListInfo.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_all_books_basic_info_result.class, metaDataMap);
////        }
////
////        public get_all_books_basic_info_result() {
////        }
////
////        public get_all_books_basic_info_result(BBBookListInfo bBBookListInfo, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBBookListInfo;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_all_books_basic_info_result(get_all_books_basic_info_result get_all_books_basic_info_result) {
////            if (get_all_books_basic_info_result.isSetSuccess()) {
////                this.success = new BBBookListInfo(get_all_books_basic_info_result.success);
////            }
////            if (get_all_books_basic_info_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_all_books_basic_info_result.sysException);
////            }
////            if (get_all_books_basic_info_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_all_books_basic_info_result.logicException);
////            }
////        }
////
////        public get_all_books_basic_info_result deepCopy() {
////            return new get_all_books_basic_info_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBBookListInfo getSuccess() {
////            return this.success;
////        }
////
////        public get_all_books_basic_info_result setSuccess(BBBookListInfo bBBookListInfo) {
////            this.success = bBBookListInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_all_books_basic_info_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_all_books_basic_info_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBBookListInfo) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_all_books_basic_info_result)) {
////                return equals((get_all_books_basic_info_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_all_books_basic_info_result get_all_books_basic_info_result) {
////            if (get_all_books_basic_info_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_all_books_basic_info_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_all_books_basic_info_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_all_books_basic_info_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_all_books_basic_info_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_all_books_basic_info_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_all_books_basic_info_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_all_books_basic_info_result get_all_books_basic_info_result) {
////            if (!getClass().equals(get_all_books_basic_info_result.getClass())) {
////                return getClass().getName().compareTo(get_all_books_basic_info_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_all_books_basic_info_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) get_all_books_basic_info_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_all_books_basic_info_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_all_books_basic_info_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_all_books_basic_info_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_all_books_basic_info_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_all_books_basic_info_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_all_notify_msgs_args implements Serializable, Cloneable, Comparable<get_all_notify_msgs_args>, C2116f<get_all_notify_msgs_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_all_notify_msgs_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_all_notify_msgs_argsStandardScheme extends C2110c<get_all_notify_msgs_args> {
////            private get_all_notify_msgs_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_all_notify_msgs_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_all_notify_msgs_args get_all_notify_msgs_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_all_notify_msgs_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_all_notify_msgs_args get_all_notify_msgs_args) {
////                get_all_notify_msgs_args.validate();
////                get_all_notify_msgs_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_all_notify_msgs_argsStandardSchemeFactory implements C2109b {
////            private get_all_notify_msgs_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_notify_msgs_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_notify_msgs_argsStandardScheme getScheme() {
////                return new get_all_notify_msgs_argsStandardScheme(null);
////            }
////        }
////
////        class get_all_notify_msgs_argsTupleScheme extends C2111d<get_all_notify_msgs_args> {
////            private get_all_notify_msgs_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_all_notify_msgs_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_all_notify_msgs_args get_all_notify_msgs_args) {
////            }
////
////            public void read(C2100f fVar, get_all_notify_msgs_args get_all_notify_msgs_args) {
////            }
////        }
////
////        class get_all_notify_msgs_argsTupleSchemeFactory implements C2109b {
////            private get_all_notify_msgs_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_notify_msgs_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_notify_msgs_argsTupleScheme getScheme() {
////                return new get_all_notify_msgs_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_all_notify_msgs_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_all_notify_msgs_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_all_notify_msgs_args.class, metaDataMap);
////        }
////
////        public get_all_notify_msgs_args() {
////        }
////
////        public get_all_notify_msgs_args(get_all_notify_msgs_args get_all_notify_msgs_args) {
////        }
////
////        public get_all_notify_msgs_args deepCopy() {
////            return new get_all_notify_msgs_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2456x58c45c11;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2456x58c45c11;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2456x58c45c11;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_all_notify_msgs_args)) {
////                return equals((get_all_notify_msgs_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_all_notify_msgs_args get_all_notify_msgs_args) {
////            if (get_all_notify_msgs_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_all_notify_msgs_args get_all_notify_msgs_args) {
////            if (!getClass().equals(get_all_notify_msgs_args.getClass())) {
////                return getClass().getName().compareTo(get_all_notify_msgs_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_all_notify_msgs_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_all_notify_msgs_result implements Serializable, Cloneable, Comparable<get_all_notify_msgs_result>, C2116f<get_all_notify_msgs_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_all_notify_msgs_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBUserNotifyMsg> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_all_notify_msgs_resultStandardScheme extends C2110c<get_all_notify_msgs_result> {
////            private get_all_notify_msgs_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_all_notify_msgs_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_all_notify_msgs_result get_all_notify_msgs_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_all_notify_msgs_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBUserNotifyMsg bBUserNotifyMsg = new BBUserNotifyMsg();
////                                        bBUserNotifyMsg.read(fVar);
////                                        get_all_notify_msgs_result.success.add(bBUserNotifyMsg);
////                                    }
////                                    get_all_notify_msgs_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_all_notify_msgs_result.sysException = new BESystemException();
////                                    get_all_notify_msgs_result.sysException.read(fVar);
////                                    get_all_notify_msgs_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_all_notify_msgs_result.logicException = new BELogicException();
////                                    get_all_notify_msgs_result.logicException.read(fVar);
////                                    get_all_notify_msgs_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_all_notify_msgs_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_all_notify_msgs_result get_all_notify_msgs_result) {
////                get_all_notify_msgs_result.validate();
////                get_all_notify_msgs_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_all_notify_msgs_result.success != null) {
////                    fVar.mo18496a(get_all_notify_msgs_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_all_notify_msgs_result.success.size()));
////                    for (BBUserNotifyMsg write : get_all_notify_msgs_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_all_notify_msgs_result.sysException != null) {
////                    fVar.mo18496a(get_all_notify_msgs_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_all_notify_msgs_result.sysException.write(fVar);
////                }
////                if (get_all_notify_msgs_result.logicException != null) {
////                    fVar.mo18496a(get_all_notify_msgs_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_all_notify_msgs_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_all_notify_msgs_resultStandardSchemeFactory implements C2109b {
////            private get_all_notify_msgs_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_notify_msgs_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_notify_msgs_resultStandardScheme getScheme() {
////                return new get_all_notify_msgs_resultStandardScheme(null);
////            }
////        }
////
////        class get_all_notify_msgs_resultTupleScheme extends C2111d<get_all_notify_msgs_result> {
////            private get_all_notify_msgs_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_all_notify_msgs_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_all_notify_msgs_result get_all_notify_msgs_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_all_notify_msgs_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_all_notify_msgs_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_all_notify_msgs_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_all_notify_msgs_result.isSetSuccess()) {
////                    lVar.mo18493a(get_all_notify_msgs_result.success.size());
////                    for (BBUserNotifyMsg write : get_all_notify_msgs_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_all_notify_msgs_result.isSetSysException()) {
////                    get_all_notify_msgs_result.sysException.write(lVar);
////                }
////                if (get_all_notify_msgs_result.isSetLogicException()) {
////                    get_all_notify_msgs_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_all_notify_msgs_result get_all_notify_msgs_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_all_notify_msgs_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBUserNotifyMsg bBUserNotifyMsg = new BBUserNotifyMsg();
////                        bBUserNotifyMsg.read(lVar);
////                        get_all_notify_msgs_result.success.add(bBUserNotifyMsg);
////                    }
////                    get_all_notify_msgs_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_all_notify_msgs_result.sysException = new BESystemException();
////                    get_all_notify_msgs_result.sysException.read(lVar);
////                    get_all_notify_msgs_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_all_notify_msgs_result.logicException = new BELogicException();
////                    get_all_notify_msgs_result.logicException.read(lVar);
////                    get_all_notify_msgs_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_all_notify_msgs_resultTupleSchemeFactory implements C2109b {
////            private get_all_notify_msgs_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_notify_msgs_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_notify_msgs_resultTupleScheme getScheme() {
////                return new get_all_notify_msgs_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_all_notify_msgs_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_all_notify_msgs_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBUserNotifyMsg.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_all_notify_msgs_result.class, metaDataMap);
////        }
////
////        public get_all_notify_msgs_result() {
////        }
////
////        public get_all_notify_msgs_result(List<BBUserNotifyMsg> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_all_notify_msgs_result(get_all_notify_msgs_result get_all_notify_msgs_result) {
////            if (get_all_notify_msgs_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_all_notify_msgs_result.success.size());
////                for (BBUserNotifyMsg bBUserNotifyMsg : get_all_notify_msgs_result.success) {
////                    arrayList.add(new BBUserNotifyMsg(bBUserNotifyMsg));
////                }
////                this.success = arrayList;
////            }
////            if (get_all_notify_msgs_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_all_notify_msgs_result.sysException);
////            }
////            if (get_all_notify_msgs_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_all_notify_msgs_result.logicException);
////            }
////        }
////
////        public get_all_notify_msgs_result deepCopy() {
////            return new get_all_notify_msgs_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBUserNotifyMsg> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBUserNotifyMsg bBUserNotifyMsg) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBUserNotifyMsg);
////        }
////
////        public List<BBUserNotifyMsg> getSuccess() {
////            return this.success;
////        }
////
////        public get_all_notify_msgs_result setSuccess(List<BBUserNotifyMsg> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_all_notify_msgs_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_all_notify_msgs_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_all_notify_msgs_result)) {
////                return equals((get_all_notify_msgs_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_all_notify_msgs_result get_all_notify_msgs_result) {
////            if (get_all_notify_msgs_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_all_notify_msgs_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_all_notify_msgs_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_all_notify_msgs_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_all_notify_msgs_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_all_notify_msgs_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_all_notify_msgs_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_all_notify_msgs_result get_all_notify_msgs_result) {
////            if (!getClass().equals(get_all_notify_msgs_result.getClass())) {
////                return getClass().getName().compareTo(get_all_notify_msgs_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_all_notify_msgs_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_all_notify_msgs_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_all_notify_msgs_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_all_notify_msgs_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_all_notify_msgs_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_all_notify_msgs_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_all_notify_msgs_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_all_selected_books_info_args implements Serializable, Cloneable, Comparable<get_all_selected_books_info_args>, C2116f<get_all_selected_books_info_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_all_selected_books_info_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_all_selected_books_info_argsStandardScheme extends C2110c<get_all_selected_books_info_args> {
////            private get_all_selected_books_info_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_all_selected_books_info_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_all_selected_books_info_args get_all_selected_books_info_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_all_selected_books_info_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_all_selected_books_info_args get_all_selected_books_info_args) {
////                get_all_selected_books_info_args.validate();
////                get_all_selected_books_info_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_all_selected_books_info_argsStandardSchemeFactory implements C2109b {
////            private get_all_selected_books_info_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_selected_books_info_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_selected_books_info_argsStandardScheme getScheme() {
////                return new get_all_selected_books_info_argsStandardScheme(null);
////            }
////        }
////
////        class get_all_selected_books_info_argsTupleScheme extends C2111d<get_all_selected_books_info_args> {
////            private get_all_selected_books_info_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_all_selected_books_info_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_all_selected_books_info_args get_all_selected_books_info_args) {
////            }
////
////            public void read(C2100f fVar, get_all_selected_books_info_args get_all_selected_books_info_args) {
////            }
////        }
////
////        class get_all_selected_books_info_argsTupleSchemeFactory implements C2109b {
////            private get_all_selected_books_info_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_selected_books_info_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_selected_books_info_argsTupleScheme getScheme() {
////                return new get_all_selected_books_info_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_all_selected_books_info_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_all_selected_books_info_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_all_selected_books_info_args.class, metaDataMap);
////        }
////
////        public get_all_selected_books_info_args() {
////        }
////
////        public get_all_selected_books_info_args(get_all_selected_books_info_args get_all_selected_books_info_args) {
////        }
////
////        public get_all_selected_books_info_args deepCopy() {
////            return new get_all_selected_books_info_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2458xfc791072;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2458xfc791072;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2458xfc791072;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_all_selected_books_info_args)) {
////                return equals((get_all_selected_books_info_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_all_selected_books_info_args get_all_selected_books_info_args) {
////            if (get_all_selected_books_info_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_all_selected_books_info_args get_all_selected_books_info_args) {
////            if (!getClass().equals(get_all_selected_books_info_args.getClass())) {
////                return getClass().getName().compareTo(get_all_selected_books_info_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_all_selected_books_info_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_all_selected_books_info_result implements Serializable, Cloneable, Comparable<get_all_selected_books_info_result>, C2116f<get_all_selected_books_info_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_all_selected_books_info_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBUserSelectedBookInfo> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_all_selected_books_info_resultStandardScheme extends C2110c<get_all_selected_books_info_result> {
////            private get_all_selected_books_info_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_all_selected_books_info_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_all_selected_books_info_result get_all_selected_books_info_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_all_selected_books_info_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBUserSelectedBookInfo bBUserSelectedBookInfo = new BBUserSelectedBookInfo();
////                                        bBUserSelectedBookInfo.read(fVar);
////                                        get_all_selected_books_info_result.success.add(bBUserSelectedBookInfo);
////                                    }
////                                    get_all_selected_books_info_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_all_selected_books_info_result.sysException = new BESystemException();
////                                    get_all_selected_books_info_result.sysException.read(fVar);
////                                    get_all_selected_books_info_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_all_selected_books_info_result.logicException = new BELogicException();
////                                    get_all_selected_books_info_result.logicException.read(fVar);
////                                    get_all_selected_books_info_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_all_selected_books_info_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_all_selected_books_info_result get_all_selected_books_info_result) {
////                get_all_selected_books_info_result.validate();
////                get_all_selected_books_info_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_all_selected_books_info_result.success != null) {
////                    fVar.mo18496a(get_all_selected_books_info_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_all_selected_books_info_result.success.size()));
////                    for (BBUserSelectedBookInfo write : get_all_selected_books_info_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_all_selected_books_info_result.sysException != null) {
////                    fVar.mo18496a(get_all_selected_books_info_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_all_selected_books_info_result.sysException.write(fVar);
////                }
////                if (get_all_selected_books_info_result.logicException != null) {
////                    fVar.mo18496a(get_all_selected_books_info_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_all_selected_books_info_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_all_selected_books_info_resultStandardSchemeFactory implements C2109b {
////            private get_all_selected_books_info_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_selected_books_info_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_selected_books_info_resultStandardScheme getScheme() {
////                return new get_all_selected_books_info_resultStandardScheme(null);
////            }
////        }
////
////        class get_all_selected_books_info_resultTupleScheme extends C2111d<get_all_selected_books_info_result> {
////            private get_all_selected_books_info_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_all_selected_books_info_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_all_selected_books_info_result get_all_selected_books_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_all_selected_books_info_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_all_selected_books_info_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_all_selected_books_info_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_all_selected_books_info_result.isSetSuccess()) {
////                    lVar.mo18493a(get_all_selected_books_info_result.success.size());
////                    for (BBUserSelectedBookInfo write : get_all_selected_books_info_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_all_selected_books_info_result.isSetSysException()) {
////                    get_all_selected_books_info_result.sysException.write(lVar);
////                }
////                if (get_all_selected_books_info_result.isSetLogicException()) {
////                    get_all_selected_books_info_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_all_selected_books_info_result get_all_selected_books_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_all_selected_books_info_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBUserSelectedBookInfo bBUserSelectedBookInfo = new BBUserSelectedBookInfo();
////                        bBUserSelectedBookInfo.read(lVar);
////                        get_all_selected_books_info_result.success.add(bBUserSelectedBookInfo);
////                    }
////                    get_all_selected_books_info_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_all_selected_books_info_result.sysException = new BESystemException();
////                    get_all_selected_books_info_result.sysException.read(lVar);
////                    get_all_selected_books_info_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_all_selected_books_info_result.logicException = new BELogicException();
////                    get_all_selected_books_info_result.logicException.read(lVar);
////                    get_all_selected_books_info_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_all_selected_books_info_resultTupleSchemeFactory implements C2109b {
////            private get_all_selected_books_info_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_all_selected_books_info_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_all_selected_books_info_resultTupleScheme getScheme() {
////                return new get_all_selected_books_info_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_all_selected_books_info_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_all_selected_books_info_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBUserSelectedBookInfo.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_all_selected_books_info_result.class, metaDataMap);
////        }
////
////        public get_all_selected_books_info_result() {
////        }
////
////        public get_all_selected_books_info_result(List<BBUserSelectedBookInfo> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_all_selected_books_info_result(get_all_selected_books_info_result get_all_selected_books_info_result) {
////            if (get_all_selected_books_info_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_all_selected_books_info_result.success.size());
////                for (BBUserSelectedBookInfo bBUserSelectedBookInfo : get_all_selected_books_info_result.success) {
////                    arrayList.add(new BBUserSelectedBookInfo(bBUserSelectedBookInfo));
////                }
////                this.success = arrayList;
////            }
////            if (get_all_selected_books_info_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_all_selected_books_info_result.sysException);
////            }
////            if (get_all_selected_books_info_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_all_selected_books_info_result.logicException);
////            }
////        }
////
////        public get_all_selected_books_info_result deepCopy() {
////            return new get_all_selected_books_info_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBUserSelectedBookInfo> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBUserSelectedBookInfo bBUserSelectedBookInfo) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBUserSelectedBookInfo);
////        }
////
////        public List<BBUserSelectedBookInfo> getSuccess() {
////            return this.success;
////        }
////
////        public get_all_selected_books_info_result setSuccess(List<BBUserSelectedBookInfo> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_all_selected_books_info_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_all_selected_books_info_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_all_selected_books_info_result)) {
////                return equals((get_all_selected_books_info_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_all_selected_books_info_result get_all_selected_books_info_result) {
////            if (get_all_selected_books_info_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_all_selected_books_info_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_all_selected_books_info_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_all_selected_books_info_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_all_selected_books_info_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_all_selected_books_info_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_all_selected_books_info_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_all_selected_books_info_result get_all_selected_books_info_result) {
////            if (!getClass().equals(get_all_selected_books_info_result.getClass())) {
////                return getClass().getName().compareTo(get_all_selected_books_info_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_all_selected_books_info_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_all_selected_books_info_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_all_selected_books_info_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_all_selected_books_info_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_all_selected_books_info_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_all_selected_books_info_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_all_selected_books_info_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_book_last_updated_time_args implements Serializable, Cloneable, Comparable<get_book_last_updated_time_args>, C2116f<get_book_last_updated_time_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b BOOK_INFO_FIELD_DESC = new C2097b("book_info", JceStruct.ZERO_TAG, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_book_last_updated_time_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBUserTailoredBookInfo book_info;
////
////        public enum _Fields implements C2124m {
////            BOOK_INFO(1, "book_info");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return BOOK_INFO;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_book_last_updated_time_argsStandardScheme extends C2110c<get_book_last_updated_time_args> {
////            private get_book_last_updated_time_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_book_last_updated_time_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_book_last_updated_time_args get_book_last_updated_time_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_book_last_updated_time_args.book_info = new BBUserTailoredBookInfo();
////                                    get_book_last_updated_time_args.book_info.read(fVar);
////                                    get_book_last_updated_time_args.setBook_infoIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_book_last_updated_time_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_book_last_updated_time_args get_book_last_updated_time_args) {
////                get_book_last_updated_time_args.validate();
////                get_book_last_updated_time_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_book_last_updated_time_args.book_info != null) {
////                    fVar.mo18496a(get_book_last_updated_time_args.BOOK_INFO_FIELD_DESC);
////                    get_book_last_updated_time_args.book_info.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_book_last_updated_time_argsStandardSchemeFactory implements C2109b {
////            private get_book_last_updated_time_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_book_last_updated_time_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_book_last_updated_time_argsStandardScheme getScheme() {
////                return new get_book_last_updated_time_argsStandardScheme(null);
////            }
////        }
////
////        class get_book_last_updated_time_argsTupleScheme extends C2111d<get_book_last_updated_time_args> {
////            private get_book_last_updated_time_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_book_last_updated_time_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_book_last_updated_time_args get_book_last_updated_time_args) {
////                get_book_last_updated_time_args.book_info.write((C2106l) fVar);
////            }
////
////            public void read(C2100f fVar, get_book_last_updated_time_args get_book_last_updated_time_args) {
////                C2106l lVar = (C2106l) fVar;
////                get_book_last_updated_time_args.book_info = new BBUserTailoredBookInfo();
////                get_book_last_updated_time_args.book_info.read(lVar);
////                get_book_last_updated_time_args.setBook_infoIsSet(true);
////            }
////        }
////
////        class get_book_last_updated_time_argsTupleSchemeFactory implements C2109b {
////            private get_book_last_updated_time_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_book_last_updated_time_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_book_last_updated_time_argsTupleScheme getScheme() {
////                return new get_book_last_updated_time_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_book_last_updated_time_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_book_last_updated_time_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.BOOK_INFO, new C2091a("book_info", 1, new C2095e(BBUserTailoredBookInfo.class)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_book_last_updated_time_args.class, metaDataMap);
////        }
////
////        public get_book_last_updated_time_args() {
////        }
////
////        public get_book_last_updated_time_args(BBUserTailoredBookInfo bBUserTailoredBookInfo) {
////            this();
////            this.book_info = bBUserTailoredBookInfo;
////        }
////
////        public get_book_last_updated_time_args(get_book_last_updated_time_args get_book_last_updated_time_args) {
////            if (get_book_last_updated_time_args.isSetBook_info()) {
////                this.book_info = new BBUserTailoredBookInfo(get_book_last_updated_time_args.book_info);
////            }
////        }
////
////        public get_book_last_updated_time_args deepCopy() {
////            return new get_book_last_updated_time_args(this);
////        }
////
////        public void clear() {
////            this.book_info = null;
////        }
////
////        public BBUserTailoredBookInfo getBook_info() {
////            return this.book_info;
////        }
////
////        public get_book_last_updated_time_args setBook_info(BBUserTailoredBookInfo bBUserTailoredBookInfo) {
////            this.book_info = bBUserTailoredBookInfo;
////            return this;
////        }
////
////        public void unsetBook_info() {
////            this.book_info = null;
////        }
////
////        public boolean isSetBook_info() {
////            return this.book_info != null;
////        }
////
////        public void setBook_infoIsSet(boolean z) {
////            if (!z) {
////                this.book_info = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case BOOK_INFO:
////                    if (obj == null) {
////                        unsetBook_info();
////                        return;
////                    } else {
////                        setBook_info((BBUserTailoredBookInfo) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case BOOK_INFO:
////                    return getBook_info();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case BOOK_INFO:
////                    return isSetBook_info();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_book_last_updated_time_args)) {
////                return equals((get_book_last_updated_time_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_book_last_updated_time_args get_book_last_updated_time_args) {
////            if (get_book_last_updated_time_args == null) {
////                return false;
////            }
////            boolean isSetBook_info = isSetBook_info();
////            boolean isSetBook_info2 = get_book_last_updated_time_args.isSetBook_info();
////            if ((isSetBook_info || isSetBook_info2) && (!isSetBook_info || !isSetBook_info2 || !this.book_info.equals(get_book_last_updated_time_args.book_info))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_book_last_updated_time_args get_book_last_updated_time_args) {
////            if (!getClass().equals(get_book_last_updated_time_args.getClass())) {
////                return getClass().getName().compareTo(get_book_last_updated_time_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetBook_info()).compareTo(Boolean.valueOf(get_book_last_updated_time_args.isSetBook_info()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetBook_info()) {
////                int a = C2121h.m5524a((Comparable) this.book_info, (Comparable) get_book_last_updated_time_args.book_info);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_book_last_updated_time_args(");
////            sb.append("book_info:");
////            if (this.book_info == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.book_info);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.book_info == null) {
////                throw new C2101g("Required field 'book_info' was not present! Struct: " + toString());
////            } else if (this.book_info != null) {
////                this.book_info.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_book_last_updated_time_result implements Serializable, Cloneable, Comparable<get_book_last_updated_time_result>, C2116f<get_book_last_updated_time_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_book_last_updated_time_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBUserTailoredBookInfo success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_book_last_updated_time_resultStandardScheme extends C2110c<get_book_last_updated_time_result> {
////            private get_book_last_updated_time_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_book_last_updated_time_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_book_last_updated_time_result get_book_last_updated_time_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_book_last_updated_time_result.success = new BBUserTailoredBookInfo();
////                                    get_book_last_updated_time_result.success.read(fVar);
////                                    get_book_last_updated_time_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_book_last_updated_time_result.sysException = new BESystemException();
////                                    get_book_last_updated_time_result.sysException.read(fVar);
////                                    get_book_last_updated_time_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_book_last_updated_time_result.logicException = new BELogicException();
////                                    get_book_last_updated_time_result.logicException.read(fVar);
////                                    get_book_last_updated_time_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_book_last_updated_time_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_book_last_updated_time_result get_book_last_updated_time_result) {
////                get_book_last_updated_time_result.validate();
////                get_book_last_updated_time_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_book_last_updated_time_result.success != null) {
////                    fVar.mo18496a(get_book_last_updated_time_result.SUCCESS_FIELD_DESC);
////                    get_book_last_updated_time_result.success.write(fVar);
////                }
////                if (get_book_last_updated_time_result.sysException != null) {
////                    fVar.mo18496a(get_book_last_updated_time_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_book_last_updated_time_result.sysException.write(fVar);
////                }
////                if (get_book_last_updated_time_result.logicException != null) {
////                    fVar.mo18496a(get_book_last_updated_time_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_book_last_updated_time_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_book_last_updated_time_resultStandardSchemeFactory implements C2109b {
////            private get_book_last_updated_time_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_book_last_updated_time_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_book_last_updated_time_resultStandardScheme getScheme() {
////                return new get_book_last_updated_time_resultStandardScheme(null);
////            }
////        }
////
////        class get_book_last_updated_time_resultTupleScheme extends C2111d<get_book_last_updated_time_result> {
////            private get_book_last_updated_time_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_book_last_updated_time_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_book_last_updated_time_result get_book_last_updated_time_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_book_last_updated_time_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_book_last_updated_time_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_book_last_updated_time_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_book_last_updated_time_result.isSetSuccess()) {
////                    get_book_last_updated_time_result.success.write(lVar);
////                }
////                if (get_book_last_updated_time_result.isSetSysException()) {
////                    get_book_last_updated_time_result.sysException.write(lVar);
////                }
////                if (get_book_last_updated_time_result.isSetLogicException()) {
////                    get_book_last_updated_time_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_book_last_updated_time_result get_book_last_updated_time_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    get_book_last_updated_time_result.success = new BBUserTailoredBookInfo();
////                    get_book_last_updated_time_result.success.read(lVar);
////                    get_book_last_updated_time_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_book_last_updated_time_result.sysException = new BESystemException();
////                    get_book_last_updated_time_result.sysException.read(lVar);
////                    get_book_last_updated_time_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_book_last_updated_time_result.logicException = new BELogicException();
////                    get_book_last_updated_time_result.logicException.read(lVar);
////                    get_book_last_updated_time_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_book_last_updated_time_resultTupleSchemeFactory implements C2109b {
////            private get_book_last_updated_time_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_book_last_updated_time_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_book_last_updated_time_resultTupleScheme getScheme() {
////                return new get_book_last_updated_time_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_book_last_updated_time_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_book_last_updated_time_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBUserTailoredBookInfo.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_book_last_updated_time_result.class, metaDataMap);
////        }
////
////        public get_book_last_updated_time_result() {
////        }
////
////        public get_book_last_updated_time_result(BBUserTailoredBookInfo bBUserTailoredBookInfo, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBUserTailoredBookInfo;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_book_last_updated_time_result(get_book_last_updated_time_result get_book_last_updated_time_result) {
////            if (get_book_last_updated_time_result.isSetSuccess()) {
////                this.success = new BBUserTailoredBookInfo(get_book_last_updated_time_result.success);
////            }
////            if (get_book_last_updated_time_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_book_last_updated_time_result.sysException);
////            }
////            if (get_book_last_updated_time_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_book_last_updated_time_result.logicException);
////            }
////        }
////
////        public get_book_last_updated_time_result deepCopy() {
////            return new get_book_last_updated_time_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBUserTailoredBookInfo getSuccess() {
////            return this.success;
////        }
////
////        public get_book_last_updated_time_result setSuccess(BBUserTailoredBookInfo bBUserTailoredBookInfo) {
////            this.success = bBUserTailoredBookInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_book_last_updated_time_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_book_last_updated_time_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBUserTailoredBookInfo) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_book_last_updated_time_result)) {
////                return equals((get_book_last_updated_time_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_book_last_updated_time_result get_book_last_updated_time_result) {
////            if (get_book_last_updated_time_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_book_last_updated_time_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_book_last_updated_time_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_book_last_updated_time_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_book_last_updated_time_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_book_last_updated_time_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_book_last_updated_time_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_book_last_updated_time_result get_book_last_updated_time_result) {
////            if (!getClass().equals(get_book_last_updated_time_result.getClass())) {
////                return getClass().getName().compareTo(get_book_last_updated_time_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_book_last_updated_time_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) get_book_last_updated_time_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_book_last_updated_time_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_book_last_updated_time_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_book_last_updated_time_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_book_last_updated_time_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_book_last_updated_time_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_daka_share_info_args implements Serializable, Cloneable, Comparable<get_daka_share_info_args>, C2116f<get_daka_share_info_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_daka_share_info_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_daka_share_info_argsStandardScheme extends C2110c<get_daka_share_info_args> {
////            private get_daka_share_info_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_daka_share_info_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_daka_share_info_args get_daka_share_info_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_daka_share_info_args.word_level_id = fVar.mo18513n();
////                                    get_daka_share_info_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!get_daka_share_info_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        get_daka_share_info_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_daka_share_info_args get_daka_share_info_args) {
////                get_daka_share_info_args.validate();
////                get_daka_share_info_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(get_daka_share_info_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(get_daka_share_info_args.word_level_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_daka_share_info_argsStandardSchemeFactory implements C2109b {
////            private get_daka_share_info_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_daka_share_info_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_daka_share_info_argsStandardScheme getScheme() {
////                return new get_daka_share_info_argsStandardScheme(null);
////            }
////        }
////
////        class get_daka_share_info_argsTupleScheme extends C2111d<get_daka_share_info_args> {
////            private get_daka_share_info_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_daka_share_info_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_daka_share_info_args get_daka_share_info_args) {
////                ((C2106l) fVar).mo18493a(get_daka_share_info_args.word_level_id);
////            }
////
////            public void read(C2100f fVar, get_daka_share_info_args get_daka_share_info_args) {
////                get_daka_share_info_args.word_level_id = ((C2106l) fVar).mo18513n();
////                get_daka_share_info_args.setWord_level_idIsSet(true);
////            }
////        }
////
////        class get_daka_share_info_argsTupleSchemeFactory implements C2109b {
////            private get_daka_share_info_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_daka_share_info_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_daka_share_info_argsTupleScheme getScheme() {
////                return new get_daka_share_info_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_daka_share_info_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_daka_share_info_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_daka_share_info_args.class, metaDataMap);
////        }
////
////        public get_daka_share_info_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public get_daka_share_info_args(int i) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////        }
////
////        public get_daka_share_info_args(get_daka_share_info_args get_daka_share_info_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = get_daka_share_info_args.__isset_bitfield;
////            this.word_level_id = get_daka_share_info_args.word_level_id;
////        }
////
////        public get_daka_share_info_args deepCopy() {
////            return new get_daka_share_info_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public get_daka_share_info_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_daka_share_info_args)) {
////                return equals((get_daka_share_info_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_daka_share_info_args get_daka_share_info_args) {
////            if (get_daka_share_info_args != null && this.word_level_id == get_daka_share_info_args.word_level_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_daka_share_info_args get_daka_share_info_args) {
////            if (!getClass().equals(get_daka_share_info_args.getClass())) {
////                return getClass().getName().compareTo(get_daka_share_info_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(get_daka_share_info_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, get_daka_share_info_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_daka_share_info_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_daka_share_info_result implements Serializable, Cloneable, Comparable<get_daka_share_info_result>, C2116f<get_daka_share_info_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_daka_share_info_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBDakaShowInfo success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_daka_share_info_resultStandardScheme extends C2110c<get_daka_share_info_result> {
////            private get_daka_share_info_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_daka_share_info_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_daka_share_info_result get_daka_share_info_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_daka_share_info_result.success = new BBDakaShowInfo();
////                                    get_daka_share_info_result.success.read(fVar);
////                                    get_daka_share_info_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_daka_share_info_result.sysException = new BESystemException();
////                                    get_daka_share_info_result.sysException.read(fVar);
////                                    get_daka_share_info_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_daka_share_info_result.logicException = new BELogicException();
////                                    get_daka_share_info_result.logicException.read(fVar);
////                                    get_daka_share_info_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_daka_share_info_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_daka_share_info_result get_daka_share_info_result) {
////                get_daka_share_info_result.validate();
////                get_daka_share_info_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_daka_share_info_result.success != null) {
////                    fVar.mo18496a(get_daka_share_info_result.SUCCESS_FIELD_DESC);
////                    get_daka_share_info_result.success.write(fVar);
////                }
////                if (get_daka_share_info_result.sysException != null) {
////                    fVar.mo18496a(get_daka_share_info_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_daka_share_info_result.sysException.write(fVar);
////                }
////                if (get_daka_share_info_result.logicException != null) {
////                    fVar.mo18496a(get_daka_share_info_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_daka_share_info_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_daka_share_info_resultStandardSchemeFactory implements C2109b {
////            private get_daka_share_info_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_daka_share_info_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_daka_share_info_resultStandardScheme getScheme() {
////                return new get_daka_share_info_resultStandardScheme(null);
////            }
////        }
////
////        class get_daka_share_info_resultTupleScheme extends C2111d<get_daka_share_info_result> {
////            private get_daka_share_info_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_daka_share_info_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_daka_share_info_result get_daka_share_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_daka_share_info_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_daka_share_info_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_daka_share_info_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_daka_share_info_result.isSetSuccess()) {
////                    get_daka_share_info_result.success.write(lVar);
////                }
////                if (get_daka_share_info_result.isSetSysException()) {
////                    get_daka_share_info_result.sysException.write(lVar);
////                }
////                if (get_daka_share_info_result.isSetLogicException()) {
////                    get_daka_share_info_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_daka_share_info_result get_daka_share_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    get_daka_share_info_result.success = new BBDakaShowInfo();
////                    get_daka_share_info_result.success.read(lVar);
////                    get_daka_share_info_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_daka_share_info_result.sysException = new BESystemException();
////                    get_daka_share_info_result.sysException.read(lVar);
////                    get_daka_share_info_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_daka_share_info_result.logicException = new BELogicException();
////                    get_daka_share_info_result.logicException.read(lVar);
////                    get_daka_share_info_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_daka_share_info_resultTupleSchemeFactory implements C2109b {
////            private get_daka_share_info_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_daka_share_info_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_daka_share_info_resultTupleScheme getScheme() {
////                return new get_daka_share_info_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_daka_share_info_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_daka_share_info_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBDakaShowInfo.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_daka_share_info_result.class, metaDataMap);
////        }
////
////        public get_daka_share_info_result() {
////        }
////
////        public get_daka_share_info_result(BBDakaShowInfo bBDakaShowInfo, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBDakaShowInfo;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_daka_share_info_result(get_daka_share_info_result get_daka_share_info_result) {
////            if (get_daka_share_info_result.isSetSuccess()) {
////                this.success = new BBDakaShowInfo(get_daka_share_info_result.success);
////            }
////            if (get_daka_share_info_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_daka_share_info_result.sysException);
////            }
////            if (get_daka_share_info_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_daka_share_info_result.logicException);
////            }
////        }
////
////        public get_daka_share_info_result deepCopy() {
////            return new get_daka_share_info_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBDakaShowInfo getSuccess() {
////            return this.success;
////        }
////
////        public get_daka_share_info_result setSuccess(BBDakaShowInfo bBDakaShowInfo) {
////            this.success = bBDakaShowInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_daka_share_info_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_daka_share_info_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBDakaShowInfo) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_daka_share_info_result)) {
////                return equals((get_daka_share_info_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_daka_share_info_result get_daka_share_info_result) {
////            if (get_daka_share_info_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_daka_share_info_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_daka_share_info_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_daka_share_info_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_daka_share_info_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_daka_share_info_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_daka_share_info_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_daka_share_info_result get_daka_share_info_result) {
////            if (!getClass().equals(get_daka_share_info_result.getClass())) {
////                return getClass().getName().compareTo(get_daka_share_info_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_daka_share_info_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) get_daka_share_info_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_daka_share_info_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_daka_share_info_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_daka_share_info_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_daka_share_info_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_daka_share_info_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_learned_words_list_args implements Serializable, Cloneable, Comparable<get_learned_words_list_args>, C2116f<get_learned_words_list_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_learned_words_list_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_learned_words_list_argsStandardScheme extends C2110c<get_learned_words_list_args> {
////            private get_learned_words_list_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_learned_words_list_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_learned_words_list_args get_learned_words_list_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_learned_words_list_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_learned_words_list_args get_learned_words_list_args) {
////                get_learned_words_list_args.validate();
////                get_learned_words_list_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_learned_words_list_argsStandardSchemeFactory implements C2109b {
////            private get_learned_words_list_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_learned_words_list_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_learned_words_list_argsStandardScheme getScheme() {
////                return new get_learned_words_list_argsStandardScheme(null);
////            }
////        }
////
////        class get_learned_words_list_argsTupleScheme extends C2111d<get_learned_words_list_args> {
////            private get_learned_words_list_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_learned_words_list_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_learned_words_list_args get_learned_words_list_args) {
////            }
////
////            public void read(C2100f fVar, get_learned_words_list_args get_learned_words_list_args) {
////            }
////        }
////
////        class get_learned_words_list_argsTupleSchemeFactory implements C2109b {
////            private get_learned_words_list_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_learned_words_list_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_learned_words_list_argsTupleScheme getScheme() {
////                return new get_learned_words_list_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_learned_words_list_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_learned_words_list_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_learned_words_list_args.class, metaDataMap);
////        }
////
////        public get_learned_words_list_args() {
////        }
////
////        public get_learned_words_list_args(get_learned_words_list_args get_learned_words_list_args) {
////        }
////
////        public get_learned_words_list_args deepCopy() {
////            return new get_learned_words_list_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2464x4d82c975;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2464x4d82c975;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2464x4d82c975;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_learned_words_list_args)) {
////                return equals((get_learned_words_list_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_learned_words_list_args get_learned_words_list_args) {
////            if (get_learned_words_list_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_learned_words_list_args get_learned_words_list_args) {
////            if (!getClass().equals(get_learned_words_list_args.getClass())) {
////                return getClass().getName().compareTo(get_learned_words_list_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_learned_words_list_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_learned_words_list_result implements Serializable, Cloneable, Comparable<get_learned_words_list_result>, C2116f<get_learned_words_list_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_learned_words_list_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBTopicInfo> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_learned_words_list_resultStandardScheme extends C2110c<get_learned_words_list_result> {
////            private get_learned_words_list_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_learned_words_list_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_learned_words_list_result get_learned_words_list_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_learned_words_list_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBTopicInfo bBTopicInfo = new BBTopicInfo();
////                                        bBTopicInfo.read(fVar);
////                                        get_learned_words_list_result.success.add(bBTopicInfo);
////                                    }
////                                    get_learned_words_list_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_learned_words_list_result.sysException = new BESystemException();
////                                    get_learned_words_list_result.sysException.read(fVar);
////                                    get_learned_words_list_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_learned_words_list_result.logicException = new BELogicException();
////                                    get_learned_words_list_result.logicException.read(fVar);
////                                    get_learned_words_list_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_learned_words_list_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_learned_words_list_result get_learned_words_list_result) {
////                get_learned_words_list_result.validate();
////                get_learned_words_list_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_learned_words_list_result.success != null) {
////                    fVar.mo18496a(get_learned_words_list_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_learned_words_list_result.success.size()));
////                    for (BBTopicInfo write : get_learned_words_list_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_learned_words_list_result.sysException != null) {
////                    fVar.mo18496a(get_learned_words_list_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_learned_words_list_result.sysException.write(fVar);
////                }
////                if (get_learned_words_list_result.logicException != null) {
////                    fVar.mo18496a(get_learned_words_list_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_learned_words_list_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_learned_words_list_resultStandardSchemeFactory implements C2109b {
////            private get_learned_words_list_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_learned_words_list_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_learned_words_list_resultStandardScheme getScheme() {
////                return new get_learned_words_list_resultStandardScheme(null);
////            }
////        }
////
////        class get_learned_words_list_resultTupleScheme extends C2111d<get_learned_words_list_result> {
////            private get_learned_words_list_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_learned_words_list_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_learned_words_list_result get_learned_words_list_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_learned_words_list_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_learned_words_list_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_learned_words_list_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_learned_words_list_result.isSetSuccess()) {
////                    lVar.mo18493a(get_learned_words_list_result.success.size());
////                    for (BBTopicInfo write : get_learned_words_list_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_learned_words_list_result.isSetSysException()) {
////                    get_learned_words_list_result.sysException.write(lVar);
////                }
////                if (get_learned_words_list_result.isSetLogicException()) {
////                    get_learned_words_list_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_learned_words_list_result get_learned_words_list_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_learned_words_list_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBTopicInfo bBTopicInfo = new BBTopicInfo();
////                        bBTopicInfo.read(lVar);
////                        get_learned_words_list_result.success.add(bBTopicInfo);
////                    }
////                    get_learned_words_list_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_learned_words_list_result.sysException = new BESystemException();
////                    get_learned_words_list_result.sysException.read(lVar);
////                    get_learned_words_list_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_learned_words_list_result.logicException = new BELogicException();
////                    get_learned_words_list_result.logicException.read(lVar);
////                    get_learned_words_list_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_learned_words_list_resultTupleSchemeFactory implements C2109b {
////            private get_learned_words_list_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_learned_words_list_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_learned_words_list_resultTupleScheme getScheme() {
////                return new get_learned_words_list_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_learned_words_list_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_learned_words_list_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBTopicInfo.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_learned_words_list_result.class, metaDataMap);
////        }
////
////        public get_learned_words_list_result() {
////        }
////
////        public get_learned_words_list_result(List<BBTopicInfo> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_learned_words_list_result(get_learned_words_list_result get_learned_words_list_result) {
////            if (get_learned_words_list_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_learned_words_list_result.success.size());
////                for (BBTopicInfo bBTopicInfo : get_learned_words_list_result.success) {
////                    arrayList.add(new BBTopicInfo(bBTopicInfo));
////                }
////                this.success = arrayList;
////            }
////            if (get_learned_words_list_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_learned_words_list_result.sysException);
////            }
////            if (get_learned_words_list_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_learned_words_list_result.logicException);
////            }
////        }
////
////        public get_learned_words_list_result deepCopy() {
////            return new get_learned_words_list_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBTopicInfo> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBTopicInfo bBTopicInfo) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBTopicInfo);
////        }
////
////        public List<BBTopicInfo> getSuccess() {
////            return this.success;
////        }
////
////        public get_learned_words_list_result setSuccess(List<BBTopicInfo> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_learned_words_list_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_learned_words_list_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_learned_words_list_result)) {
////                return equals((get_learned_words_list_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_learned_words_list_result get_learned_words_list_result) {
////            if (get_learned_words_list_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_learned_words_list_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_learned_words_list_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_learned_words_list_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_learned_words_list_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_learned_words_list_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_learned_words_list_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_learned_words_list_result get_learned_words_list_result) {
////            if (!getClass().equals(get_learned_words_list_result.getClass())) {
////                return getClass().getName().compareTo(get_learned_words_list_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_learned_words_list_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_learned_words_list_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_learned_words_list_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_learned_words_list_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_learned_words_list_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_learned_words_list_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_learned_words_list_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_like_times_args implements Serializable, Cloneable, Comparable<get_like_times_args>, C2116f<get_like_times_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b NOTIFICATION_IDS_FIELD_DESC = new C2097b("notification_ids", 15, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_like_times_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public List<Integer> notification_ids;
////
////        public enum _Fields implements C2124m {
////            NOTIFICATION_IDS(1, "notification_ids");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return NOTIFICATION_IDS;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_like_times_argsStandardScheme extends C2110c<get_like_times_args> {
////            private get_like_times_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_like_times_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_like_times_args get_like_times_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_like_times_args.notification_ids = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        get_like_times_args.notification_ids.add(Integer.valueOf(fVar.mo18513n()));
////                                    }
////                                    get_like_times_args.setNotification_idsIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_like_times_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_like_times_args get_like_times_args) {
////                get_like_times_args.validate();
////                get_like_times_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_like_times_args.notification_ids != null) {
////                    fVar.mo18496a(get_like_times_args.NOTIFICATION_IDS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(8, get_like_times_args.notification_ids.size()));
////                    for (Integer intValue : get_like_times_args.notification_ids) {
////                        fVar.mo18493a(intValue.intValue());
////                    }
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_like_times_argsStandardSchemeFactory implements C2109b {
////            private get_like_times_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_like_times_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_like_times_argsStandardScheme getScheme() {
////                return new get_like_times_argsStandardScheme(null);
////            }
////        }
////
////        class get_like_times_argsTupleScheme extends C2111d<get_like_times_args> {
////            private get_like_times_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_like_times_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_like_times_args get_like_times_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(get_like_times_args.notification_ids.size());
////                for (Integer intValue : get_like_times_args.notification_ids) {
////                    lVar.mo18493a(intValue.intValue());
////                }
////            }
////
////            public void read(C2100f fVar, get_like_times_args get_like_times_args) {
////                C2106l lVar = (C2106l) fVar;
////                C2098c cVar = new C2098c(8, lVar.mo18513n());
////                get_like_times_args.notification_ids = new ArrayList(cVar.f5838b);
////                for (int i = 0; i < cVar.f5838b; i++) {
////                    get_like_times_args.notification_ids.add(Integer.valueOf(lVar.mo18513n()));
////                }
////                get_like_times_args.setNotification_idsIsSet(true);
////            }
////        }
////
////        class get_like_times_argsTupleSchemeFactory implements C2109b {
////            private get_like_times_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_like_times_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_like_times_argsTupleScheme getScheme() {
////                return new get_like_times_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_like_times_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_like_times_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.NOTIFICATION_IDS, new C2091a("notification_ids", 1, new C2093c(new C2092b(8, 0))));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_like_times_args.class, metaDataMap);
////        }
////
////        public get_like_times_args() {
////        }
////
////        public get_like_times_args(List<Integer> list) {
////            this();
////            this.notification_ids = list;
////        }
////
////        public get_like_times_args(get_like_times_args get_like_times_args) {
////            if (get_like_times_args.isSetNotification_ids()) {
////                this.notification_ids = new ArrayList(get_like_times_args.notification_ids);
////            }
////        }
////
////        public get_like_times_args deepCopy() {
////            return new get_like_times_args(this);
////        }
////
////        public void clear() {
////            this.notification_ids = null;
////        }
////
////        public int getNotification_idsSize() {
////            if (this.notification_ids == null) {
////                return 0;
////            }
////            return this.notification_ids.size();
////        }
////
////        public Iterator<Integer> getNotification_idsIterator() {
////            if (this.notification_ids == null) {
////                return null;
////            }
////            return this.notification_ids.iterator();
////        }
////
////        public void addToNotification_ids(int i) {
////            if (this.notification_ids == null) {
////                this.notification_ids = new ArrayList();
////            }
////            this.notification_ids.add(Integer.valueOf(i));
////        }
////
////        public List<Integer> getNotification_ids() {
////            return this.notification_ids;
////        }
////
////        public get_like_times_args setNotification_ids(List<Integer> list) {
////            this.notification_ids = list;
////            return this;
////        }
////
////        public void unsetNotification_ids() {
////            this.notification_ids = null;
////        }
////
////        public boolean isSetNotification_ids() {
////            return this.notification_ids != null;
////        }
////
////        public void setNotification_idsIsSet(boolean z) {
////            if (!z) {
////                this.notification_ids = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case NOTIFICATION_IDS:
////                    if (obj == null) {
////                        unsetNotification_ids();
////                        return;
////                    } else {
////                        setNotification_ids((List) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case NOTIFICATION_IDS:
////                    return getNotification_ids();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case NOTIFICATION_IDS:
////                    return isSetNotification_ids();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_like_times_args)) {
////                return equals((get_like_times_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_like_times_args get_like_times_args) {
////            if (get_like_times_args == null) {
////                return false;
////            }
////            boolean isSetNotification_ids = isSetNotification_ids();
////            boolean isSetNotification_ids2 = get_like_times_args.isSetNotification_ids();
////            if ((isSetNotification_ids || isSetNotification_ids2) && (!isSetNotification_ids || !isSetNotification_ids2 || !this.notification_ids.equals(get_like_times_args.notification_ids))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_like_times_args get_like_times_args) {
////            if (!getClass().equals(get_like_times_args.getClass())) {
////                return getClass().getName().compareTo(get_like_times_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetNotification_ids()).compareTo(Boolean.valueOf(get_like_times_args.isSetNotification_ids()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetNotification_ids()) {
////                int a = C2121h.m5526a((List) this.notification_ids, (List) get_like_times_args.notification_ids);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_like_times_args(");
////            sb.append("notification_ids:");
////            if (this.notification_ids == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.notification_ids);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.notification_ids == null) {
////                throw new C2101g("Required field 'notification_ids' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_like_times_result implements Serializable, Cloneable, Comparable<get_like_times_result>, C2116f<get_like_times_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_like_times_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.SIMPLE_LIST, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public Map<Integer, Integer> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_like_times_resultStandardScheme extends C2110c<get_like_times_result> {
////            private get_like_times_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_like_times_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_like_times_result get_like_times_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 13) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2099d h = fVar.mo18507h();
////                                    get_like_times_result.success = new HashMap(h.f5841c * 2);
////                                    for (int i = 0; i < h.f5841c; i++) {
////                                        get_like_times_result.success.put(Integer.valueOf(fVar.mo18513n()), Integer.valueOf(fVar.mo18513n()));
////                                    }
////                                    get_like_times_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_like_times_result.sysException = new BESystemException();
////                                    get_like_times_result.sysException.read(fVar);
////                                    get_like_times_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_like_times_result.logicException = new BELogicException();
////                                    get_like_times_result.logicException.read(fVar);
////                                    get_like_times_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_like_times_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_like_times_result get_like_times_result) {
////                get_like_times_result.validate();
////                get_like_times_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_like_times_result.success != null) {
////                    fVar.mo18496a(get_like_times_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18498a(new C2099d(8, 8, get_like_times_result.success.size()));
////                    for (Entry entry : get_like_times_result.success.entrySet()) {
////                        fVar.mo18493a(((Integer) entry.getKey()).intValue());
////                        fVar.mo18493a(((Integer) entry.getValue()).intValue());
////                    }
////                }
////                if (get_like_times_result.sysException != null) {
////                    fVar.mo18496a(get_like_times_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_like_times_result.sysException.write(fVar);
////                }
////                if (get_like_times_result.logicException != null) {
////                    fVar.mo18496a(get_like_times_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_like_times_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_like_times_resultStandardSchemeFactory implements C2109b {
////            private get_like_times_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_like_times_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_like_times_resultStandardScheme getScheme() {
////                return new get_like_times_resultStandardScheme(null);
////            }
////        }
////
////        class get_like_times_resultTupleScheme extends C2111d<get_like_times_result> {
////            private get_like_times_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_like_times_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_like_times_result get_like_times_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_like_times_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_like_times_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_like_times_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_like_times_result.isSetSuccess()) {
////                    lVar.mo18493a(get_like_times_result.success.size());
////                    for (Entry entry : get_like_times_result.success.entrySet()) {
////                        lVar.mo18493a(((Integer) entry.getKey()).intValue());
////                        lVar.mo18493a(((Integer) entry.getValue()).intValue());
////                    }
////                }
////                if (get_like_times_result.isSetSysException()) {
////                    get_like_times_result.sysException.write(lVar);
////                }
////                if (get_like_times_result.isSetLogicException()) {
////                    get_like_times_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_like_times_result get_like_times_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2099d dVar = new C2099d(8, 8, lVar.mo18513n());
////                    get_like_times_result.success = new HashMap(dVar.f5841c * 2);
////                    for (int i = 0; i < dVar.f5841c; i++) {
////                        get_like_times_result.success.put(Integer.valueOf(lVar.mo18513n()), Integer.valueOf(lVar.mo18513n()));
////                    }
////                    get_like_times_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_like_times_result.sysException = new BESystemException();
////                    get_like_times_result.sysException.read(lVar);
////                    get_like_times_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_like_times_result.logicException = new BELogicException();
////                    get_like_times_result.logicException.read(lVar);
////                    get_like_times_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_like_times_resultTupleSchemeFactory implements C2109b {
////            private get_like_times_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_like_times_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_like_times_resultTupleScheme getScheme() {
////                return new get_like_times_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_like_times_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_like_times_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2094d(new C2092b(8, 0), new C2092b(8, 0))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_like_times_result.class, metaDataMap);
////        }
////
////        public get_like_times_result() {
////        }
////
////        public get_like_times_result(Map<Integer, Integer> map, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = map;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_like_times_result(get_like_times_result get_like_times_result) {
////            if (get_like_times_result.isSetSuccess()) {
////                this.success = new HashMap(get_like_times_result.success);
////            }
////            if (get_like_times_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_like_times_result.sysException);
////            }
////            if (get_like_times_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_like_times_result.logicException);
////            }
////        }
////
////        public get_like_times_result deepCopy() {
////            return new get_like_times_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public void putToSuccess(int i, int i2) {
////            if (this.success == null) {
////                this.success = new HashMap();
////            }
////            this.success.put(Integer.valueOf(i), Integer.valueOf(i2));
////        }
////
////        public Map<Integer, Integer> getSuccess() {
////            return this.success;
////        }
////
////        public get_like_times_result setSuccess(Map<Integer, Integer> map) {
////            this.success = map;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_like_times_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_like_times_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((Map) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_like_times_result)) {
////                return equals((get_like_times_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_like_times_result get_like_times_result) {
////            if (get_like_times_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_like_times_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_like_times_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_like_times_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_like_times_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_like_times_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_like_times_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_like_times_result get_like_times_result) {
////            if (!getClass().equals(get_like_times_result.getClass())) {
////                return getClass().getName().compareTo(get_like_times_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_like_times_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5527a((Map) this.success, (Map) get_like_times_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_like_times_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_like_times_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_like_times_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_like_times_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_like_times_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_miscs_args implements Serializable, Cloneable, Comparable<get_miscs_args>, C2116f<get_miscs_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_miscs_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_miscs_argsStandardScheme extends C2110c<get_miscs_args> {
////            private get_miscs_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_miscs_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_miscs_args get_miscs_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_miscs_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_miscs_args get_miscs_args) {
////                get_miscs_args.validate();
////                get_miscs_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_miscs_argsStandardSchemeFactory implements C2109b {
////            private get_miscs_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_miscs_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_miscs_argsStandardScheme getScheme() {
////                return new get_miscs_argsStandardScheme(null);
////            }
////        }
////
////        class get_miscs_argsTupleScheme extends C2111d<get_miscs_args> {
////            private get_miscs_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_miscs_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_miscs_args get_miscs_args) {
////            }
////
////            public void read(C2100f fVar, get_miscs_args get_miscs_args) {
////            }
////        }
////
////        class get_miscs_argsTupleSchemeFactory implements C2109b {
////            private get_miscs_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_miscs_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_miscs_argsTupleScheme getScheme() {
////                return new get_miscs_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_miscs_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_miscs_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_miscs_args.class, metaDataMap);
////        }
////
////        public get_miscs_args() {
////        }
////
////        public get_miscs_args(get_miscs_args get_miscs_args) {
////        }
////
////        public get_miscs_args deepCopy() {
////            return new get_miscs_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2468x21111a94;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2468x21111a94;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2468x21111a94;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_miscs_args)) {
////                return equals((get_miscs_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_miscs_args get_miscs_args) {
////            if (get_miscs_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_miscs_args get_miscs_args) {
////            if (!getClass().equals(get_miscs_args.getClass())) {
////                return getClass().getName().compareTo(get_miscs_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_miscs_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_miscs_result implements Serializable, Cloneable, Comparable<get_miscs_result>, C2116f<get_miscs_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_miscs_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBMiscInfo> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_miscs_resultStandardScheme extends C2110c<get_miscs_result> {
////            private get_miscs_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_miscs_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_miscs_result get_miscs_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_miscs_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBMiscInfo bBMiscInfo = new BBMiscInfo();
////                                        bBMiscInfo.read(fVar);
////                                        get_miscs_result.success.add(bBMiscInfo);
////                                    }
////                                    get_miscs_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_miscs_result.sysException = new BESystemException();
////                                    get_miscs_result.sysException.read(fVar);
////                                    get_miscs_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_miscs_result.logicException = new BELogicException();
////                                    get_miscs_result.logicException.read(fVar);
////                                    get_miscs_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_miscs_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_miscs_result get_miscs_result) {
////                get_miscs_result.validate();
////                get_miscs_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_miscs_result.success != null) {
////                    fVar.mo18496a(get_miscs_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_miscs_result.success.size()));
////                    for (BBMiscInfo write : get_miscs_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_miscs_result.sysException != null) {
////                    fVar.mo18496a(get_miscs_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_miscs_result.sysException.write(fVar);
////                }
////                if (get_miscs_result.logicException != null) {
////                    fVar.mo18496a(get_miscs_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_miscs_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_miscs_resultStandardSchemeFactory implements C2109b {
////            private get_miscs_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_miscs_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_miscs_resultStandardScheme getScheme() {
////                return new get_miscs_resultStandardScheme(null);
////            }
////        }
////
////        class get_miscs_resultTupleScheme extends C2111d<get_miscs_result> {
////            private get_miscs_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_miscs_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_miscs_result get_miscs_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_miscs_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_miscs_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_miscs_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_miscs_result.isSetSuccess()) {
////                    lVar.mo18493a(get_miscs_result.success.size());
////                    for (BBMiscInfo write : get_miscs_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_miscs_result.isSetSysException()) {
////                    get_miscs_result.sysException.write(lVar);
////                }
////                if (get_miscs_result.isSetLogicException()) {
////                    get_miscs_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_miscs_result get_miscs_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_miscs_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBMiscInfo bBMiscInfo = new BBMiscInfo();
////                        bBMiscInfo.read(lVar);
////                        get_miscs_result.success.add(bBMiscInfo);
////                    }
////                    get_miscs_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_miscs_result.sysException = new BESystemException();
////                    get_miscs_result.sysException.read(lVar);
////                    get_miscs_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_miscs_result.logicException = new BELogicException();
////                    get_miscs_result.logicException.read(lVar);
////                    get_miscs_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_miscs_resultTupleSchemeFactory implements C2109b {
////            private get_miscs_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_miscs_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_miscs_resultTupleScheme getScheme() {
////                return new get_miscs_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_miscs_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_miscs_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBMiscInfo.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_miscs_result.class, metaDataMap);
////        }
////
////        public get_miscs_result() {
////        }
////
////        public get_miscs_result(List<BBMiscInfo> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_miscs_result(get_miscs_result get_miscs_result) {
////            if (get_miscs_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_miscs_result.success.size());
////                for (BBMiscInfo bBMiscInfo : get_miscs_result.success) {
////                    arrayList.add(new BBMiscInfo(bBMiscInfo));
////                }
////                this.success = arrayList;
////            }
////            if (get_miscs_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_miscs_result.sysException);
////            }
////            if (get_miscs_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_miscs_result.logicException);
////            }
////        }
////
////        public get_miscs_result deepCopy() {
////            return new get_miscs_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBMiscInfo> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBMiscInfo bBMiscInfo) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBMiscInfo);
////        }
////
////        public List<BBMiscInfo> getSuccess() {
////            return this.success;
////        }
////
////        public get_miscs_result setSuccess(List<BBMiscInfo> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_miscs_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_miscs_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_miscs_result)) {
////                return equals((get_miscs_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_miscs_result get_miscs_result) {
////            if (get_miscs_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_miscs_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_miscs_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_miscs_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_miscs_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_miscs_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_miscs_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_miscs_result get_miscs_result) {
////            if (!getClass().equals(get_miscs_result.getClass())) {
////                return getClass().getName().compareTo(get_miscs_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_miscs_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_miscs_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_miscs_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_miscs_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_miscs_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_miscs_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_miscs_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_notify_info_args implements Serializable, Cloneable, Comparable<get_notify_info_args>, C2116f<get_notify_info_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_notify_info_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_notify_info_argsStandardScheme extends C2110c<get_notify_info_args> {
////            private get_notify_info_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_notify_info_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_notify_info_args get_notify_info_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_notify_info_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_notify_info_args get_notify_info_args) {
////                get_notify_info_args.validate();
////                get_notify_info_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_notify_info_argsStandardSchemeFactory implements C2109b {
////            private get_notify_info_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_notify_info_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_notify_info_argsStandardScheme getScheme() {
////                return new get_notify_info_argsStandardScheme(null);
////            }
////        }
////
////        class get_notify_info_argsTupleScheme extends C2111d<get_notify_info_args> {
////            private get_notify_info_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_notify_info_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_notify_info_args get_notify_info_args) {
////            }
////
////            public void read(C2100f fVar, get_notify_info_args get_notify_info_args) {
////            }
////        }
////
////        class get_notify_info_argsTupleSchemeFactory implements C2109b {
////            private get_notify_info_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_notify_info_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_notify_info_argsTupleScheme getScheme() {
////                return new get_notify_info_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_notify_info_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_notify_info_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_notify_info_args.class, metaDataMap);
////        }
////
////        public get_notify_info_args() {
////        }
////
////        public get_notify_info_args(get_notify_info_args get_notify_info_args) {
////        }
////
////        public get_notify_info_args deepCopy() {
////            return new get_notify_info_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2470xbfddea97;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2470xbfddea97;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2470xbfddea97;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_notify_info_args)) {
////                return equals((get_notify_info_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_notify_info_args get_notify_info_args) {
////            if (get_notify_info_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_notify_info_args get_notify_info_args) {
////            if (!getClass().equals(get_notify_info_args.getClass())) {
////                return getClass().getName().compareTo(get_notify_info_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_notify_info_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_notify_info_result implements Serializable, Cloneable, Comparable<get_notify_info_result>, C2116f<get_notify_info_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_notify_info_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBUserNotifyResult success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_notify_info_resultStandardScheme extends C2110c<get_notify_info_result> {
////            private get_notify_info_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_notify_info_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_notify_info_result get_notify_info_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_notify_info_result.success = new BBUserNotifyResult();
////                                    get_notify_info_result.success.read(fVar);
////                                    get_notify_info_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_notify_info_result.sysException = new BESystemException();
////                                    get_notify_info_result.sysException.read(fVar);
////                                    get_notify_info_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_notify_info_result.logicException = new BELogicException();
////                                    get_notify_info_result.logicException.read(fVar);
////                                    get_notify_info_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_notify_info_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_notify_info_result get_notify_info_result) {
////                get_notify_info_result.validate();
////                get_notify_info_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_notify_info_result.success != null) {
////                    fVar.mo18496a(get_notify_info_result.SUCCESS_FIELD_DESC);
////                    get_notify_info_result.success.write(fVar);
////                }
////                if (get_notify_info_result.sysException != null) {
////                    fVar.mo18496a(get_notify_info_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_notify_info_result.sysException.write(fVar);
////                }
////                if (get_notify_info_result.logicException != null) {
////                    fVar.mo18496a(get_notify_info_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_notify_info_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_notify_info_resultStandardSchemeFactory implements C2109b {
////            private get_notify_info_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_notify_info_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_notify_info_resultStandardScheme getScheme() {
////                return new get_notify_info_resultStandardScheme(null);
////            }
////        }
////
////        class get_notify_info_resultTupleScheme extends C2111d<get_notify_info_result> {
////            private get_notify_info_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_notify_info_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_notify_info_result get_notify_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_notify_info_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_notify_info_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_notify_info_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_notify_info_result.isSetSuccess()) {
////                    get_notify_info_result.success.write(lVar);
////                }
////                if (get_notify_info_result.isSetSysException()) {
////                    get_notify_info_result.sysException.write(lVar);
////                }
////                if (get_notify_info_result.isSetLogicException()) {
////                    get_notify_info_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_notify_info_result get_notify_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    get_notify_info_result.success = new BBUserNotifyResult();
////                    get_notify_info_result.success.read(lVar);
////                    get_notify_info_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_notify_info_result.sysException = new BESystemException();
////                    get_notify_info_result.sysException.read(lVar);
////                    get_notify_info_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_notify_info_result.logicException = new BELogicException();
////                    get_notify_info_result.logicException.read(lVar);
////                    get_notify_info_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_notify_info_resultTupleSchemeFactory implements C2109b {
////            private get_notify_info_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_notify_info_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_notify_info_resultTupleScheme getScheme() {
////                return new get_notify_info_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_notify_info_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_notify_info_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBUserNotifyResult.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_notify_info_result.class, metaDataMap);
////        }
////
////        public get_notify_info_result() {
////        }
////
////        public get_notify_info_result(BBUserNotifyResult bBUserNotifyResult, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBUserNotifyResult;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_notify_info_result(get_notify_info_result get_notify_info_result) {
////            if (get_notify_info_result.isSetSuccess()) {
////                this.success = new BBUserNotifyResult(get_notify_info_result.success);
////            }
////            if (get_notify_info_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_notify_info_result.sysException);
////            }
////            if (get_notify_info_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_notify_info_result.logicException);
////            }
////        }
////
////        public get_notify_info_result deepCopy() {
////            return new get_notify_info_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBUserNotifyResult getSuccess() {
////            return this.success;
////        }
////
////        public get_notify_info_result setSuccess(BBUserNotifyResult bBUserNotifyResult) {
////            this.success = bBUserNotifyResult;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_notify_info_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_notify_info_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBUserNotifyResult) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_notify_info_result)) {
////                return equals((get_notify_info_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_notify_info_result get_notify_info_result) {
////            if (get_notify_info_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_notify_info_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_notify_info_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_notify_info_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_notify_info_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_notify_info_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_notify_info_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_notify_info_result get_notify_info_result) {
////            if (!getClass().equals(get_notify_info_result.getClass())) {
////                return getClass().getName().compareTo(get_notify_info_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_notify_info_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) get_notify_info_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_notify_info_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_notify_info_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_notify_info_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_notify_info_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_notify_info_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_shopping_ad_args implements Serializable, Cloneable, Comparable<get_shopping_ad_args>, C2116f<get_shopping_ad_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_shopping_ad_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_shopping_ad_argsStandardScheme extends C2110c<get_shopping_ad_args> {
////            private get_shopping_ad_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_shopping_ad_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_shopping_ad_args get_shopping_ad_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_shopping_ad_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_shopping_ad_args get_shopping_ad_args) {
////                get_shopping_ad_args.validate();
////                get_shopping_ad_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_shopping_ad_argsStandardSchemeFactory implements C2109b {
////            private get_shopping_ad_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_shopping_ad_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_shopping_ad_argsStandardScheme getScheme() {
////                return new get_shopping_ad_argsStandardScheme(null);
////            }
////        }
////
////        class get_shopping_ad_argsTupleScheme extends C2111d<get_shopping_ad_args> {
////            private get_shopping_ad_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_shopping_ad_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_shopping_ad_args get_shopping_ad_args) {
////            }
////
////            public void read(C2100f fVar, get_shopping_ad_args get_shopping_ad_args) {
////            }
////        }
////
////        class get_shopping_ad_argsTupleSchemeFactory implements C2109b {
////            private get_shopping_ad_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_shopping_ad_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_shopping_ad_argsTupleScheme getScheme() {
////                return new get_shopping_ad_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_shopping_ad_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_shopping_ad_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_shopping_ad_args.class, metaDataMap);
////        }
////
////        public get_shopping_ad_args() {
////        }
////
////        public get_shopping_ad_args(get_shopping_ad_args get_shopping_ad_args) {
////        }
////
////        public get_shopping_ad_args deepCopy() {
////            return new get_shopping_ad_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2472xc3a49fe1;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2472xc3a49fe1;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2472xc3a49fe1;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_shopping_ad_args)) {
////                return equals((get_shopping_ad_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_shopping_ad_args get_shopping_ad_args) {
////            if (get_shopping_ad_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_shopping_ad_args get_shopping_ad_args) {
////            if (!getClass().equals(get_shopping_ad_args.getClass())) {
////                return getClass().getName().compareTo(get_shopping_ad_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_shopping_ad_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_shopping_ad_result implements Serializable, Cloneable, Comparable<get_shopping_ad_result>, C2116f<get_shopping_ad_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_shopping_ad_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBShoppingAd success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_shopping_ad_resultStandardScheme extends C2110c<get_shopping_ad_result> {
////            private get_shopping_ad_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_shopping_ad_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_shopping_ad_result get_shopping_ad_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_shopping_ad_result.success = new BBShoppingAd();
////                                    get_shopping_ad_result.success.read(fVar);
////                                    get_shopping_ad_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_shopping_ad_result.sysException = new BESystemException();
////                                    get_shopping_ad_result.sysException.read(fVar);
////                                    get_shopping_ad_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_shopping_ad_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_shopping_ad_result get_shopping_ad_result) {
////                get_shopping_ad_result.validate();
////                get_shopping_ad_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_shopping_ad_result.success != null) {
////                    fVar.mo18496a(get_shopping_ad_result.SUCCESS_FIELD_DESC);
////                    get_shopping_ad_result.success.write(fVar);
////                }
////                if (get_shopping_ad_result.sysException != null) {
////                    fVar.mo18496a(get_shopping_ad_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_shopping_ad_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_shopping_ad_resultStandardSchemeFactory implements C2109b {
////            private get_shopping_ad_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_shopping_ad_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_shopping_ad_resultStandardScheme getScheme() {
////                return new get_shopping_ad_resultStandardScheme(null);
////            }
////        }
////
////        class get_shopping_ad_resultTupleScheme extends C2111d<get_shopping_ad_result> {
////            private get_shopping_ad_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_shopping_ad_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_shopping_ad_result get_shopping_ad_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_shopping_ad_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_shopping_ad_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (get_shopping_ad_result.isSetSuccess()) {
////                    get_shopping_ad_result.success.write(lVar);
////                }
////                if (get_shopping_ad_result.isSetSysException()) {
////                    get_shopping_ad_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_shopping_ad_result get_shopping_ad_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    get_shopping_ad_result.success = new BBShoppingAd();
////                    get_shopping_ad_result.success.read(lVar);
////                    get_shopping_ad_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_shopping_ad_result.sysException = new BESystemException();
////                    get_shopping_ad_result.sysException.read(lVar);
////                    get_shopping_ad_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_shopping_ad_resultTupleSchemeFactory implements C2109b {
////            private get_shopping_ad_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_shopping_ad_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_shopping_ad_resultTupleScheme getScheme() {
////                return new get_shopping_ad_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_shopping_ad_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_shopping_ad_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBShoppingAd.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_shopping_ad_result.class, metaDataMap);
////        }
////
////        public get_shopping_ad_result() {
////        }
////
////        public get_shopping_ad_result(BBShoppingAd bBShoppingAd, BESystemException bESystemException) {
////            this();
////            this.success = bBShoppingAd;
////            this.sysException = bESystemException;
////        }
////
////        public get_shopping_ad_result(get_shopping_ad_result get_shopping_ad_result) {
////            if (get_shopping_ad_result.isSetSuccess()) {
////                this.success = new BBShoppingAd(get_shopping_ad_result.success);
////            }
////            if (get_shopping_ad_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_shopping_ad_result.sysException);
////            }
////        }
////
////        public get_shopping_ad_result deepCopy() {
////            return new get_shopping_ad_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////        }
////
////        public BBShoppingAd getSuccess() {
////            return this.success;
////        }
////
////        public get_shopping_ad_result setSuccess(BBShoppingAd bBShoppingAd) {
////            this.success = bBShoppingAd;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_shopping_ad_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBShoppingAd) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_shopping_ad_result)) {
////                return equals((get_shopping_ad_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_shopping_ad_result get_shopping_ad_result) {
////            if (get_shopping_ad_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_shopping_ad_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_shopping_ad_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_shopping_ad_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_shopping_ad_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_shopping_ad_result get_shopping_ad_result) {
////            if (!getClass().equals(get_shopping_ad_result.getClass())) {
////                return getClass().getName().compareTo(get_shopping_ad_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_shopping_ad_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) get_shopping_ad_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_shopping_ad_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_shopping_ad_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_shopping_ad_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_show_ads_args implements Serializable, Cloneable, Comparable<get_show_ads_args>, C2116f<get_show_ads_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_show_ads_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_show_ads_argsStandardScheme extends C2110c<get_show_ads_args> {
////            private get_show_ads_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_show_ads_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_show_ads_args get_show_ads_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_show_ads_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_show_ads_args get_show_ads_args) {
////                get_show_ads_args.validate();
////                get_show_ads_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_show_ads_argsStandardSchemeFactory implements C2109b {
////            private get_show_ads_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_show_ads_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_show_ads_argsStandardScheme getScheme() {
////                return new get_show_ads_argsStandardScheme(null);
////            }
////        }
////
////        class get_show_ads_argsTupleScheme extends C2111d<get_show_ads_args> {
////            private get_show_ads_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_show_ads_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_show_ads_args get_show_ads_args) {
////            }
////
////            public void read(C2100f fVar, get_show_ads_args get_show_ads_args) {
////            }
////        }
////
////        class get_show_ads_argsTupleSchemeFactory implements C2109b {
////            private get_show_ads_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_show_ads_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_show_ads_argsTupleScheme getScheme() {
////                return new get_show_ads_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_show_ads_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_show_ads_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_show_ads_args.class, metaDataMap);
////        }
////
////        public get_show_ads_args() {
////        }
////
////        public get_show_ads_args(get_show_ads_args get_show_ads_args) {
////        }
////
////        public get_show_ads_args deepCopy() {
////            return new get_show_ads_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2474x87212c57;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2474x87212c57;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2474x87212c57;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_show_ads_args)) {
////                return equals((get_show_ads_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_show_ads_args get_show_ads_args) {
////            if (get_show_ads_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_show_ads_args get_show_ads_args) {
////            if (!getClass().equals(get_show_ads_args.getClass())) {
////                return getClass().getName().compareTo(get_show_ads_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_show_ads_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_show_ads_result implements Serializable, Cloneable, Comparable<get_show_ads_result>, C2116f<get_show_ads_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_show_ads_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<Integer> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_show_ads_resultStandardScheme extends C2110c<get_show_ads_result> {
////            private get_show_ads_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_show_ads_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_show_ads_result get_show_ads_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_show_ads_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        get_show_ads_result.success.add(Integer.valueOf(fVar.mo18513n()));
////                                    }
////                                    get_show_ads_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_show_ads_result.sysException = new BESystemException();
////                                    get_show_ads_result.sysException.read(fVar);
////                                    get_show_ads_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_show_ads_result.logicException = new BELogicException();
////                                    get_show_ads_result.logicException.read(fVar);
////                                    get_show_ads_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_show_ads_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_show_ads_result get_show_ads_result) {
////                get_show_ads_result.validate();
////                get_show_ads_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_show_ads_result.success != null) {
////                    fVar.mo18496a(get_show_ads_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(8, get_show_ads_result.success.size()));
////                    for (Integer intValue : get_show_ads_result.success) {
////                        fVar.mo18493a(intValue.intValue());
////                    }
////                }
////                if (get_show_ads_result.sysException != null) {
////                    fVar.mo18496a(get_show_ads_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_show_ads_result.sysException.write(fVar);
////                }
////                if (get_show_ads_result.logicException != null) {
////                    fVar.mo18496a(get_show_ads_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_show_ads_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_show_ads_resultStandardSchemeFactory implements C2109b {
////            private get_show_ads_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_show_ads_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_show_ads_resultStandardScheme getScheme() {
////                return new get_show_ads_resultStandardScheme(null);
////            }
////        }
////
////        class get_show_ads_resultTupleScheme extends C2111d<get_show_ads_result> {
////            private get_show_ads_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_show_ads_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_show_ads_result get_show_ads_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_show_ads_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_show_ads_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_show_ads_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_show_ads_result.isSetSuccess()) {
////                    lVar.mo18493a(get_show_ads_result.success.size());
////                    for (Integer intValue : get_show_ads_result.success) {
////                        lVar.mo18493a(intValue.intValue());
////                    }
////                }
////                if (get_show_ads_result.isSetSysException()) {
////                    get_show_ads_result.sysException.write(lVar);
////                }
////                if (get_show_ads_result.isSetLogicException()) {
////                    get_show_ads_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_show_ads_result get_show_ads_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(8, lVar.mo18513n());
////                    get_show_ads_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        get_show_ads_result.success.add(Integer.valueOf(lVar.mo18513n()));
////                    }
////                    get_show_ads_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_show_ads_result.sysException = new BESystemException();
////                    get_show_ads_result.sysException.read(lVar);
////                    get_show_ads_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_show_ads_result.logicException = new BELogicException();
////                    get_show_ads_result.logicException.read(lVar);
////                    get_show_ads_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_show_ads_resultTupleSchemeFactory implements C2109b {
////            private get_show_ads_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_show_ads_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_show_ads_resultTupleScheme getScheme() {
////                return new get_show_ads_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_show_ads_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_show_ads_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2092b(8, 0))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_show_ads_result.class, metaDataMap);
////        }
////
////        public get_show_ads_result() {
////        }
////
////        public get_show_ads_result(List<Integer> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_show_ads_result(get_show_ads_result get_show_ads_result) {
////            if (get_show_ads_result.isSetSuccess()) {
////                this.success = new ArrayList(get_show_ads_result.success);
////            }
////            if (get_show_ads_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_show_ads_result.sysException);
////            }
////            if (get_show_ads_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_show_ads_result.logicException);
////            }
////        }
////
////        public get_show_ads_result deepCopy() {
////            return new get_show_ads_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<Integer> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(int i) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(Integer.valueOf(i));
////        }
////
////        public List<Integer> getSuccess() {
////            return this.success;
////        }
////
////        public get_show_ads_result setSuccess(List<Integer> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_show_ads_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_show_ads_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_show_ads_result)) {
////                return equals((get_show_ads_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_show_ads_result get_show_ads_result) {
////            if (get_show_ads_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_show_ads_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_show_ads_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_show_ads_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_show_ads_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_show_ads_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_show_ads_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_show_ads_result get_show_ads_result) {
////            if (!getClass().equals(get_show_ads_result.getClass())) {
////                return getClass().getName().compareTo(get_show_ads_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_show_ads_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_show_ads_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_show_ads_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_show_ads_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_show_ads_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_show_ads_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_show_ads_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_sys_notifications_args implements Serializable, Cloneable, Comparable<get_sys_notifications_args>, C2116f<get_sys_notifications_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LAST_TIME_FIELD_DESC = new C2097b("last_time", 8, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_sys_notifications_args");
////        private static final int __LAST_TIME_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int last_time;
////
////        public enum _Fields implements C2124m {
////            LAST_TIME(1, "last_time");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return LAST_TIME;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_sys_notifications_argsStandardScheme extends C2110c<get_sys_notifications_args> {
////            private get_sys_notifications_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_sys_notifications_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_sys_notifications_args get_sys_notifications_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_sys_notifications_args.last_time = fVar.mo18513n();
////                                    get_sys_notifications_args.setLast_timeIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!get_sys_notifications_args.isSetLast_time()) {
////                            throw new C2101g("Required field 'last_time' was not found in serialized data! Struct: " + toString());
////                        }
////                        get_sys_notifications_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_sys_notifications_args get_sys_notifications_args) {
////                get_sys_notifications_args.validate();
////                get_sys_notifications_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(get_sys_notifications_args.LAST_TIME_FIELD_DESC);
////                fVar.mo18493a(get_sys_notifications_args.last_time);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_sys_notifications_argsStandardSchemeFactory implements C2109b {
////            private get_sys_notifications_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_sys_notifications_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_sys_notifications_argsStandardScheme getScheme() {
////                return new get_sys_notifications_argsStandardScheme(null);
////            }
////        }
////
////        class get_sys_notifications_argsTupleScheme extends C2111d<get_sys_notifications_args> {
////            private get_sys_notifications_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_sys_notifications_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_sys_notifications_args get_sys_notifications_args) {
////                ((C2106l) fVar).mo18493a(get_sys_notifications_args.last_time);
////            }
////
////            public void read(C2100f fVar, get_sys_notifications_args get_sys_notifications_args) {
////                get_sys_notifications_args.last_time = ((C2106l) fVar).mo18513n();
////                get_sys_notifications_args.setLast_timeIsSet(true);
////            }
////        }
////
////        class get_sys_notifications_argsTupleSchemeFactory implements C2109b {
////            private get_sys_notifications_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_sys_notifications_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_sys_notifications_argsTupleScheme getScheme() {
////                return new get_sys_notifications_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_sys_notifications_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_sys_notifications_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.LAST_TIME, new C2091a("last_time", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_sys_notifications_args.class, metaDataMap);
////        }
////
////        public get_sys_notifications_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public get_sys_notifications_args(int i) {
////            this();
////            this.last_time = i;
////            setLast_timeIsSet(true);
////        }
////
////        public get_sys_notifications_args(get_sys_notifications_args get_sys_notifications_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = get_sys_notifications_args.__isset_bitfield;
////            this.last_time = get_sys_notifications_args.last_time;
////        }
////
////        public get_sys_notifications_args deepCopy() {
////            return new get_sys_notifications_args(this);
////        }
////
////        public void clear() {
////            setLast_timeIsSet(false);
////            this.last_time = 0;
////        }
////
////        public int getLast_time() {
////            return this.last_time;
////        }
////
////        public get_sys_notifications_args setLast_time(int i) {
////            this.last_time = i;
////            setLast_timeIsSet(true);
////            return this;
////        }
////
////        public void unsetLast_time() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetLast_time() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setLast_timeIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case LAST_TIME:
////                    if (obj == null) {
////                        unsetLast_time();
////                        return;
////                    } else {
////                        setLast_time(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case LAST_TIME:
////                    return Integer.valueOf(getLast_time());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case LAST_TIME:
////                    return isSetLast_time();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_sys_notifications_args)) {
////                return equals((get_sys_notifications_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_sys_notifications_args get_sys_notifications_args) {
////            if (get_sys_notifications_args != null && this.last_time == get_sys_notifications_args.last_time) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_sys_notifications_args get_sys_notifications_args) {
////            if (!getClass().equals(get_sys_notifications_args.getClass())) {
////                return getClass().getName().compareTo(get_sys_notifications_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetLast_time()).compareTo(Boolean.valueOf(get_sys_notifications_args.isSetLast_time()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetLast_time()) {
////                int a = C2121h.m5522a(this.last_time, get_sys_notifications_args.last_time);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_sys_notifications_args(");
////            sb.append("last_time:");
////            sb.append(this.last_time);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_sys_notifications_result implements Serializable, Cloneable, Comparable<get_sys_notifications_result>, C2116f<get_sys_notifications_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_sys_notifications_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBSysNotification> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_sys_notifications_resultStandardScheme extends C2110c<get_sys_notifications_result> {
////            private get_sys_notifications_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_sys_notifications_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_sys_notifications_result get_sys_notifications_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_sys_notifications_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBSysNotification bBSysNotification = new BBSysNotification();
////                                        bBSysNotification.read(fVar);
////                                        get_sys_notifications_result.success.add(bBSysNotification);
////                                    }
////                                    get_sys_notifications_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_sys_notifications_result.sysException = new BESystemException();
////                                    get_sys_notifications_result.sysException.read(fVar);
////                                    get_sys_notifications_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_sys_notifications_result.logicException = new BELogicException();
////                                    get_sys_notifications_result.logicException.read(fVar);
////                                    get_sys_notifications_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_sys_notifications_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_sys_notifications_result get_sys_notifications_result) {
////                get_sys_notifications_result.validate();
////                get_sys_notifications_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_sys_notifications_result.success != null) {
////                    fVar.mo18496a(get_sys_notifications_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_sys_notifications_result.success.size()));
////                    for (BBSysNotification write : get_sys_notifications_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_sys_notifications_result.sysException != null) {
////                    fVar.mo18496a(get_sys_notifications_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_sys_notifications_result.sysException.write(fVar);
////                }
////                if (get_sys_notifications_result.logicException != null) {
////                    fVar.mo18496a(get_sys_notifications_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_sys_notifications_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_sys_notifications_resultStandardSchemeFactory implements C2109b {
////            private get_sys_notifications_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_sys_notifications_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_sys_notifications_resultStandardScheme getScheme() {
////                return new get_sys_notifications_resultStandardScheme(null);
////            }
////        }
////
////        class get_sys_notifications_resultTupleScheme extends C2111d<get_sys_notifications_result> {
////            private get_sys_notifications_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_sys_notifications_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_sys_notifications_result get_sys_notifications_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_sys_notifications_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_sys_notifications_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_sys_notifications_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_sys_notifications_result.isSetSuccess()) {
////                    lVar.mo18493a(get_sys_notifications_result.success.size());
////                    for (BBSysNotification write : get_sys_notifications_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_sys_notifications_result.isSetSysException()) {
////                    get_sys_notifications_result.sysException.write(lVar);
////                }
////                if (get_sys_notifications_result.isSetLogicException()) {
////                    get_sys_notifications_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_sys_notifications_result get_sys_notifications_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_sys_notifications_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBSysNotification bBSysNotification = new BBSysNotification();
////                        bBSysNotification.read(lVar);
////                        get_sys_notifications_result.success.add(bBSysNotification);
////                    }
////                    get_sys_notifications_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_sys_notifications_result.sysException = new BESystemException();
////                    get_sys_notifications_result.sysException.read(lVar);
////                    get_sys_notifications_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_sys_notifications_result.logicException = new BELogicException();
////                    get_sys_notifications_result.logicException.read(lVar);
////                    get_sys_notifications_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_sys_notifications_resultTupleSchemeFactory implements C2109b {
////            private get_sys_notifications_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_sys_notifications_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_sys_notifications_resultTupleScheme getScheme() {
////                return new get_sys_notifications_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_sys_notifications_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_sys_notifications_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBSysNotification.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_sys_notifications_result.class, metaDataMap);
////        }
////
////        public get_sys_notifications_result() {
////        }
////
////        public get_sys_notifications_result(List<BBSysNotification> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_sys_notifications_result(get_sys_notifications_result get_sys_notifications_result) {
////            if (get_sys_notifications_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_sys_notifications_result.success.size());
////                for (BBSysNotification bBSysNotification : get_sys_notifications_result.success) {
////                    arrayList.add(new BBSysNotification(bBSysNotification));
////                }
////                this.success = arrayList;
////            }
////            if (get_sys_notifications_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_sys_notifications_result.sysException);
////            }
////            if (get_sys_notifications_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_sys_notifications_result.logicException);
////            }
////        }
////
////        public get_sys_notifications_result deepCopy() {
////            return new get_sys_notifications_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBSysNotification> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBSysNotification bBSysNotification) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBSysNotification);
////        }
////
////        public List<BBSysNotification> getSuccess() {
////            return this.success;
////        }
////
////        public get_sys_notifications_result setSuccess(List<BBSysNotification> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_sys_notifications_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_sys_notifications_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_sys_notifications_result)) {
////                return equals((get_sys_notifications_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_sys_notifications_result get_sys_notifications_result) {
////            if (get_sys_notifications_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_sys_notifications_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_sys_notifications_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_sys_notifications_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_sys_notifications_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_sys_notifications_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_sys_notifications_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_sys_notifications_result get_sys_notifications_result) {
////            if (!getClass().equals(get_sys_notifications_result.getClass())) {
////                return getClass().getName().compareTo(get_sys_notifications_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_sys_notifications_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_sys_notifications_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_sys_notifications_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_sys_notifications_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_sys_notifications_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_sys_notifications_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_sys_notifications_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_top_sys_notifications_args implements Serializable, Cloneable, Comparable<get_top_sys_notifications_args>, C2116f<get_top_sys_notifications_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_top_sys_notifications_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_top_sys_notifications_argsStandardScheme extends C2110c<get_top_sys_notifications_args> {
////            private get_top_sys_notifications_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_top_sys_notifications_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_top_sys_notifications_args get_top_sys_notifications_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_top_sys_notifications_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_top_sys_notifications_args get_top_sys_notifications_args) {
////                get_top_sys_notifications_args.validate();
////                get_top_sys_notifications_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_top_sys_notifications_argsStandardSchemeFactory implements C2109b {
////            private get_top_sys_notifications_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_top_sys_notifications_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_top_sys_notifications_argsStandardScheme getScheme() {
////                return new get_top_sys_notifications_argsStandardScheme(null);
////            }
////        }
////
////        class get_top_sys_notifications_argsTupleScheme extends C2111d<get_top_sys_notifications_args> {
////            private get_top_sys_notifications_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_top_sys_notifications_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_top_sys_notifications_args get_top_sys_notifications_args) {
////            }
////
////            public void read(C2100f fVar, get_top_sys_notifications_args get_top_sys_notifications_args) {
////            }
////        }
////
////        class get_top_sys_notifications_argsTupleSchemeFactory implements C2109b {
////            private get_top_sys_notifications_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_top_sys_notifications_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_top_sys_notifications_argsTupleScheme getScheme() {
////                return new get_top_sys_notifications_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_top_sys_notifications_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_top_sys_notifications_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_top_sys_notifications_args.class, metaDataMap);
////        }
////
////        public get_top_sys_notifications_args() {
////        }
////
////        public get_top_sys_notifications_args(get_top_sys_notifications_args get_top_sys_notifications_args) {
////        }
////
////        public get_top_sys_notifications_args deepCopy() {
////            return new get_top_sys_notifications_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2478x7f4da32f;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2478x7f4da32f;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2478x7f4da32f;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_top_sys_notifications_args)) {
////                return equals((get_top_sys_notifications_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_top_sys_notifications_args get_top_sys_notifications_args) {
////            if (get_top_sys_notifications_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_top_sys_notifications_args get_top_sys_notifications_args) {
////            if (!getClass().equals(get_top_sys_notifications_args.getClass())) {
////                return getClass().getName().compareTo(get_top_sys_notifications_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_top_sys_notifications_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_top_sys_notifications_result implements Serializable, Cloneable, Comparable<get_top_sys_notifications_result>, C2116f<get_top_sys_notifications_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_top_sys_notifications_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBSysNotification> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_top_sys_notifications_resultStandardScheme extends C2110c<get_top_sys_notifications_result> {
////            private get_top_sys_notifications_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_top_sys_notifications_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_top_sys_notifications_result get_top_sys_notifications_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_top_sys_notifications_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBSysNotification bBSysNotification = new BBSysNotification();
////                                        bBSysNotification.read(fVar);
////                                        get_top_sys_notifications_result.success.add(bBSysNotification);
////                                    }
////                                    get_top_sys_notifications_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_top_sys_notifications_result.sysException = new BESystemException();
////                                    get_top_sys_notifications_result.sysException.read(fVar);
////                                    get_top_sys_notifications_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_top_sys_notifications_result.logicException = new BELogicException();
////                                    get_top_sys_notifications_result.logicException.read(fVar);
////                                    get_top_sys_notifications_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_top_sys_notifications_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_top_sys_notifications_result get_top_sys_notifications_result) {
////                get_top_sys_notifications_result.validate();
////                get_top_sys_notifications_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_top_sys_notifications_result.success != null) {
////                    fVar.mo18496a(get_top_sys_notifications_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_top_sys_notifications_result.success.size()));
////                    for (BBSysNotification write : get_top_sys_notifications_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_top_sys_notifications_result.sysException != null) {
////                    fVar.mo18496a(get_top_sys_notifications_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_top_sys_notifications_result.sysException.write(fVar);
////                }
////                if (get_top_sys_notifications_result.logicException != null) {
////                    fVar.mo18496a(get_top_sys_notifications_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_top_sys_notifications_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_top_sys_notifications_resultStandardSchemeFactory implements C2109b {
////            private get_top_sys_notifications_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_top_sys_notifications_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_top_sys_notifications_resultStandardScheme getScheme() {
////                return new get_top_sys_notifications_resultStandardScheme(null);
////            }
////        }
////
////        class get_top_sys_notifications_resultTupleScheme extends C2111d<get_top_sys_notifications_result> {
////            private get_top_sys_notifications_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_top_sys_notifications_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_top_sys_notifications_result get_top_sys_notifications_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_top_sys_notifications_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_top_sys_notifications_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_top_sys_notifications_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_top_sys_notifications_result.isSetSuccess()) {
////                    lVar.mo18493a(get_top_sys_notifications_result.success.size());
////                    for (BBSysNotification write : get_top_sys_notifications_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_top_sys_notifications_result.isSetSysException()) {
////                    get_top_sys_notifications_result.sysException.write(lVar);
////                }
////                if (get_top_sys_notifications_result.isSetLogicException()) {
////                    get_top_sys_notifications_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_top_sys_notifications_result get_top_sys_notifications_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_top_sys_notifications_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBSysNotification bBSysNotification = new BBSysNotification();
////                        bBSysNotification.read(lVar);
////                        get_top_sys_notifications_result.success.add(bBSysNotification);
////                    }
////                    get_top_sys_notifications_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_top_sys_notifications_result.sysException = new BESystemException();
////                    get_top_sys_notifications_result.sysException.read(lVar);
////                    get_top_sys_notifications_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_top_sys_notifications_result.logicException = new BELogicException();
////                    get_top_sys_notifications_result.logicException.read(lVar);
////                    get_top_sys_notifications_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_top_sys_notifications_resultTupleSchemeFactory implements C2109b {
////            private get_top_sys_notifications_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_top_sys_notifications_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_top_sys_notifications_resultTupleScheme getScheme() {
////                return new get_top_sys_notifications_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_top_sys_notifications_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_top_sys_notifications_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBSysNotification.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_top_sys_notifications_result.class, metaDataMap);
////        }
////
////        public get_top_sys_notifications_result() {
////        }
////
////        public get_top_sys_notifications_result(List<BBSysNotification> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_top_sys_notifications_result(get_top_sys_notifications_result get_top_sys_notifications_result) {
////            if (get_top_sys_notifications_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_top_sys_notifications_result.success.size());
////                for (BBSysNotification bBSysNotification : get_top_sys_notifications_result.success) {
////                    arrayList.add(new BBSysNotification(bBSysNotification));
////                }
////                this.success = arrayList;
////            }
////            if (get_top_sys_notifications_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_top_sys_notifications_result.sysException);
////            }
////            if (get_top_sys_notifications_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_top_sys_notifications_result.logicException);
////            }
////        }
////
////        public get_top_sys_notifications_result deepCopy() {
////            return new get_top_sys_notifications_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBSysNotification> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBSysNotification bBSysNotification) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBSysNotification);
////        }
////
////        public List<BBSysNotification> getSuccess() {
////            return this.success;
////        }
////
////        public get_top_sys_notifications_result setSuccess(List<BBSysNotification> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_top_sys_notifications_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_top_sys_notifications_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_top_sys_notifications_result)) {
////                return equals((get_top_sys_notifications_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_top_sys_notifications_result get_top_sys_notifications_result) {
////            if (get_top_sys_notifications_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_top_sys_notifications_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_top_sys_notifications_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_top_sys_notifications_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_top_sys_notifications_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_top_sys_notifications_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_top_sys_notifications_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_top_sys_notifications_result get_top_sys_notifications_result) {
////            if (!getClass().equals(get_top_sys_notifications_result.getClass())) {
////                return getClass().getName().compareTo(get_top_sys_notifications_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_top_sys_notifications_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_top_sys_notifications_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_top_sys_notifications_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_top_sys_notifications_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_top_sys_notifications_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_top_sys_notifications_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_top_sys_notifications_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_url_args implements Serializable, Cloneable, Comparable<get_url_args>, C2116f<get_url_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_url_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_url_argsStandardScheme extends C2110c<get_url_args> {
////            private get_url_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_url_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_url_args get_url_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        get_url_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_url_args get_url_args) {
////                get_url_args.validate();
////                get_url_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_url_argsStandardSchemeFactory implements C2109b {
////            private get_url_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_url_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_url_argsStandardScheme getScheme() {
////                return new get_url_argsStandardScheme(null);
////            }
////        }
////
////        class get_url_argsTupleScheme extends C2111d<get_url_args> {
////            private get_url_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_url_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_url_args get_url_args) {
////            }
////
////            public void read(C2100f fVar, get_url_args get_url_args) {
////            }
////        }
////
////        class get_url_argsTupleSchemeFactory implements C2109b {
////            private get_url_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_url_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_url_argsTupleScheme getScheme() {
////                return new get_url_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_url_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_url_argsTupleSchemeFactory(null));
////            C2091a.m5430a(get_url_args.class, metaDataMap);
////        }
////
////        public get_url_args() {
////        }
////
////        public get_url_args(get_url_args get_url_args) {
////        }
////
////        public get_url_args deepCopy() {
////            return new get_url_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2480xb2ed05ec;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2480xb2ed05ec;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2480xb2ed05ec;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_url_args)) {
////                return equals((get_url_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_url_args get_url_args) {
////            if (get_url_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_url_args get_url_args) {
////            if (!getClass().equals(get_url_args.getClass())) {
////                return getClass().getName().compareTo(get_url_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_url_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_url_result implements Serializable, Cloneable, Comparable<get_url_result>, C2116f<get_url_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_url_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.STRUCT_END, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public String success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_url_resultStandardScheme extends C2110c<get_url_result> {
////            private get_url_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_url_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_url_result get_url_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_url_result.success = fVar.mo18516q();
////                                    get_url_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_url_result.sysException = new BESystemException();
////                                    get_url_result.sysException.read(fVar);
////                                    get_url_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_url_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_url_result get_url_result) {
////                get_url_result.validate();
////                get_url_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_url_result.success != null) {
////                    fVar.mo18496a(get_url_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18495a(get_url_result.success);
////                }
////                if (get_url_result.sysException != null) {
////                    fVar.mo18496a(get_url_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_url_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_url_resultStandardSchemeFactory implements C2109b {
////            private get_url_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_url_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_url_resultStandardScheme getScheme() {
////                return new get_url_resultStandardScheme(null);
////            }
////        }
////
////        class get_url_resultTupleScheme extends C2111d<get_url_result> {
////            private get_url_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_url_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_url_result get_url_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_url_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_url_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (get_url_result.isSetSuccess()) {
////                    lVar.mo18495a(get_url_result.success);
////                }
////                if (get_url_result.isSetSysException()) {
////                    get_url_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_url_result get_url_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    get_url_result.success = lVar.mo18516q();
////                    get_url_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_url_result.sysException = new BESystemException();
////                    get_url_result.sysException.read(lVar);
////                    get_url_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_url_resultTupleSchemeFactory implements C2109b {
////            private get_url_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_url_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_url_resultTupleScheme getScheme() {
////                return new get_url_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_url_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_url_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(JceStruct.STRUCT_END, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_url_result.class, metaDataMap);
////        }
////
////        public get_url_result() {
////        }
////
////        public get_url_result(String str, BESystemException bESystemException) {
////            this();
////            this.success = str;
////            this.sysException = bESystemException;
////        }
////
////        public get_url_result(get_url_result get_url_result) {
////            if (get_url_result.isSetSuccess()) {
////                this.success = get_url_result.success;
////            }
////            if (get_url_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_url_result.sysException);
////            }
////        }
////
////        public get_url_result deepCopy() {
////            return new get_url_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////        }
////
////        public String getSuccess() {
////            return this.success;
////        }
////
////        public get_url_result setSuccess(String str) {
////            this.success = str;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_url_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((String) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_url_result)) {
////                return equals((get_url_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_url_result get_url_result) {
////            if (get_url_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_url_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_url_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_url_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_url_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_url_result get_url_result) {
////            if (!getClass().equals(get_url_result.getClass())) {
////                return getClass().getName().compareTo(get_url_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_url_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5525a(this.success, get_url_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_url_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_url_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_url_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_user_word_media_record_args implements Serializable, Cloneable, Comparable<get_user_word_media_record_args>, C2116f<get_user_word_media_record_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_user_word_media_record_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_user_word_media_record_argsStandardScheme extends C2110c<get_user_word_media_record_args> {
////            private get_user_word_media_record_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_user_word_media_record_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_user_word_media_record_args get_user_word_media_record_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_user_word_media_record_args.word_level_id = fVar.mo18513n();
////                                    get_user_word_media_record_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!get_user_word_media_record_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        get_user_word_media_record_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_user_word_media_record_args get_user_word_media_record_args) {
////                get_user_word_media_record_args.validate();
////                get_user_word_media_record_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(get_user_word_media_record_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(get_user_word_media_record_args.word_level_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_user_word_media_record_argsStandardSchemeFactory implements C2109b {
////            private get_user_word_media_record_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_user_word_media_record_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_user_word_media_record_argsStandardScheme getScheme() {
////                return new get_user_word_media_record_argsStandardScheme(null);
////            }
////        }
////
////        class get_user_word_media_record_argsTupleScheme extends C2111d<get_user_word_media_record_args> {
////            private get_user_word_media_record_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_user_word_media_record_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_user_word_media_record_args get_user_word_media_record_args) {
////                ((C2106l) fVar).mo18493a(get_user_word_media_record_args.word_level_id);
////            }
////
////            public void read(C2100f fVar, get_user_word_media_record_args get_user_word_media_record_args) {
////                get_user_word_media_record_args.word_level_id = ((C2106l) fVar).mo18513n();
////                get_user_word_media_record_args.setWord_level_idIsSet(true);
////            }
////        }
////
////        class get_user_word_media_record_argsTupleSchemeFactory implements C2109b {
////            private get_user_word_media_record_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_user_word_media_record_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_user_word_media_record_argsTupleScheme getScheme() {
////                return new get_user_word_media_record_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_user_word_media_record_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_user_word_media_record_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_user_word_media_record_args.class, metaDataMap);
////        }
////
////        public get_user_word_media_record_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public get_user_word_media_record_args(int i) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////        }
////
////        public get_user_word_media_record_args(get_user_word_media_record_args get_user_word_media_record_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = get_user_word_media_record_args.__isset_bitfield;
////            this.word_level_id = get_user_word_media_record_args.word_level_id;
////        }
////
////        public get_user_word_media_record_args deepCopy() {
////            return new get_user_word_media_record_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public get_user_word_media_record_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_user_word_media_record_args)) {
////                return equals((get_user_word_media_record_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_user_word_media_record_args get_user_word_media_record_args) {
////            if (get_user_word_media_record_args != null && this.word_level_id == get_user_word_media_record_args.word_level_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_user_word_media_record_args get_user_word_media_record_args) {
////            if (!getClass().equals(get_user_word_media_record_args.getClass())) {
////                return getClass().getName().compareTo(get_user_word_media_record_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(get_user_word_media_record_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, get_user_word_media_record_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_user_word_media_record_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_user_word_media_record_result implements Serializable, Cloneable, Comparable<get_user_word_media_record_result>, C2116f<get_user_word_media_record_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_user_word_media_record_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBUserWordMedia> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_user_word_media_record_resultStandardScheme extends C2110c<get_user_word_media_record_result> {
////            private get_user_word_media_record_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_user_word_media_record_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_user_word_media_record_result get_user_word_media_record_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_user_word_media_record_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBUserWordMedia bBUserWordMedia = new BBUserWordMedia();
////                                        bBUserWordMedia.read(fVar);
////                                        get_user_word_media_record_result.success.add(bBUserWordMedia);
////                                    }
////                                    get_user_word_media_record_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_user_word_media_record_result.sysException = new BESystemException();
////                                    get_user_word_media_record_result.sysException.read(fVar);
////                                    get_user_word_media_record_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_user_word_media_record_result.logicException = new BELogicException();
////                                    get_user_word_media_record_result.logicException.read(fVar);
////                                    get_user_word_media_record_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_user_word_media_record_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_user_word_media_record_result get_user_word_media_record_result) {
////                get_user_word_media_record_result.validate();
////                get_user_word_media_record_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_user_word_media_record_result.success != null) {
////                    fVar.mo18496a(get_user_word_media_record_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_user_word_media_record_result.success.size()));
////                    for (BBUserWordMedia write : get_user_word_media_record_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_user_word_media_record_result.sysException != null) {
////                    fVar.mo18496a(get_user_word_media_record_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_user_word_media_record_result.sysException.write(fVar);
////                }
////                if (get_user_word_media_record_result.logicException != null) {
////                    fVar.mo18496a(get_user_word_media_record_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_user_word_media_record_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_user_word_media_record_resultStandardSchemeFactory implements C2109b {
////            private get_user_word_media_record_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_user_word_media_record_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_user_word_media_record_resultStandardScheme getScheme() {
////                return new get_user_word_media_record_resultStandardScheme(null);
////            }
////        }
////
////        class get_user_word_media_record_resultTupleScheme extends C2111d<get_user_word_media_record_result> {
////            private get_user_word_media_record_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_user_word_media_record_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_user_word_media_record_result get_user_word_media_record_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_user_word_media_record_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_user_word_media_record_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_user_word_media_record_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_user_word_media_record_result.isSetSuccess()) {
////                    lVar.mo18493a(get_user_word_media_record_result.success.size());
////                    for (BBUserWordMedia write : get_user_word_media_record_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_user_word_media_record_result.isSetSysException()) {
////                    get_user_word_media_record_result.sysException.write(lVar);
////                }
////                if (get_user_word_media_record_result.isSetLogicException()) {
////                    get_user_word_media_record_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_user_word_media_record_result get_user_word_media_record_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_user_word_media_record_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBUserWordMedia bBUserWordMedia = new BBUserWordMedia();
////                        bBUserWordMedia.read(lVar);
////                        get_user_word_media_record_result.success.add(bBUserWordMedia);
////                    }
////                    get_user_word_media_record_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_user_word_media_record_result.sysException = new BESystemException();
////                    get_user_word_media_record_result.sysException.read(lVar);
////                    get_user_word_media_record_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_user_word_media_record_result.logicException = new BELogicException();
////                    get_user_word_media_record_result.logicException.read(lVar);
////                    get_user_word_media_record_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_user_word_media_record_resultTupleSchemeFactory implements C2109b {
////            private get_user_word_media_record_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_user_word_media_record_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_user_word_media_record_resultTupleScheme getScheme() {
////                return new get_user_word_media_record_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_user_word_media_record_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_user_word_media_record_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBUserWordMedia.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_user_word_media_record_result.class, metaDataMap);
////        }
////
////        public get_user_word_media_record_result() {
////        }
////
////        public get_user_word_media_record_result(List<BBUserWordMedia> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_user_word_media_record_result(get_user_word_media_record_result get_user_word_media_record_result) {
////            if (get_user_word_media_record_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_user_word_media_record_result.success.size());
////                for (BBUserWordMedia bBUserWordMedia : get_user_word_media_record_result.success) {
////                    arrayList.add(new BBUserWordMedia(bBUserWordMedia));
////                }
////                this.success = arrayList;
////            }
////            if (get_user_word_media_record_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_user_word_media_record_result.sysException);
////            }
////            if (get_user_word_media_record_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_user_word_media_record_result.logicException);
////            }
////        }
////
////        public get_user_word_media_record_result deepCopy() {
////            return new get_user_word_media_record_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBUserWordMedia> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBUserWordMedia bBUserWordMedia) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBUserWordMedia);
////        }
////
////        public List<BBUserWordMedia> getSuccess() {
////            return this.success;
////        }
////
////        public get_user_word_media_record_result setSuccess(List<BBUserWordMedia> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_user_word_media_record_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_user_word_media_record_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_user_word_media_record_result)) {
////                return equals((get_user_word_media_record_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_user_word_media_record_result get_user_word_media_record_result) {
////            if (get_user_word_media_record_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_user_word_media_record_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_user_word_media_record_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_user_word_media_record_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_user_word_media_record_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_user_word_media_record_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_user_word_media_record_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_user_word_media_record_result get_user_word_media_record_result) {
////            if (!getClass().equals(get_user_word_media_record_result.getClass())) {
////                return getClass().getName().compareTo(get_user_word_media_record_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_user_word_media_record_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_user_word_media_record_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_user_word_media_record_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_user_word_media_record_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_user_word_media_record_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_user_word_media_record_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_user_word_media_record_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_word_friends_info_args implements Serializable, Cloneable, Comparable<get_word_friends_info_args>, C2116f<get_word_friends_info_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_word_friends_info_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_word_friends_info_argsStandardScheme extends C2110c<get_word_friends_info_args> {
////            private get_word_friends_info_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_word_friends_info_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_word_friends_info_args get_word_friends_info_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_friends_info_args.word_level_id = fVar.mo18513n();
////                                    get_word_friends_info_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!get_word_friends_info_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        get_word_friends_info_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_word_friends_info_args get_word_friends_info_args) {
////                get_word_friends_info_args.validate();
////                get_word_friends_info_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(get_word_friends_info_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(get_word_friends_info_args.word_level_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_word_friends_info_argsStandardSchemeFactory implements C2109b {
////            private get_word_friends_info_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_friends_info_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_friends_info_argsStandardScheme getScheme() {
////                return new get_word_friends_info_argsStandardScheme(null);
////            }
////        }
////
////        class get_word_friends_info_argsTupleScheme extends C2111d<get_word_friends_info_args> {
////            private get_word_friends_info_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_word_friends_info_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_word_friends_info_args get_word_friends_info_args) {
////                ((C2106l) fVar).mo18493a(get_word_friends_info_args.word_level_id);
////            }
////
////            public void read(C2100f fVar, get_word_friends_info_args get_word_friends_info_args) {
////                get_word_friends_info_args.word_level_id = ((C2106l) fVar).mo18513n();
////                get_word_friends_info_args.setWord_level_idIsSet(true);
////            }
////        }
////
////        class get_word_friends_info_argsTupleSchemeFactory implements C2109b {
////            private get_word_friends_info_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_friends_info_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_friends_info_argsTupleScheme getScheme() {
////                return new get_word_friends_info_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_word_friends_info_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_word_friends_info_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_word_friends_info_args.class, metaDataMap);
////        }
////
////        public get_word_friends_info_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public get_word_friends_info_args(int i) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////        }
////
////        public get_word_friends_info_args(get_word_friends_info_args get_word_friends_info_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = get_word_friends_info_args.__isset_bitfield;
////            this.word_level_id = get_word_friends_info_args.word_level_id;
////        }
////
////        public get_word_friends_info_args deepCopy() {
////            return new get_word_friends_info_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public get_word_friends_info_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_word_friends_info_args)) {
////                return equals((get_word_friends_info_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_word_friends_info_args get_word_friends_info_args) {
////            if (get_word_friends_info_args != null && this.word_level_id == get_word_friends_info_args.word_level_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_word_friends_info_args get_word_friends_info_args) {
////            if (!getClass().equals(get_word_friends_info_args.getClass())) {
////                return getClass().getName().compareTo(get_word_friends_info_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(get_word_friends_info_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, get_word_friends_info_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_word_friends_info_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_word_friends_info_result implements Serializable, Cloneable, Comparable<get_word_friends_info_result>, C2116f<get_word_friends_info_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_word_friends_info_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.STRUCT_END, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public String success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_word_friends_info_resultStandardScheme extends C2110c<get_word_friends_info_result> {
////            private get_word_friends_info_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_word_friends_info_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_word_friends_info_result get_word_friends_info_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_friends_info_result.success = fVar.mo18516q();
////                                    get_word_friends_info_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_friends_info_result.sysException = new BESystemException();
////                                    get_word_friends_info_result.sysException.read(fVar);
////                                    get_word_friends_info_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_friends_info_result.logicException = new BELogicException();
////                                    get_word_friends_info_result.logicException.read(fVar);
////                                    get_word_friends_info_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_word_friends_info_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_word_friends_info_result get_word_friends_info_result) {
////                get_word_friends_info_result.validate();
////                get_word_friends_info_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_word_friends_info_result.success != null) {
////                    fVar.mo18496a(get_word_friends_info_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18495a(get_word_friends_info_result.success);
////                }
////                if (get_word_friends_info_result.sysException != null) {
////                    fVar.mo18496a(get_word_friends_info_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_word_friends_info_result.sysException.write(fVar);
////                }
////                if (get_word_friends_info_result.logicException != null) {
////                    fVar.mo18496a(get_word_friends_info_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_word_friends_info_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_word_friends_info_resultStandardSchemeFactory implements C2109b {
////            private get_word_friends_info_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_friends_info_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_friends_info_resultStandardScheme getScheme() {
////                return new get_word_friends_info_resultStandardScheme(null);
////            }
////        }
////
////        class get_word_friends_info_resultTupleScheme extends C2111d<get_word_friends_info_result> {
////            private get_word_friends_info_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_word_friends_info_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_word_friends_info_result get_word_friends_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_word_friends_info_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_word_friends_info_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_word_friends_info_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_word_friends_info_result.isSetSuccess()) {
////                    lVar.mo18495a(get_word_friends_info_result.success);
////                }
////                if (get_word_friends_info_result.isSetSysException()) {
////                    get_word_friends_info_result.sysException.write(lVar);
////                }
////                if (get_word_friends_info_result.isSetLogicException()) {
////                    get_word_friends_info_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_word_friends_info_result get_word_friends_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    get_word_friends_info_result.success = lVar.mo18516q();
////                    get_word_friends_info_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_word_friends_info_result.sysException = new BESystemException();
////                    get_word_friends_info_result.sysException.read(lVar);
////                    get_word_friends_info_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_word_friends_info_result.logicException = new BELogicException();
////                    get_word_friends_info_result.logicException.read(lVar);
////                    get_word_friends_info_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_word_friends_info_resultTupleSchemeFactory implements C2109b {
////            private get_word_friends_info_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_friends_info_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_friends_info_resultTupleScheme getScheme() {
////                return new get_word_friends_info_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_word_friends_info_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_word_friends_info_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(JceStruct.STRUCT_END, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_word_friends_info_result.class, metaDataMap);
////        }
////
////        public get_word_friends_info_result() {
////        }
////
////        public get_word_friends_info_result(String str, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = str;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_word_friends_info_result(get_word_friends_info_result get_word_friends_info_result) {
////            if (get_word_friends_info_result.isSetSuccess()) {
////                this.success = get_word_friends_info_result.success;
////            }
////            if (get_word_friends_info_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_word_friends_info_result.sysException);
////            }
////            if (get_word_friends_info_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_word_friends_info_result.logicException);
////            }
////        }
////
////        public get_word_friends_info_result deepCopy() {
////            return new get_word_friends_info_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public String getSuccess() {
////            return this.success;
////        }
////
////        public get_word_friends_info_result setSuccess(String str) {
////            this.success = str;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_word_friends_info_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_word_friends_info_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((String) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_word_friends_info_result)) {
////                return equals((get_word_friends_info_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_word_friends_info_result get_word_friends_info_result) {
////            if (get_word_friends_info_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_word_friends_info_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_word_friends_info_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_word_friends_info_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_word_friends_info_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_word_friends_info_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_word_friends_info_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_word_friends_info_result get_word_friends_info_result) {
////            if (!getClass().equals(get_word_friends_info_result.getClass())) {
////                return getClass().getName().compareTo(get_word_friends_info_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_word_friends_info_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5525a(this.success, get_word_friends_info_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_word_friends_info_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_word_friends_info_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_word_friends_info_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_word_friends_info_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_word_friends_info_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_word_update_info_by_book_args implements Serializable, Cloneable, Comparable<get_word_update_info_by_book_args>, C2116f<get_word_update_info_by_book_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_word_update_info_by_book_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_word_update_info_by_book_argsStandardScheme extends C2110c<get_word_update_info_by_book_args> {
////            private get_word_update_info_by_book_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_word_update_info_by_book_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_word_update_info_by_book_args get_word_update_info_by_book_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_update_info_by_book_args.word_level_id = fVar.mo18513n();
////                                    get_word_update_info_by_book_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!get_word_update_info_by_book_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        get_word_update_info_by_book_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_word_update_info_by_book_args get_word_update_info_by_book_args) {
////                get_word_update_info_by_book_args.validate();
////                get_word_update_info_by_book_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(get_word_update_info_by_book_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(get_word_update_info_by_book_args.word_level_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_word_update_info_by_book_argsStandardSchemeFactory implements C2109b {
////            private get_word_update_info_by_book_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_update_info_by_book_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_update_info_by_book_argsStandardScheme getScheme() {
////                return new get_word_update_info_by_book_argsStandardScheme(null);
////            }
////        }
////
////        class get_word_update_info_by_book_argsTupleScheme extends C2111d<get_word_update_info_by_book_args> {
////            private get_word_update_info_by_book_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_word_update_info_by_book_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_word_update_info_by_book_args get_word_update_info_by_book_args) {
////                ((C2106l) fVar).mo18493a(get_word_update_info_by_book_args.word_level_id);
////            }
////
////            public void read(C2100f fVar, get_word_update_info_by_book_args get_word_update_info_by_book_args) {
////                get_word_update_info_by_book_args.word_level_id = ((C2106l) fVar).mo18513n();
////                get_word_update_info_by_book_args.setWord_level_idIsSet(true);
////            }
////        }
////
////        class get_word_update_info_by_book_argsTupleSchemeFactory implements C2109b {
////            private get_word_update_info_by_book_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_update_info_by_book_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_update_info_by_book_argsTupleScheme getScheme() {
////                return new get_word_update_info_by_book_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_word_update_info_by_book_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_word_update_info_by_book_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_word_update_info_by_book_args.class, metaDataMap);
////        }
////
////        public get_word_update_info_by_book_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public get_word_update_info_by_book_args(int i) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////        }
////
////        public get_word_update_info_by_book_args(get_word_update_info_by_book_args get_word_update_info_by_book_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = get_word_update_info_by_book_args.__isset_bitfield;
////            this.word_level_id = get_word_update_info_by_book_args.word_level_id;
////        }
////
////        public get_word_update_info_by_book_args deepCopy() {
////            return new get_word_update_info_by_book_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public get_word_update_info_by_book_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_word_update_info_by_book_args)) {
////                return equals((get_word_update_info_by_book_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_word_update_info_by_book_args get_word_update_info_by_book_args) {
////            if (get_word_update_info_by_book_args != null && this.word_level_id == get_word_update_info_by_book_args.word_level_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_word_update_info_by_book_args get_word_update_info_by_book_args) {
////            if (!getClass().equals(get_word_update_info_by_book_args.getClass())) {
////                return getClass().getName().compareTo(get_word_update_info_by_book_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(get_word_update_info_by_book_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, get_word_update_info_by_book_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_word_update_info_by_book_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_word_update_info_by_book_result implements Serializable, Cloneable, Comparable<get_word_update_info_by_book_result>, C2116f<get_word_update_info_by_book_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_word_update_info_by_book_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBWordUpdateInfo> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_word_update_info_by_book_resultStandardScheme extends C2110c<get_word_update_info_by_book_result> {
////            private get_word_update_info_by_book_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_word_update_info_by_book_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_word_update_info_by_book_result get_word_update_info_by_book_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_word_update_info_by_book_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBWordUpdateInfo bBWordUpdateInfo = new BBWordUpdateInfo();
////                                        bBWordUpdateInfo.read(fVar);
////                                        get_word_update_info_by_book_result.success.add(bBWordUpdateInfo);
////                                    }
////                                    get_word_update_info_by_book_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_update_info_by_book_result.sysException = new BESystemException();
////                                    get_word_update_info_by_book_result.sysException.read(fVar);
////                                    get_word_update_info_by_book_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_update_info_by_book_result.logicException = new BELogicException();
////                                    get_word_update_info_by_book_result.logicException.read(fVar);
////                                    get_word_update_info_by_book_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_word_update_info_by_book_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_word_update_info_by_book_result get_word_update_info_by_book_result) {
////                get_word_update_info_by_book_result.validate();
////                get_word_update_info_by_book_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_word_update_info_by_book_result.success != null) {
////                    fVar.mo18496a(get_word_update_info_by_book_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_word_update_info_by_book_result.success.size()));
////                    for (BBWordUpdateInfo write : get_word_update_info_by_book_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_word_update_info_by_book_result.sysException != null) {
////                    fVar.mo18496a(get_word_update_info_by_book_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_word_update_info_by_book_result.sysException.write(fVar);
////                }
////                if (get_word_update_info_by_book_result.logicException != null) {
////                    fVar.mo18496a(get_word_update_info_by_book_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_word_update_info_by_book_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_word_update_info_by_book_resultStandardSchemeFactory implements C2109b {
////            private get_word_update_info_by_book_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_update_info_by_book_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_update_info_by_book_resultStandardScheme getScheme() {
////                return new get_word_update_info_by_book_resultStandardScheme(null);
////            }
////        }
////
////        class get_word_update_info_by_book_resultTupleScheme extends C2111d<get_word_update_info_by_book_result> {
////            private get_word_update_info_by_book_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_word_update_info_by_book_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_word_update_info_by_book_result get_word_update_info_by_book_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_word_update_info_by_book_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_word_update_info_by_book_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_word_update_info_by_book_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_word_update_info_by_book_result.isSetSuccess()) {
////                    lVar.mo18493a(get_word_update_info_by_book_result.success.size());
////                    for (BBWordUpdateInfo write : get_word_update_info_by_book_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_word_update_info_by_book_result.isSetSysException()) {
////                    get_word_update_info_by_book_result.sysException.write(lVar);
////                }
////                if (get_word_update_info_by_book_result.isSetLogicException()) {
////                    get_word_update_info_by_book_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_word_update_info_by_book_result get_word_update_info_by_book_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_word_update_info_by_book_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBWordUpdateInfo bBWordUpdateInfo = new BBWordUpdateInfo();
////                        bBWordUpdateInfo.read(lVar);
////                        get_word_update_info_by_book_result.success.add(bBWordUpdateInfo);
////                    }
////                    get_word_update_info_by_book_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_word_update_info_by_book_result.sysException = new BESystemException();
////                    get_word_update_info_by_book_result.sysException.read(lVar);
////                    get_word_update_info_by_book_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_word_update_info_by_book_result.logicException = new BELogicException();
////                    get_word_update_info_by_book_result.logicException.read(lVar);
////                    get_word_update_info_by_book_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_word_update_info_by_book_resultTupleSchemeFactory implements C2109b {
////            private get_word_update_info_by_book_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_update_info_by_book_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_update_info_by_book_resultTupleScheme getScheme() {
////                return new get_word_update_info_by_book_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_word_update_info_by_book_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_word_update_info_by_book_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBWordUpdateInfo.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_word_update_info_by_book_result.class, metaDataMap);
////        }
////
////        public get_word_update_info_by_book_result() {
////        }
////
////        public get_word_update_info_by_book_result(List<BBWordUpdateInfo> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_word_update_info_by_book_result(get_word_update_info_by_book_result get_word_update_info_by_book_result) {
////            if (get_word_update_info_by_book_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_word_update_info_by_book_result.success.size());
////                for (BBWordUpdateInfo bBWordUpdateInfo : get_word_update_info_by_book_result.success) {
////                    arrayList.add(new BBWordUpdateInfo(bBWordUpdateInfo));
////                }
////                this.success = arrayList;
////            }
////            if (get_word_update_info_by_book_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_word_update_info_by_book_result.sysException);
////            }
////            if (get_word_update_info_by_book_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_word_update_info_by_book_result.logicException);
////            }
////        }
////
////        public get_word_update_info_by_book_result deepCopy() {
////            return new get_word_update_info_by_book_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBWordUpdateInfo> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBWordUpdateInfo bBWordUpdateInfo) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBWordUpdateInfo);
////        }
////
////        public List<BBWordUpdateInfo> getSuccess() {
////            return this.success;
////        }
////
////        public get_word_update_info_by_book_result setSuccess(List<BBWordUpdateInfo> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_word_update_info_by_book_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_word_update_info_by_book_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_word_update_info_by_book_result)) {
////                return equals((get_word_update_info_by_book_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_word_update_info_by_book_result get_word_update_info_by_book_result) {
////            if (get_word_update_info_by_book_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_word_update_info_by_book_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_word_update_info_by_book_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_word_update_info_by_book_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_word_update_info_by_book_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_word_update_info_by_book_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_word_update_info_by_book_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_word_update_info_by_book_result get_word_update_info_by_book_result) {
////            if (!getClass().equals(get_word_update_info_by_book_result.getClass())) {
////                return getClass().getName().compareTo(get_word_update_info_by_book_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_word_update_info_by_book_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_word_update_info_by_book_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_word_update_info_by_book_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_word_update_info_by_book_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_word_update_info_by_book_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_word_update_info_by_book_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_word_update_info_by_book_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_word_update_md5_by_book_args implements Serializable, Cloneable, Comparable<get_word_update_md5_by_book_args>, C2116f<get_word_update_md5_by_book_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_word_update_md5_by_book_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_word_update_md5_by_book_argsStandardScheme extends C2110c<get_word_update_md5_by_book_args> {
////            private get_word_update_md5_by_book_argsStandardScheme() {
////            }
////
////            /* synthetic */ get_word_update_md5_by_book_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_word_update_md5_by_book_args get_word_update_md5_by_book_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_update_md5_by_book_args.word_level_id = fVar.mo18513n();
////                                    get_word_update_md5_by_book_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!get_word_update_md5_by_book_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        get_word_update_md5_by_book_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_word_update_md5_by_book_args get_word_update_md5_by_book_args) {
////                get_word_update_md5_by_book_args.validate();
////                get_word_update_md5_by_book_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(get_word_update_md5_by_book_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(get_word_update_md5_by_book_args.word_level_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_word_update_md5_by_book_argsStandardSchemeFactory implements C2109b {
////            private get_word_update_md5_by_book_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_update_md5_by_book_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_update_md5_by_book_argsStandardScheme getScheme() {
////                return new get_word_update_md5_by_book_argsStandardScheme(null);
////            }
////        }
////
////        class get_word_update_md5_by_book_argsTupleScheme extends C2111d<get_word_update_md5_by_book_args> {
////            private get_word_update_md5_by_book_argsTupleScheme() {
////            }
////
////            /* synthetic */ get_word_update_md5_by_book_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_word_update_md5_by_book_args get_word_update_md5_by_book_args) {
////                ((C2106l) fVar).mo18493a(get_word_update_md5_by_book_args.word_level_id);
////            }
////
////            public void read(C2100f fVar, get_word_update_md5_by_book_args get_word_update_md5_by_book_args) {
////                get_word_update_md5_by_book_args.word_level_id = ((C2106l) fVar).mo18513n();
////                get_word_update_md5_by_book_args.setWord_level_idIsSet(true);
////            }
////        }
////
////        class get_word_update_md5_by_book_argsTupleSchemeFactory implements C2109b {
////            private get_word_update_md5_by_book_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_update_md5_by_book_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_update_md5_by_book_argsTupleScheme getScheme() {
////                return new get_word_update_md5_by_book_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_word_update_md5_by_book_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_word_update_md5_by_book_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_word_update_md5_by_book_args.class, metaDataMap);
////        }
////
////        public get_word_update_md5_by_book_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public get_word_update_md5_by_book_args(int i) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////        }
////
////        public get_word_update_md5_by_book_args(get_word_update_md5_by_book_args get_word_update_md5_by_book_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = get_word_update_md5_by_book_args.__isset_bitfield;
////            this.word_level_id = get_word_update_md5_by_book_args.word_level_id;
////        }
////
////        public get_word_update_md5_by_book_args deepCopy() {
////            return new get_word_update_md5_by_book_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public get_word_update_md5_by_book_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_word_update_md5_by_book_args)) {
////                return equals((get_word_update_md5_by_book_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_word_update_md5_by_book_args get_word_update_md5_by_book_args) {
////            if (get_word_update_md5_by_book_args != null && this.word_level_id == get_word_update_md5_by_book_args.word_level_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_word_update_md5_by_book_args get_word_update_md5_by_book_args) {
////            if (!getClass().equals(get_word_update_md5_by_book_args.getClass())) {
////                return getClass().getName().compareTo(get_word_update_md5_by_book_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(get_word_update_md5_by_book_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, get_word_update_md5_by_book_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_word_update_md5_by_book_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class get_word_update_md5_by_book_result implements Serializable, Cloneable, Comparable<get_word_update_md5_by_book_result>, C2116f<get_word_update_md5_by_book_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("get_word_update_md5_by_book_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public List<BBWordUpdateMD5> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class get_word_update_md5_by_book_resultStandardScheme extends C2110c<get_word_update_md5_by_book_result> {
////            private get_word_update_md5_by_book_resultStandardScheme() {
////            }
////
////            /* synthetic */ get_word_update_md5_by_book_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, get_word_update_md5_by_book_result get_word_update_md5_by_book_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    get_word_update_md5_by_book_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBWordUpdateMD5 bBWordUpdateMD5 = new BBWordUpdateMD5();
////                                        bBWordUpdateMD5.read(fVar);
////                                        get_word_update_md5_by_book_result.success.add(bBWordUpdateMD5);
////                                    }
////                                    get_word_update_md5_by_book_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_update_md5_by_book_result.sysException = new BESystemException();
////                                    get_word_update_md5_by_book_result.sysException.read(fVar);
////                                    get_word_update_md5_by_book_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    get_word_update_md5_by_book_result.logicException = new BELogicException();
////                                    get_word_update_md5_by_book_result.logicException.read(fVar);
////                                    get_word_update_md5_by_book_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        get_word_update_md5_by_book_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, get_word_update_md5_by_book_result get_word_update_md5_by_book_result) {
////                get_word_update_md5_by_book_result.validate();
////                get_word_update_md5_by_book_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (get_word_update_md5_by_book_result.success != null) {
////                    fVar.mo18496a(get_word_update_md5_by_book_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, get_word_update_md5_by_book_result.success.size()));
////                    for (BBWordUpdateMD5 write : get_word_update_md5_by_book_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (get_word_update_md5_by_book_result.sysException != null) {
////                    fVar.mo18496a(get_word_update_md5_by_book_result.SYS_EXCEPTION_FIELD_DESC);
////                    get_word_update_md5_by_book_result.sysException.write(fVar);
////                }
////                if (get_word_update_md5_by_book_result.logicException != null) {
////                    fVar.mo18496a(get_word_update_md5_by_book_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    get_word_update_md5_by_book_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class get_word_update_md5_by_book_resultStandardSchemeFactory implements C2109b {
////            private get_word_update_md5_by_book_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_update_md5_by_book_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_update_md5_by_book_resultStandardScheme getScheme() {
////                return new get_word_update_md5_by_book_resultStandardScheme(null);
////            }
////        }
////
////        class get_word_update_md5_by_book_resultTupleScheme extends C2111d<get_word_update_md5_by_book_result> {
////            private get_word_update_md5_by_book_resultTupleScheme() {
////            }
////
////            /* synthetic */ get_word_update_md5_by_book_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, get_word_update_md5_by_book_result get_word_update_md5_by_book_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (get_word_update_md5_by_book_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (get_word_update_md5_by_book_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (get_word_update_md5_by_book_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (get_word_update_md5_by_book_result.isSetSuccess()) {
////                    lVar.mo18493a(get_word_update_md5_by_book_result.success.size());
////                    for (BBWordUpdateMD5 write : get_word_update_md5_by_book_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (get_word_update_md5_by_book_result.isSetSysException()) {
////                    get_word_update_md5_by_book_result.sysException.write(lVar);
////                }
////                if (get_word_update_md5_by_book_result.isSetLogicException()) {
////                    get_word_update_md5_by_book_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, get_word_update_md5_by_book_result get_word_update_md5_by_book_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    get_word_update_md5_by_book_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBWordUpdateMD5 bBWordUpdateMD5 = new BBWordUpdateMD5();
////                        bBWordUpdateMD5.read(lVar);
////                        get_word_update_md5_by_book_result.success.add(bBWordUpdateMD5);
////                    }
////                    get_word_update_md5_by_book_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    get_word_update_md5_by_book_result.sysException = new BESystemException();
////                    get_word_update_md5_by_book_result.sysException.read(lVar);
////                    get_word_update_md5_by_book_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    get_word_update_md5_by_book_result.logicException = new BELogicException();
////                    get_word_update_md5_by_book_result.logicException.read(lVar);
////                    get_word_update_md5_by_book_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class get_word_update_md5_by_book_resultTupleSchemeFactory implements C2109b {
////            private get_word_update_md5_by_book_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ get_word_update_md5_by_book_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public get_word_update_md5_by_book_resultTupleScheme getScheme() {
////                return new get_word_update_md5_by_book_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new get_word_update_md5_by_book_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new get_word_update_md5_by_book_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBWordUpdateMD5.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(get_word_update_md5_by_book_result.class, metaDataMap);
////        }
////
////        public get_word_update_md5_by_book_result() {
////        }
////
////        public get_word_update_md5_by_book_result(List<BBWordUpdateMD5> list, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public get_word_update_md5_by_book_result(get_word_update_md5_by_book_result get_word_update_md5_by_book_result) {
////            if (get_word_update_md5_by_book_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(get_word_update_md5_by_book_result.success.size());
////                for (BBWordUpdateMD5 bBWordUpdateMD5 : get_word_update_md5_by_book_result.success) {
////                    arrayList.add(new BBWordUpdateMD5(bBWordUpdateMD5));
////                }
////                this.success = arrayList;
////            }
////            if (get_word_update_md5_by_book_result.isSetSysException()) {
////                this.sysException = new BESystemException(get_word_update_md5_by_book_result.sysException);
////            }
////            if (get_word_update_md5_by_book_result.isSetLogicException()) {
////                this.logicException = new BELogicException(get_word_update_md5_by_book_result.logicException);
////            }
////        }
////
////        public get_word_update_md5_by_book_result deepCopy() {
////            return new get_word_update_md5_by_book_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBWordUpdateMD5> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBWordUpdateMD5 bBWordUpdateMD5) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBWordUpdateMD5);
////        }
////
////        public List<BBWordUpdateMD5> getSuccess() {
////            return this.success;
////        }
////
////        public get_word_update_md5_by_book_result setSuccess(List<BBWordUpdateMD5> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public get_word_update_md5_by_book_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public get_word_update_md5_by_book_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof get_word_update_md5_by_book_result)) {
////                return equals((get_word_update_md5_by_book_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(get_word_update_md5_by_book_result get_word_update_md5_by_book_result) {
////            if (get_word_update_md5_by_book_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = get_word_update_md5_by_book_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(get_word_update_md5_by_book_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = get_word_update_md5_by_book_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(get_word_update_md5_by_book_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = get_word_update_md5_by_book_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(get_word_update_md5_by_book_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(get_word_update_md5_by_book_result get_word_update_md5_by_book_result) {
////            if (!getClass().equals(get_word_update_md5_by_book_result.getClass())) {
////                return getClass().getName().compareTo(get_word_update_md5_by_book_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(get_word_update_md5_by_book_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) get_word_update_md5_by_book_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(get_word_update_md5_by_book_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) get_word_update_md5_by_book_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(get_word_update_md5_by_book_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) get_word_update_md5_by_book_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("get_word_update_md5_by_book_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class have_a_try_args implements Serializable, Cloneable, Comparable<have_a_try_args>, C2116f<have_a_try_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("have_a_try_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class have_a_try_argsStandardScheme extends C2110c<have_a_try_args> {
////            private have_a_try_argsStandardScheme() {
////            }
////
////            /* synthetic */ have_a_try_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, have_a_try_args have_a_try_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        have_a_try_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, have_a_try_args have_a_try_args) {
////                have_a_try_args.validate();
////                have_a_try_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class have_a_try_argsStandardSchemeFactory implements C2109b {
////            private have_a_try_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ have_a_try_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public have_a_try_argsStandardScheme getScheme() {
////                return new have_a_try_argsStandardScheme(null);
////            }
////        }
////
////        class have_a_try_argsTupleScheme extends C2111d<have_a_try_args> {
////            private have_a_try_argsTupleScheme() {
////            }
////
////            /* synthetic */ have_a_try_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, have_a_try_args have_a_try_args) {
////            }
////
////            public void read(C2100f fVar, have_a_try_args have_a_try_args) {
////            }
////        }
////
////        class have_a_try_argsTupleSchemeFactory implements C2109b {
////            private have_a_try_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ have_a_try_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public have_a_try_argsTupleScheme getScheme() {
////                return new have_a_try_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new have_a_try_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new have_a_try_argsTupleSchemeFactory(null));
////            C2091a.m5430a(have_a_try_args.class, metaDataMap);
////        }
////
////        public have_a_try_args() {
////        }
////
////        public have_a_try_args(have_a_try_args have_a_try_args) {
////        }
////
////        public have_a_try_args deepCopy() {
////            return new have_a_try_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2490xea1f9c28;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2490xea1f9c28;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2490xea1f9c28;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof have_a_try_args)) {
////                return equals((have_a_try_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(have_a_try_args have_a_try_args) {
////            if (have_a_try_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(have_a_try_args have_a_try_args) {
////            if (!getClass().equals(have_a_try_args.getClass())) {
////                return getClass().getName().compareTo(have_a_try_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("have_a_try_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class have_a_try_result implements Serializable, Cloneable, Comparable<have_a_try_result>, C2116f<have_a_try_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("have_a_try_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBCreateTryResult success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class have_a_try_resultStandardScheme extends C2110c<have_a_try_result> {
////            private have_a_try_resultStandardScheme() {
////            }
////
////            /* synthetic */ have_a_try_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, have_a_try_result have_a_try_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    have_a_try_result.success = new BBCreateTryResult();
////                                    have_a_try_result.success.read(fVar);
////                                    have_a_try_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    have_a_try_result.sysException = new BESystemException();
////                                    have_a_try_result.sysException.read(fVar);
////                                    have_a_try_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        have_a_try_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, have_a_try_result have_a_try_result) {
////                have_a_try_result.validate();
////                have_a_try_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (have_a_try_result.success != null) {
////                    fVar.mo18496a(have_a_try_result.SUCCESS_FIELD_DESC);
////                    have_a_try_result.success.write(fVar);
////                }
////                if (have_a_try_result.sysException != null) {
////                    fVar.mo18496a(have_a_try_result.SYS_EXCEPTION_FIELD_DESC);
////                    have_a_try_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class have_a_try_resultStandardSchemeFactory implements C2109b {
////            private have_a_try_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ have_a_try_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public have_a_try_resultStandardScheme getScheme() {
////                return new have_a_try_resultStandardScheme(null);
////            }
////        }
////
////        class have_a_try_resultTupleScheme extends C2111d<have_a_try_result> {
////            private have_a_try_resultTupleScheme() {
////            }
////
////            /* synthetic */ have_a_try_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, have_a_try_result have_a_try_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (have_a_try_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (have_a_try_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (have_a_try_result.isSetSuccess()) {
////                    have_a_try_result.success.write(lVar);
////                }
////                if (have_a_try_result.isSetSysException()) {
////                    have_a_try_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, have_a_try_result have_a_try_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    have_a_try_result.success = new BBCreateTryResult();
////                    have_a_try_result.success.read(lVar);
////                    have_a_try_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    have_a_try_result.sysException = new BESystemException();
////                    have_a_try_result.sysException.read(lVar);
////                    have_a_try_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class have_a_try_resultTupleSchemeFactory implements C2109b {
////            private have_a_try_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ have_a_try_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public have_a_try_resultTupleScheme getScheme() {
////                return new have_a_try_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new have_a_try_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new have_a_try_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBCreateTryResult.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(have_a_try_result.class, metaDataMap);
////        }
////
////        public have_a_try_result() {
////        }
////
////        public have_a_try_result(BBCreateTryResult bBCreateTryResult, BESystemException bESystemException) {
////            this();
////            this.success = bBCreateTryResult;
////            this.sysException = bESystemException;
////        }
////
////        public have_a_try_result(have_a_try_result have_a_try_result) {
////            if (have_a_try_result.isSetSuccess()) {
////                this.success = new BBCreateTryResult(have_a_try_result.success);
////            }
////            if (have_a_try_result.isSetSysException()) {
////                this.sysException = new BESystemException(have_a_try_result.sysException);
////            }
////        }
////
////        public have_a_try_result deepCopy() {
////            return new have_a_try_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////        }
////
////        public BBCreateTryResult getSuccess() {
////            return this.success;
////        }
////
////        public have_a_try_result setSuccess(BBCreateTryResult bBCreateTryResult) {
////            this.success = bBCreateTryResult;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public have_a_try_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBCreateTryResult) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof have_a_try_result)) {
////                return equals((have_a_try_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(have_a_try_result have_a_try_result) {
////            if (have_a_try_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = have_a_try_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(have_a_try_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = have_a_try_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(have_a_try_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(have_a_try_result have_a_try_result) {
////            if (!getClass().equals(have_a_try_result.getClass())) {
////                return getClass().getName().compareTo(have_a_try_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(have_a_try_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) have_a_try_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(have_a_try_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) have_a_try_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("have_a_try_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class login_args implements Serializable, Cloneable, Comparable<login_args>, C2116f<login_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b EMAIL_FIELD_DESC = new C2097b("email", JceStruct.STRUCT_END, 1);
////        /* access modifiers changed from: private */
////        public static final C2097b PASSWORD_FIELD_DESC = new C2097b("password", JceStruct.STRUCT_END, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("login_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public String email;
////        public String password;
////
////        public enum _Fields implements C2124m {
////            EMAIL(1, "email"),
////            PASSWORD(2, "password");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return EMAIL;
////                    case 2:
////                        return PASSWORD;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class login_argsStandardScheme extends C2110c<login_args> {
////            private login_argsStandardScheme() {
////            }
////
////            /* synthetic */ login_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, login_args login_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    login_args.email = fVar.mo18516q();
////                                    login_args.setEmailIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    login_args.password = fVar.mo18516q();
////                                    login_args.setPasswordIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        login_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, login_args login_args) {
////                login_args.validate();
////                login_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (login_args.email != null) {
////                    fVar.mo18496a(login_args.EMAIL_FIELD_DESC);
////                    fVar.mo18495a(login_args.email);
////                }
////                if (login_args.password != null) {
////                    fVar.mo18496a(login_args.PASSWORD_FIELD_DESC);
////                    fVar.mo18495a(login_args.password);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class login_argsStandardSchemeFactory implements C2109b {
////            private login_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ login_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public login_argsStandardScheme getScheme() {
////                return new login_argsStandardScheme(null);
////            }
////        }
////
////        class login_argsTupleScheme extends C2111d<login_args> {
////            private login_argsTupleScheme() {
////            }
////
////            /* synthetic */ login_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, login_args login_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18495a(login_args.email);
////                lVar.mo18495a(login_args.password);
////            }
////
////            public void read(C2100f fVar, login_args login_args) {
////                C2106l lVar = (C2106l) fVar;
////                login_args.email = lVar.mo18516q();
////                login_args.setEmailIsSet(true);
////                login_args.password = lVar.mo18516q();
////                login_args.setPasswordIsSet(true);
////            }
////        }
////
////        class login_argsTupleSchemeFactory implements C2109b {
////            private login_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ login_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public login_argsTupleScheme getScheme() {
////                return new login_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new login_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new login_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.EMAIL, new C2091a("email", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            enumMap.put(_Fields.PASSWORD, new C2091a("password", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(login_args.class, metaDataMap);
////        }
////
////        public login_args() {
////        }
////
////        public login_args(String str, String str2) {
////            this();
////            this.email = str;
////            this.password = str2;
////        }
////
////        public login_args(login_args login_args) {
////            if (login_args.isSetEmail()) {
////                this.email = login_args.email;
////            }
////            if (login_args.isSetPassword()) {
////                this.password = login_args.password;
////            }
////        }
////
////        public login_args deepCopy() {
////            return new login_args(this);
////        }
////
////        public void clear() {
////            this.email = null;
////            this.password = null;
////        }
////
////        public String getEmail() {
////            return this.email;
////        }
////
////        public login_args setEmail(String str) {
////            this.email = str;
////            return this;
////        }
////
////        public void unsetEmail() {
////            this.email = null;
////        }
////
////        public boolean isSetEmail() {
////            return this.email != null;
////        }
////
////        public void setEmailIsSet(boolean z) {
////            if (!z) {
////                this.email = null;
////            }
////        }
////
////        public String getPassword() {
////            return this.password;
////        }
////
////        public login_args setPassword(String str) {
////            this.password = str;
////            return this;
////        }
////
////        public void unsetPassword() {
////            this.password = null;
////        }
////
////        public boolean isSetPassword() {
////            return this.password != null;
////        }
////
////        public void setPasswordIsSet(boolean z) {
////            if (!z) {
////                this.password = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case EMAIL:
////                    if (obj == null) {
////                        unsetEmail();
////                        return;
////                    } else {
////                        setEmail((String) obj);
////                        return;
////                    }
////                case PASSWORD:
////                    if (obj == null) {
////                        unsetPassword();
////                        return;
////                    } else {
////                        setPassword((String) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case EMAIL:
////                    return getEmail();
////                case PASSWORD:
////                    return getPassword();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case EMAIL:
////                    return isSetEmail();
////                case PASSWORD:
////                    return isSetPassword();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof login_args)) {
////                return equals((login_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(login_args login_args) {
////            if (login_args == null) {
////                return false;
////            }
////            boolean isSetEmail = isSetEmail();
////            boolean isSetEmail2 = login_args.isSetEmail();
////            if ((isSetEmail || isSetEmail2) && (!isSetEmail || !isSetEmail2 || !this.email.equals(login_args.email))) {
////                return false;
////            }
////            boolean isSetPassword = isSetPassword();
////            boolean isSetPassword2 = login_args.isSetPassword();
////            if ((isSetPassword || isSetPassword2) && (!isSetPassword || !isSetPassword2 || !this.password.equals(login_args.password))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(login_args login_args) {
////            if (!getClass().equals(login_args.getClass())) {
////                return getClass().getName().compareTo(login_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetEmail()).compareTo(Boolean.valueOf(login_args.isSetEmail()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetEmail()) {
////                int a = C2121h.m5525a(this.email, login_args.email);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetPassword()).compareTo(Boolean.valueOf(login_args.isSetPassword()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetPassword()) {
////                int a2 = C2121h.m5525a(this.password, login_args.password);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("login_args(");
////            sb.append("email:");
////            if (this.email == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.email);
////            }
////            sb.append(", ");
////            sb.append("password:");
////            if (this.password == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.password);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.email == null) {
////                throw new C2101g("Required field 'email' was not present! Struct: " + toString());
////            } else if (this.password == null) {
////                throw new C2101g("Required field 'password' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class login_result implements Serializable, Cloneable, Comparable<login_result>, C2116f<login_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("login_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBLoginResult success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class login_resultStandardScheme extends C2110c<login_result> {
////            private login_resultStandardScheme() {
////            }
////
////            /* synthetic */ login_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, login_result login_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    login_result.success = new BBLoginResult();
////                                    login_result.success.read(fVar);
////                                    login_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    login_result.sysException = new BESystemException();
////                                    login_result.sysException.read(fVar);
////                                    login_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    login_result.logicException = new BELogicException();
////                                    login_result.logicException.read(fVar);
////                                    login_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        login_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, login_result login_result) {
////                login_result.validate();
////                login_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (login_result.success != null) {
////                    fVar.mo18496a(login_result.SUCCESS_FIELD_DESC);
////                    login_result.success.write(fVar);
////                }
////                if (login_result.sysException != null) {
////                    fVar.mo18496a(login_result.SYS_EXCEPTION_FIELD_DESC);
////                    login_result.sysException.write(fVar);
////                }
////                if (login_result.logicException != null) {
////                    fVar.mo18496a(login_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    login_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class login_resultStandardSchemeFactory implements C2109b {
////            private login_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ login_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public login_resultStandardScheme getScheme() {
////                return new login_resultStandardScheme(null);
////            }
////        }
////
////        class login_resultTupleScheme extends C2111d<login_result> {
////            private login_resultTupleScheme() {
////            }
////
////            /* synthetic */ login_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, login_result login_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (login_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (login_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (login_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (login_result.isSetSuccess()) {
////                    login_result.success.write(lVar);
////                }
////                if (login_result.isSetSysException()) {
////                    login_result.sysException.write(lVar);
////                }
////                if (login_result.isSetLogicException()) {
////                    login_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, login_result login_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    login_result.success = new BBLoginResult();
////                    login_result.success.read(lVar);
////                    login_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    login_result.sysException = new BESystemException();
////                    login_result.sysException.read(lVar);
////                    login_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    login_result.logicException = new BELogicException();
////                    login_result.logicException.read(lVar);
////                    login_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class login_resultTupleSchemeFactory implements C2109b {
////            private login_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ login_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public login_resultTupleScheme getScheme() {
////                return new login_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new login_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new login_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBLoginResult.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(login_result.class, metaDataMap);
////        }
////
////        public login_result() {
////        }
////
////        public login_result(BBLoginResult bBLoginResult, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBLoginResult;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public login_result(login_result login_result) {
////            if (login_result.isSetSuccess()) {
////                this.success = new BBLoginResult(login_result.success);
////            }
////            if (login_result.isSetSysException()) {
////                this.sysException = new BESystemException(login_result.sysException);
////            }
////            if (login_result.isSetLogicException()) {
////                this.logicException = new BELogicException(login_result.logicException);
////            }
////        }
////
////        public login_result deepCopy() {
////            return new login_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBLoginResult getSuccess() {
////            return this.success;
////        }
////
////        public login_result setSuccess(BBLoginResult bBLoginResult) {
////            this.success = bBLoginResult;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public login_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public login_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBLoginResult) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof login_result)) {
////                return equals((login_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(login_result login_result) {
////            if (login_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = login_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(login_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = login_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(login_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = login_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(login_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(login_result login_result) {
////            if (!getClass().equals(login_result.getClass())) {
////                return getClass().getName().compareTo(login_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(login_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) login_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(login_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) login_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(login_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) login_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("login_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class merge_already_learned_words_args implements Serializable, Cloneable, Comparable<merge_already_learned_words_args>, C2116f<merge_already_learned_words_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b BOOK_ID_FIELD_DESC = new C2097b("book_id", 8, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("merge_already_learned_words_args");
////        private static final int __BOOK_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int book_id;
////
////        public enum _Fields implements C2124m {
////            BOOK_ID(1, "book_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return BOOK_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class merge_already_learned_words_argsStandardScheme extends C2110c<merge_already_learned_words_args> {
////            private merge_already_learned_words_argsStandardScheme() {
////            }
////
////            /* synthetic */ merge_already_learned_words_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, merge_already_learned_words_args merge_already_learned_words_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    merge_already_learned_words_args.book_id = fVar.mo18513n();
////                                    merge_already_learned_words_args.setBook_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!merge_already_learned_words_args.isSetBook_id()) {
////                            throw new C2101g("Required field 'book_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        merge_already_learned_words_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, merge_already_learned_words_args merge_already_learned_words_args) {
////                merge_already_learned_words_args.validate();
////                merge_already_learned_words_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(merge_already_learned_words_args.BOOK_ID_FIELD_DESC);
////                fVar.mo18493a(merge_already_learned_words_args.book_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class merge_already_learned_words_argsStandardSchemeFactory implements C2109b {
////            private merge_already_learned_words_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ merge_already_learned_words_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public merge_already_learned_words_argsStandardScheme getScheme() {
////                return new merge_already_learned_words_argsStandardScheme(null);
////            }
////        }
////
////        class merge_already_learned_words_argsTupleScheme extends C2111d<merge_already_learned_words_args> {
////            private merge_already_learned_words_argsTupleScheme() {
////            }
////
////            /* synthetic */ merge_already_learned_words_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, merge_already_learned_words_args merge_already_learned_words_args) {
////                ((C2106l) fVar).mo18493a(merge_already_learned_words_args.book_id);
////            }
////
////            public void read(C2100f fVar, merge_already_learned_words_args merge_already_learned_words_args) {
////                merge_already_learned_words_args.book_id = ((C2106l) fVar).mo18513n();
////                merge_already_learned_words_args.setBook_idIsSet(true);
////            }
////        }
////
////        class merge_already_learned_words_argsTupleSchemeFactory implements C2109b {
////            private merge_already_learned_words_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ merge_already_learned_words_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public merge_already_learned_words_argsTupleScheme getScheme() {
////                return new merge_already_learned_words_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new merge_already_learned_words_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new merge_already_learned_words_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.BOOK_ID, new C2091a("book_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(merge_already_learned_words_args.class, metaDataMap);
////        }
////
////        public merge_already_learned_words_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public merge_already_learned_words_args(int i) {
////            this();
////            this.book_id = i;
////            setBook_idIsSet(true);
////        }
////
////        public merge_already_learned_words_args(merge_already_learned_words_args merge_already_learned_words_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = merge_already_learned_words_args.__isset_bitfield;
////            this.book_id = merge_already_learned_words_args.book_id;
////        }
////
////        public merge_already_learned_words_args deepCopy() {
////            return new merge_already_learned_words_args(this);
////        }
////
////        public void clear() {
////            setBook_idIsSet(false);
////            this.book_id = 0;
////        }
////
////        public int getBook_id() {
////            return this.book_id;
////        }
////
////        public merge_already_learned_words_args setBook_id(int i) {
////            this.book_id = i;
////            setBook_idIsSet(true);
////            return this;
////        }
////
////        public void unsetBook_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetBook_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setBook_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case BOOK_ID:
////                    if (obj == null) {
////                        unsetBook_id();
////                        return;
////                    } else {
////                        setBook_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case BOOK_ID:
////                    return Integer.valueOf(getBook_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case BOOK_ID:
////                    return isSetBook_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof merge_already_learned_words_args)) {
////                return equals((merge_already_learned_words_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(merge_already_learned_words_args merge_already_learned_words_args) {
////            if (merge_already_learned_words_args != null && this.book_id == merge_already_learned_words_args.book_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(merge_already_learned_words_args merge_already_learned_words_args) {
////            if (!getClass().equals(merge_already_learned_words_args.getClass())) {
////                return getClass().getName().compareTo(merge_already_learned_words_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetBook_id()).compareTo(Boolean.valueOf(merge_already_learned_words_args.isSetBook_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetBook_id()) {
////                int a = C2121h.m5522a(this.book_id, merge_already_learned_words_args.book_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("merge_already_learned_words_args(");
////            sb.append("book_id:");
////            sb.append(this.book_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class merge_already_learned_words_result implements Serializable, Cloneable, Comparable<merge_already_learned_words_result>, C2116f<merge_already_learned_words_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("merge_already_learned_words_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class merge_already_learned_words_resultStandardScheme extends C2110c<merge_already_learned_words_result> {
////            private merge_already_learned_words_resultStandardScheme() {
////            }
////
////            /* synthetic */ merge_already_learned_words_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, merge_already_learned_words_result merge_already_learned_words_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    merge_already_learned_words_result.success = fVar.mo18513n();
////                                    merge_already_learned_words_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    merge_already_learned_words_result.sysException = new BESystemException();
////                                    merge_already_learned_words_result.sysException.read(fVar);
////                                    merge_already_learned_words_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    merge_already_learned_words_result.logicException = new BELogicException();
////                                    merge_already_learned_words_result.logicException.read(fVar);
////                                    merge_already_learned_words_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        merge_already_learned_words_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, merge_already_learned_words_result merge_already_learned_words_result) {
////                merge_already_learned_words_result.validate();
////                merge_already_learned_words_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (merge_already_learned_words_result.isSetSuccess()) {
////                    fVar.mo18496a(merge_already_learned_words_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(merge_already_learned_words_result.success);
////                }
////                if (merge_already_learned_words_result.sysException != null) {
////                    fVar.mo18496a(merge_already_learned_words_result.SYS_EXCEPTION_FIELD_DESC);
////                    merge_already_learned_words_result.sysException.write(fVar);
////                }
////                if (merge_already_learned_words_result.logicException != null) {
////                    fVar.mo18496a(merge_already_learned_words_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    merge_already_learned_words_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class merge_already_learned_words_resultStandardSchemeFactory implements C2109b {
////            private merge_already_learned_words_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ merge_already_learned_words_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public merge_already_learned_words_resultStandardScheme getScheme() {
////                return new merge_already_learned_words_resultStandardScheme(null);
////            }
////        }
////
////        class merge_already_learned_words_resultTupleScheme extends C2111d<merge_already_learned_words_result> {
////            private merge_already_learned_words_resultTupleScheme() {
////            }
////
////            /* synthetic */ merge_already_learned_words_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, merge_already_learned_words_result merge_already_learned_words_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (merge_already_learned_words_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (merge_already_learned_words_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (merge_already_learned_words_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (merge_already_learned_words_result.isSetSuccess()) {
////                    lVar.mo18493a(merge_already_learned_words_result.success);
////                }
////                if (merge_already_learned_words_result.isSetSysException()) {
////                    merge_already_learned_words_result.sysException.write(lVar);
////                }
////                if (merge_already_learned_words_result.isSetLogicException()) {
////                    merge_already_learned_words_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, merge_already_learned_words_result merge_already_learned_words_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    merge_already_learned_words_result.success = lVar.mo18513n();
////                    merge_already_learned_words_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    merge_already_learned_words_result.sysException = new BESystemException();
////                    merge_already_learned_words_result.sysException.read(lVar);
////                    merge_already_learned_words_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    merge_already_learned_words_result.logicException = new BELogicException();
////                    merge_already_learned_words_result.logicException.read(lVar);
////                    merge_already_learned_words_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class merge_already_learned_words_resultTupleSchemeFactory implements C2109b {
////            private merge_already_learned_words_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ merge_already_learned_words_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public merge_already_learned_words_resultTupleScheme getScheme() {
////                return new merge_already_learned_words_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new merge_already_learned_words_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new merge_already_learned_words_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(merge_already_learned_words_result.class, metaDataMap);
////        }
////
////        public merge_already_learned_words_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public merge_already_learned_words_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public merge_already_learned_words_result(merge_already_learned_words_result merge_already_learned_words_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = merge_already_learned_words_result.__isset_bitfield;
////            this.success = merge_already_learned_words_result.success;
////            if (merge_already_learned_words_result.isSetSysException()) {
////                this.sysException = new BESystemException(merge_already_learned_words_result.sysException);
////            }
////            if (merge_already_learned_words_result.isSetLogicException()) {
////                this.logicException = new BELogicException(merge_already_learned_words_result.logicException);
////            }
////        }
////
////        public merge_already_learned_words_result deepCopy() {
////            return new merge_already_learned_words_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public merge_already_learned_words_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public merge_already_learned_words_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public merge_already_learned_words_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof merge_already_learned_words_result)) {
////                return equals((merge_already_learned_words_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(merge_already_learned_words_result merge_already_learned_words_result) {
////            if (merge_already_learned_words_result == null || this.success != merge_already_learned_words_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = merge_already_learned_words_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(merge_already_learned_words_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = merge_already_learned_words_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(merge_already_learned_words_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(merge_already_learned_words_result merge_already_learned_words_result) {
////            if (!getClass().equals(merge_already_learned_words_result.getClass())) {
////                return getClass().getName().compareTo(merge_already_learned_words_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(merge_already_learned_words_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, merge_already_learned_words_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(merge_already_learned_words_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) merge_already_learned_words_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(merge_already_learned_words_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) merge_already_learned_words_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("merge_already_learned_words_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class modify_password_args implements Serializable, Cloneable, Comparable<modify_password_args>, C2116f<modify_password_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b EMAIL_FIELD_DESC = new C2097b("email", JceStruct.STRUCT_END, 1);
////        /* access modifiers changed from: private */
////        public static final C2097b NEW_PASSWORD_FIELD_DESC = new C2097b("new_password", JceStruct.STRUCT_END, 3);
////        /* access modifiers changed from: private */
////        public static final C2097b OLD_PASSWORD_FIELD_DESC = new C2097b("old_password", JceStruct.STRUCT_END, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("modify_password_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public String email;
////        public String new_password;
////        public String old_password;
////
////        public enum _Fields implements C2124m {
////            EMAIL(1, "email"),
////            OLD_PASSWORD(2, "old_password"),
////            NEW_PASSWORD(3, "new_password");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return EMAIL;
////                    case 2:
////                        return OLD_PASSWORD;
////                    case 3:
////                        return NEW_PASSWORD;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class modify_password_argsStandardScheme extends C2110c<modify_password_args> {
////            private modify_password_argsStandardScheme() {
////            }
////
////            /* synthetic */ modify_password_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, modify_password_args modify_password_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    modify_password_args.email = fVar.mo18516q();
////                                    modify_password_args.setEmailIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    modify_password_args.old_password = fVar.mo18516q();
////                                    modify_password_args.setOld_passwordIsSet(true);
////                                    break;
////                                }
////                            case 3:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    modify_password_args.new_password = fVar.mo18516q();
////                                    modify_password_args.setNew_passwordIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        modify_password_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, modify_password_args modify_password_args) {
////                modify_password_args.validate();
////                modify_password_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (modify_password_args.email != null) {
////                    fVar.mo18496a(modify_password_args.EMAIL_FIELD_DESC);
////                    fVar.mo18495a(modify_password_args.email);
////                }
////                if (modify_password_args.old_password != null) {
////                    fVar.mo18496a(modify_password_args.OLD_PASSWORD_FIELD_DESC);
////                    fVar.mo18495a(modify_password_args.old_password);
////                }
////                if (modify_password_args.new_password != null) {
////                    fVar.mo18496a(modify_password_args.NEW_PASSWORD_FIELD_DESC);
////                    fVar.mo18495a(modify_password_args.new_password);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class modify_password_argsStandardSchemeFactory implements C2109b {
////            private modify_password_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ modify_password_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public modify_password_argsStandardScheme getScheme() {
////                return new modify_password_argsStandardScheme(null);
////            }
////        }
////
////        class modify_password_argsTupleScheme extends C2111d<modify_password_args> {
////            private modify_password_argsTupleScheme() {
////            }
////
////            /* synthetic */ modify_password_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, modify_password_args modify_password_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18495a(modify_password_args.email);
////                lVar.mo18495a(modify_password_args.old_password);
////                lVar.mo18495a(modify_password_args.new_password);
////            }
////
////            public void read(C2100f fVar, modify_password_args modify_password_args) {
////                C2106l lVar = (C2106l) fVar;
////                modify_password_args.email = lVar.mo18516q();
////                modify_password_args.setEmailIsSet(true);
////                modify_password_args.old_password = lVar.mo18516q();
////                modify_password_args.setOld_passwordIsSet(true);
////                modify_password_args.new_password = lVar.mo18516q();
////                modify_password_args.setNew_passwordIsSet(true);
////            }
////        }
////
////        class modify_password_argsTupleSchemeFactory implements C2109b {
////            private modify_password_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ modify_password_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public modify_password_argsTupleScheme getScheme() {
////                return new modify_password_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new modify_password_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new modify_password_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.EMAIL, new C2091a("email", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            enumMap.put(_Fields.OLD_PASSWORD, new C2091a("old_password", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            enumMap.put(_Fields.NEW_PASSWORD, new C2091a("new_password", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(modify_password_args.class, metaDataMap);
////        }
////
////        public modify_password_args() {
////        }
////
////        public modify_password_args(String str, String str2, String str3) {
////            this();
////            this.email = str;
////            this.old_password = str2;
////            this.new_password = str3;
////        }
////
////        public modify_password_args(modify_password_args modify_password_args) {
////            if (modify_password_args.isSetEmail()) {
////                this.email = modify_password_args.email;
////            }
////            if (modify_password_args.isSetOld_password()) {
////                this.old_password = modify_password_args.old_password;
////            }
////            if (modify_password_args.isSetNew_password()) {
////                this.new_password = modify_password_args.new_password;
////            }
////        }
////
////        public modify_password_args deepCopy() {
////            return new modify_password_args(this);
////        }
////
////        public void clear() {
////            this.email = null;
////            this.old_password = null;
////            this.new_password = null;
////        }
////
////        public String getEmail() {
////            return this.email;
////        }
////
////        public modify_password_args setEmail(String str) {
////            this.email = str;
////            return this;
////        }
////
////        public void unsetEmail() {
////            this.email = null;
////        }
////
////        public boolean isSetEmail() {
////            return this.email != null;
////        }
////
////        public void setEmailIsSet(boolean z) {
////            if (!z) {
////                this.email = null;
////            }
////        }
////
////        public String getOld_password() {
////            return this.old_password;
////        }
////
////        public modify_password_args setOld_password(String str) {
////            this.old_password = str;
////            return this;
////        }
////
////        public void unsetOld_password() {
////            this.old_password = null;
////        }
////
////        public boolean isSetOld_password() {
////            return this.old_password != null;
////        }
////
////        public void setOld_passwordIsSet(boolean z) {
////            if (!z) {
////                this.old_password = null;
////            }
////        }
////
////        public String getNew_password() {
////            return this.new_password;
////        }
////
////        public modify_password_args setNew_password(String str) {
////            this.new_password = str;
////            return this;
////        }
////
////        public void unsetNew_password() {
////            this.new_password = null;
////        }
////
////        public boolean isSetNew_password() {
////            return this.new_password != null;
////        }
////
////        public void setNew_passwordIsSet(boolean z) {
////            if (!z) {
////                this.new_password = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case EMAIL:
////                    if (obj == null) {
////                        unsetEmail();
////                        return;
////                    } else {
////                        setEmail((String) obj);
////                        return;
////                    }
////                case OLD_PASSWORD:
////                    if (obj == null) {
////                        unsetOld_password();
////                        return;
////                    } else {
////                        setOld_password((String) obj);
////                        return;
////                    }
////                case NEW_PASSWORD:
////                    if (obj == null) {
////                        unsetNew_password();
////                        return;
////                    } else {
////                        setNew_password((String) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case EMAIL:
////                    return getEmail();
////                case OLD_PASSWORD:
////                    return getOld_password();
////                case NEW_PASSWORD:
////                    return getNew_password();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case EMAIL:
////                    return isSetEmail();
////                case OLD_PASSWORD:
////                    return isSetOld_password();
////                case NEW_PASSWORD:
////                    return isSetNew_password();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof modify_password_args)) {
////                return equals((modify_password_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(modify_password_args modify_password_args) {
////            if (modify_password_args == null) {
////                return false;
////            }
////            boolean isSetEmail = isSetEmail();
////            boolean isSetEmail2 = modify_password_args.isSetEmail();
////            if ((isSetEmail || isSetEmail2) && (!isSetEmail || !isSetEmail2 || !this.email.equals(modify_password_args.email))) {
////                return false;
////            }
////            boolean isSetOld_password = isSetOld_password();
////            boolean isSetOld_password2 = modify_password_args.isSetOld_password();
////            if ((isSetOld_password || isSetOld_password2) && (!isSetOld_password || !isSetOld_password2 || !this.old_password.equals(modify_password_args.old_password))) {
////                return false;
////            }
////            boolean isSetNew_password = isSetNew_password();
////            boolean isSetNew_password2 = modify_password_args.isSetNew_password();
////            if ((isSetNew_password || isSetNew_password2) && (!isSetNew_password || !isSetNew_password2 || !this.new_password.equals(modify_password_args.new_password))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(modify_password_args modify_password_args) {
////            if (!getClass().equals(modify_password_args.getClass())) {
////                return getClass().getName().compareTo(modify_password_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetEmail()).compareTo(Boolean.valueOf(modify_password_args.isSetEmail()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetEmail()) {
////                int a = C2121h.m5525a(this.email, modify_password_args.email);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetOld_password()).compareTo(Boolean.valueOf(modify_password_args.isSetOld_password()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetOld_password()) {
////                int a2 = C2121h.m5525a(this.old_password, modify_password_args.old_password);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetNew_password()).compareTo(Boolean.valueOf(modify_password_args.isSetNew_password()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetNew_password()) {
////                int a3 = C2121h.m5525a(this.new_password, modify_password_args.new_password);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("modify_password_args(");
////            sb.append("email:");
////            if (this.email == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.email);
////            }
////            sb.append(", ");
////            sb.append("old_password:");
////            if (this.old_password == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.old_password);
////            }
////            sb.append(", ");
////            sb.append("new_password:");
////            if (this.new_password == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.new_password);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.email == null) {
////                throw new C2101g("Required field 'email' was not present! Struct: " + toString());
////            } else if (this.old_password == null) {
////                throw new C2101g("Required field 'old_password' was not present! Struct: " + toString());
////            } else if (this.new_password == null) {
////                throw new C2101g("Required field 'new_password' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class modify_password_result implements Serializable, Cloneable, Comparable<modify_password_result>, C2116f<modify_password_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("modify_password_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class modify_password_resultStandardScheme extends C2110c<modify_password_result> {
////            private modify_password_resultStandardScheme() {
////            }
////
////            /* synthetic */ modify_password_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, modify_password_result modify_password_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    modify_password_result.success = fVar.mo18513n();
////                                    modify_password_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    modify_password_result.sysException = new BESystemException();
////                                    modify_password_result.sysException.read(fVar);
////                                    modify_password_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    modify_password_result.logicException = new BELogicException();
////                                    modify_password_result.logicException.read(fVar);
////                                    modify_password_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        modify_password_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, modify_password_result modify_password_result) {
////                modify_password_result.validate();
////                modify_password_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (modify_password_result.isSetSuccess()) {
////                    fVar.mo18496a(modify_password_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(modify_password_result.success);
////                }
////                if (modify_password_result.sysException != null) {
////                    fVar.mo18496a(modify_password_result.SYS_EXCEPTION_FIELD_DESC);
////                    modify_password_result.sysException.write(fVar);
////                }
////                if (modify_password_result.logicException != null) {
////                    fVar.mo18496a(modify_password_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    modify_password_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class modify_password_resultStandardSchemeFactory implements C2109b {
////            private modify_password_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ modify_password_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public modify_password_resultStandardScheme getScheme() {
////                return new modify_password_resultStandardScheme(null);
////            }
////        }
////
////        class modify_password_resultTupleScheme extends C2111d<modify_password_result> {
////            private modify_password_resultTupleScheme() {
////            }
////
////            /* synthetic */ modify_password_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, modify_password_result modify_password_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (modify_password_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (modify_password_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (modify_password_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (modify_password_result.isSetSuccess()) {
////                    lVar.mo18493a(modify_password_result.success);
////                }
////                if (modify_password_result.isSetSysException()) {
////                    modify_password_result.sysException.write(lVar);
////                }
////                if (modify_password_result.isSetLogicException()) {
////                    modify_password_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, modify_password_result modify_password_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    modify_password_result.success = lVar.mo18513n();
////                    modify_password_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    modify_password_result.sysException = new BESystemException();
////                    modify_password_result.sysException.read(lVar);
////                    modify_password_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    modify_password_result.logicException = new BELogicException();
////                    modify_password_result.logicException.read(lVar);
////                    modify_password_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class modify_password_resultTupleSchemeFactory implements C2109b {
////            private modify_password_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ modify_password_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public modify_password_resultTupleScheme getScheme() {
////                return new modify_password_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new modify_password_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new modify_password_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(modify_password_result.class, metaDataMap);
////        }
////
////        public modify_password_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public modify_password_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public modify_password_result(modify_password_result modify_password_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = modify_password_result.__isset_bitfield;
////            this.success = modify_password_result.success;
////            if (modify_password_result.isSetSysException()) {
////                this.sysException = new BESystemException(modify_password_result.sysException);
////            }
////            if (modify_password_result.isSetLogicException()) {
////                this.logicException = new BELogicException(modify_password_result.logicException);
////            }
////        }
////
////        public modify_password_result deepCopy() {
////            return new modify_password_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public modify_password_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public modify_password_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public modify_password_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof modify_password_result)) {
////                return equals((modify_password_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(modify_password_result modify_password_result) {
////            if (modify_password_result == null || this.success != modify_password_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = modify_password_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(modify_password_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = modify_password_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(modify_password_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(modify_password_result modify_password_result) {
////            if (!getClass().equals(modify_password_result.getClass())) {
////                return getClass().getName().compareTo(modify_password_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(modify_password_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, modify_password_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(modify_password_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) modify_password_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(modify_password_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) modify_password_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("modify_password_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class other_login_args implements Serializable, Cloneable, Comparable<other_login_args>, C2116f<other_login_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b IS_TRY_USER_FIELD_DESC = new C2097b("is_try_user", 8, 3);
////        /* access modifiers changed from: private */
////        public static final C2097b PROVIDER_FIELD_DESC = new C2097b("provider", JceStruct.STRUCT_END, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("other_login_args");
////        /* access modifiers changed from: private */
////        public static final C2097b USERINFO_FIELD_DESC = new C2097b("userinfo", JceStruct.ZERO_TAG, 2);
////        private static final int __IS_TRY_USER_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int is_try_user;
////        public String provider;
////        public BB3PartyUserInfo userinfo;
////
////        public enum _Fields implements C2124m {
////            PROVIDER(1, "provider"),
////            USERINFO(2, "userinfo"),
////            IS_TRY_USER(3, "is_try_user");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return PROVIDER;
////                    case 2:
////                        return USERINFO;
////                    case 3:
////                        return IS_TRY_USER;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class other_login_argsStandardScheme extends C2110c<other_login_args> {
////            private other_login_argsStandardScheme() {
////            }
////
////            /* synthetic */ other_login_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, other_login_args other_login_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    other_login_args.provider = fVar.mo18516q();
////                                    other_login_args.setProviderIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    other_login_args.userinfo = new BB3PartyUserInfo();
////                                    other_login_args.userinfo.read(fVar);
////                                    other_login_args.setUserinfoIsSet(true);
////                                    break;
////                                }
////                            case 3:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    other_login_args.is_try_user = fVar.mo18513n();
////                                    other_login_args.setIs_try_userIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!other_login_args.isSetIs_try_user()) {
////                            throw new C2101g("Required field 'is_try_user' was not found in serialized data! Struct: " + toString());
////                        }
////                        other_login_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, other_login_args other_login_args) {
////                other_login_args.validate();
////                other_login_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (other_login_args.provider != null) {
////                    fVar.mo18496a(other_login_args.PROVIDER_FIELD_DESC);
////                    fVar.mo18495a(other_login_args.provider);
////                }
////                if (other_login_args.userinfo != null) {
////                    fVar.mo18496a(other_login_args.USERINFO_FIELD_DESC);
////                    other_login_args.userinfo.write(fVar);
////                }
////                fVar.mo18496a(other_login_args.IS_TRY_USER_FIELD_DESC);
////                fVar.mo18493a(other_login_args.is_try_user);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class other_login_argsStandardSchemeFactory implements C2109b {
////            private other_login_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ other_login_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public other_login_argsStandardScheme getScheme() {
////                return new other_login_argsStandardScheme(null);
////            }
////        }
////
////        class other_login_argsTupleScheme extends C2111d<other_login_args> {
////            private other_login_argsTupleScheme() {
////            }
////
////            /* synthetic */ other_login_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, other_login_args other_login_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18495a(other_login_args.provider);
////                other_login_args.userinfo.write(lVar);
////                lVar.mo18493a(other_login_args.is_try_user);
////            }
////
////            public void read(C2100f fVar, other_login_args other_login_args) {
////                C2106l lVar = (C2106l) fVar;
////                other_login_args.provider = lVar.mo18516q();
////                other_login_args.setProviderIsSet(true);
////                other_login_args.userinfo = new BB3PartyUserInfo();
////                other_login_args.userinfo.read(lVar);
////                other_login_args.setUserinfoIsSet(true);
////                other_login_args.is_try_user = lVar.mo18513n();
////                other_login_args.setIs_try_userIsSet(true);
////            }
////        }
////
////        class other_login_argsTupleSchemeFactory implements C2109b {
////            private other_login_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ other_login_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public other_login_argsTupleScheme getScheme() {
////                return new other_login_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new other_login_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new other_login_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.PROVIDER, new C2091a("provider", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            enumMap.put(_Fields.USERINFO, new C2091a("userinfo", 1, new C2095e(BB3PartyUserInfo.class)));
////            enumMap.put(_Fields.IS_TRY_USER, new C2091a("is_try_user", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(other_login_args.class, metaDataMap);
////        }
////
////        public other_login_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public other_login_args(String str, BB3PartyUserInfo bB3PartyUserInfo, int i) {
////            this();
////            this.provider = str;
////            this.userinfo = bB3PartyUserInfo;
////            this.is_try_user = i;
////            setIs_try_userIsSet(true);
////        }
////
////        public other_login_args(other_login_args other_login_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = other_login_args.__isset_bitfield;
////            if (other_login_args.isSetProvider()) {
////                this.provider = other_login_args.provider;
////            }
////            if (other_login_args.isSetUserinfo()) {
////                this.userinfo = new BB3PartyUserInfo(other_login_args.userinfo);
////            }
////            this.is_try_user = other_login_args.is_try_user;
////        }
////
////        public other_login_args deepCopy() {
////            return new other_login_args(this);
////        }
////
////        public void clear() {
////            this.provider = null;
////            this.userinfo = null;
////            setIs_try_userIsSet(false);
////            this.is_try_user = 0;
////        }
////
////        public String getProvider() {
////            return this.provider;
////        }
////
////        public other_login_args setProvider(String str) {
////            this.provider = str;
////            return this;
////        }
////
////        public void unsetProvider() {
////            this.provider = null;
////        }
////
////        public boolean isSetProvider() {
////            return this.provider != null;
////        }
////
////        public void setProviderIsSet(boolean z) {
////            if (!z) {
////                this.provider = null;
////            }
////        }
////
////        public BB3PartyUserInfo getUserinfo() {
////            return this.userinfo;
////        }
////
////        public other_login_args setUserinfo(BB3PartyUserInfo bB3PartyUserInfo) {
////            this.userinfo = bB3PartyUserInfo;
////            return this;
////        }
////
////        public void unsetUserinfo() {
////            this.userinfo = null;
////        }
////
////        public boolean isSetUserinfo() {
////            return this.userinfo != null;
////        }
////
////        public void setUserinfoIsSet(boolean z) {
////            if (!z) {
////                this.userinfo = null;
////            }
////        }
////
////        public int getIs_try_user() {
////            return this.is_try_user;
////        }
////
////        public other_login_args setIs_try_user(int i) {
////            this.is_try_user = i;
////            setIs_try_userIsSet(true);
////            return this;
////        }
////
////        public void unsetIs_try_user() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetIs_try_user() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setIs_try_userIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case PROVIDER:
////                    if (obj == null) {
////                        unsetProvider();
////                        return;
////                    } else {
////                        setProvider((String) obj);
////                        return;
////                    }
////                case USERINFO:
////                    if (obj == null) {
////                        unsetUserinfo();
////                        return;
////                    } else {
////                        setUserinfo((BB3PartyUserInfo) obj);
////                        return;
////                    }
////                case IS_TRY_USER:
////                    if (obj == null) {
////                        unsetIs_try_user();
////                        return;
////                    } else {
////                        setIs_try_user(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case PROVIDER:
////                    return getProvider();
////                case USERINFO:
////                    return getUserinfo();
////                case IS_TRY_USER:
////                    return Integer.valueOf(getIs_try_user());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case PROVIDER:
////                    return isSetProvider();
////                case USERINFO:
////                    return isSetUserinfo();
////                case IS_TRY_USER:
////                    return isSetIs_try_user();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof other_login_args)) {
////                return equals((other_login_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(other_login_args other_login_args) {
////            if (other_login_args == null) {
////                return false;
////            }
////            boolean isSetProvider = isSetProvider();
////            boolean isSetProvider2 = other_login_args.isSetProvider();
////            if ((isSetProvider || isSetProvider2) && (!isSetProvider || !isSetProvider2 || !this.provider.equals(other_login_args.provider))) {
////                return false;
////            }
////            boolean isSetUserinfo = isSetUserinfo();
////            boolean isSetUserinfo2 = other_login_args.isSetUserinfo();
////            if (((isSetUserinfo || isSetUserinfo2) && (!isSetUserinfo || !isSetUserinfo2 || !this.userinfo.equals(other_login_args.userinfo))) || this.is_try_user != other_login_args.is_try_user) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(other_login_args other_login_args) {
////            if (!getClass().equals(other_login_args.getClass())) {
////                return getClass().getName().compareTo(other_login_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetProvider()).compareTo(Boolean.valueOf(other_login_args.isSetProvider()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetProvider()) {
////                int a = C2121h.m5525a(this.provider, other_login_args.provider);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetUserinfo()).compareTo(Boolean.valueOf(other_login_args.isSetUserinfo()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetUserinfo()) {
////                int a2 = C2121h.m5524a((Comparable) this.userinfo, (Comparable) other_login_args.userinfo);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetIs_try_user()).compareTo(Boolean.valueOf(other_login_args.isSetIs_try_user()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetIs_try_user()) {
////                int a3 = C2121h.m5522a(this.is_try_user, other_login_args.is_try_user);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("other_login_args(");
////            sb.append("provider:");
////            if (this.provider == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.provider);
////            }
////            sb.append(", ");
////            sb.append("userinfo:");
////            if (this.userinfo == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.userinfo);
////            }
////            sb.append(", ");
////            sb.append("is_try_user:");
////            sb.append(this.is_try_user);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.provider == null) {
////                throw new C2101g("Required field 'provider' was not present! Struct: " + toString());
////            } else if (this.userinfo == null) {
////                throw new C2101g("Required field 'userinfo' was not present! Struct: " + toString());
////            } else if (this.userinfo != null) {
////                this.userinfo.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class other_login_result implements Serializable, Cloneable, Comparable<other_login_result>, C2116f<other_login_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("other_login_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBOtherLoginResult success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class other_login_resultStandardScheme extends C2110c<other_login_result> {
////            private other_login_resultStandardScheme() {
////            }
////
////            /* synthetic */ other_login_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, other_login_result other_login_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    other_login_result.success = new BBOtherLoginResult();
////                                    other_login_result.success.read(fVar);
////                                    other_login_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    other_login_result.sysException = new BESystemException();
////                                    other_login_result.sysException.read(fVar);
////                                    other_login_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    other_login_result.logicException = new BELogicException();
////                                    other_login_result.logicException.read(fVar);
////                                    other_login_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        other_login_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, other_login_result other_login_result) {
////                other_login_result.validate();
////                other_login_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (other_login_result.success != null) {
////                    fVar.mo18496a(other_login_result.SUCCESS_FIELD_DESC);
////                    other_login_result.success.write(fVar);
////                }
////                if (other_login_result.sysException != null) {
////                    fVar.mo18496a(other_login_result.SYS_EXCEPTION_FIELD_DESC);
////                    other_login_result.sysException.write(fVar);
////                }
////                if (other_login_result.logicException != null) {
////                    fVar.mo18496a(other_login_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    other_login_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class other_login_resultStandardSchemeFactory implements C2109b {
////            private other_login_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ other_login_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public other_login_resultStandardScheme getScheme() {
////                return new other_login_resultStandardScheme(null);
////            }
////        }
////
////        class other_login_resultTupleScheme extends C2111d<other_login_result> {
////            private other_login_resultTupleScheme() {
////            }
////
////            /* synthetic */ other_login_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, other_login_result other_login_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (other_login_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (other_login_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (other_login_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (other_login_result.isSetSuccess()) {
////                    other_login_result.success.write(lVar);
////                }
////                if (other_login_result.isSetSysException()) {
////                    other_login_result.sysException.write(lVar);
////                }
////                if (other_login_result.isSetLogicException()) {
////                    other_login_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, other_login_result other_login_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    other_login_result.success = new BBOtherLoginResult();
////                    other_login_result.success.read(lVar);
////                    other_login_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    other_login_result.sysException = new BESystemException();
////                    other_login_result.sysException.read(lVar);
////                    other_login_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    other_login_result.logicException = new BELogicException();
////                    other_login_result.logicException.read(lVar);
////                    other_login_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class other_login_resultTupleSchemeFactory implements C2109b {
////            private other_login_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ other_login_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public other_login_resultTupleScheme getScheme() {
////                return new other_login_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new other_login_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new other_login_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBOtherLoginResult.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(other_login_result.class, metaDataMap);
////        }
////
////        public other_login_result() {
////        }
////
////        public other_login_result(BBOtherLoginResult bBOtherLoginResult, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBOtherLoginResult;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public other_login_result(other_login_result other_login_result) {
////            if (other_login_result.isSetSuccess()) {
////                this.success = new BBOtherLoginResult(other_login_result.success);
////            }
////            if (other_login_result.isSetSysException()) {
////                this.sysException = new BESystemException(other_login_result.sysException);
////            }
////            if (other_login_result.isSetLogicException()) {
////                this.logicException = new BELogicException(other_login_result.logicException);
////            }
////        }
////
////        public other_login_result deepCopy() {
////            return new other_login_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBOtherLoginResult getSuccess() {
////            return this.success;
////        }
////
////        public other_login_result setSuccess(BBOtherLoginResult bBOtherLoginResult) {
////            this.success = bBOtherLoginResult;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public other_login_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public other_login_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBOtherLoginResult) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof other_login_result)) {
////                return equals((other_login_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(other_login_result other_login_result) {
////            if (other_login_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = other_login_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(other_login_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = other_login_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(other_login_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = other_login_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(other_login_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(other_login_result other_login_result) {
////            if (!getClass().equals(other_login_result.getClass())) {
////                return getClass().getName().compareTo(other_login_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(other_login_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) other_login_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(other_login_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) other_login_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(other_login_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) other_login_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("other_login_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class redo_word_friend_args implements Serializable, Cloneable, Comparable<redo_word_friend_args>, C2116f<redo_word_friend_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("redo_word_friend_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class redo_word_friend_argsStandardScheme extends C2110c<redo_word_friend_args> {
////            private redo_word_friend_argsStandardScheme() {
////            }
////
////            /* synthetic */ redo_word_friend_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, redo_word_friend_args redo_word_friend_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        redo_word_friend_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, redo_word_friend_args redo_word_friend_args) {
////                redo_word_friend_args.validate();
////                redo_word_friend_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class redo_word_friend_argsStandardSchemeFactory implements C2109b {
////            private redo_word_friend_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ redo_word_friend_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public redo_word_friend_argsStandardScheme getScheme() {
////                return new redo_word_friend_argsStandardScheme(null);
////            }
////        }
////
////        class redo_word_friend_argsTupleScheme extends C2111d<redo_word_friend_args> {
////            private redo_word_friend_argsTupleScheme() {
////            }
////
////            /* synthetic */ redo_word_friend_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, redo_word_friend_args redo_word_friend_args) {
////            }
////
////            public void read(C2100f fVar, redo_word_friend_args redo_word_friend_args) {
////            }
////        }
////
////        class redo_word_friend_argsTupleSchemeFactory implements C2109b {
////            private redo_word_friend_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ redo_word_friend_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public redo_word_friend_argsTupleScheme getScheme() {
////                return new redo_word_friend_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new redo_word_friend_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new redo_word_friend_argsTupleSchemeFactory(null));
////            C2091a.m5430a(redo_word_friend_args.class, metaDataMap);
////        }
////
////        public redo_word_friend_args() {
////        }
////
////        public redo_word_friend_args(redo_word_friend_args redo_word_friend_args) {
////        }
////
////        public redo_word_friend_args deepCopy() {
////            return new redo_word_friend_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2500xc944dfbc;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2500xc944dfbc;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2500xc944dfbc;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof redo_word_friend_args)) {
////                return equals((redo_word_friend_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(redo_word_friend_args redo_word_friend_args) {
////            if (redo_word_friend_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(redo_word_friend_args redo_word_friend_args) {
////            if (!getClass().equals(redo_word_friend_args.getClass())) {
////                return getClass().getName().compareTo(redo_word_friend_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("redo_word_friend_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class redo_word_friend_result implements Serializable, Cloneable, Comparable<redo_word_friend_result>, C2116f<redo_word_friend_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("redo_word_friend_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class redo_word_friend_resultStandardScheme extends C2110c<redo_word_friend_result> {
////            private redo_word_friend_resultStandardScheme() {
////            }
////
////            /* synthetic */ redo_word_friend_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, redo_word_friend_result redo_word_friend_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    redo_word_friend_result.success = fVar.mo18513n();
////                                    redo_word_friend_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    redo_word_friend_result.sysException = new BESystemException();
////                                    redo_word_friend_result.sysException.read(fVar);
////                                    redo_word_friend_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    redo_word_friend_result.logicException = new BELogicException();
////                                    redo_word_friend_result.logicException.read(fVar);
////                                    redo_word_friend_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        redo_word_friend_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, redo_word_friend_result redo_word_friend_result) {
////                redo_word_friend_result.validate();
////                redo_word_friend_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (redo_word_friend_result.isSetSuccess()) {
////                    fVar.mo18496a(redo_word_friend_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(redo_word_friend_result.success);
////                }
////                if (redo_word_friend_result.sysException != null) {
////                    fVar.mo18496a(redo_word_friend_result.SYS_EXCEPTION_FIELD_DESC);
////                    redo_word_friend_result.sysException.write(fVar);
////                }
////                if (redo_word_friend_result.logicException != null) {
////                    fVar.mo18496a(redo_word_friend_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    redo_word_friend_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class redo_word_friend_resultStandardSchemeFactory implements C2109b {
////            private redo_word_friend_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ redo_word_friend_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public redo_word_friend_resultStandardScheme getScheme() {
////                return new redo_word_friend_resultStandardScheme(null);
////            }
////        }
////
////        class redo_word_friend_resultTupleScheme extends C2111d<redo_word_friend_result> {
////            private redo_word_friend_resultTupleScheme() {
////            }
////
////            /* synthetic */ redo_word_friend_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, redo_word_friend_result redo_word_friend_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (redo_word_friend_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (redo_word_friend_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (redo_word_friend_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (redo_word_friend_result.isSetSuccess()) {
////                    lVar.mo18493a(redo_word_friend_result.success);
////                }
////                if (redo_word_friend_result.isSetSysException()) {
////                    redo_word_friend_result.sysException.write(lVar);
////                }
////                if (redo_word_friend_result.isSetLogicException()) {
////                    redo_word_friend_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, redo_word_friend_result redo_word_friend_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    redo_word_friend_result.success = lVar.mo18513n();
////                    redo_word_friend_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    redo_word_friend_result.sysException = new BESystemException();
////                    redo_word_friend_result.sysException.read(lVar);
////                    redo_word_friend_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    redo_word_friend_result.logicException = new BELogicException();
////                    redo_word_friend_result.logicException.read(lVar);
////                    redo_word_friend_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class redo_word_friend_resultTupleSchemeFactory implements C2109b {
////            private redo_word_friend_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ redo_word_friend_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public redo_word_friend_resultTupleScheme getScheme() {
////                return new redo_word_friend_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new redo_word_friend_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new redo_word_friend_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(redo_word_friend_result.class, metaDataMap);
////        }
////
////        public redo_word_friend_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public redo_word_friend_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public redo_word_friend_result(redo_word_friend_result redo_word_friend_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = redo_word_friend_result.__isset_bitfield;
////            this.success = redo_word_friend_result.success;
////            if (redo_word_friend_result.isSetSysException()) {
////                this.sysException = new BESystemException(redo_word_friend_result.sysException);
////            }
////            if (redo_word_friend_result.isSetLogicException()) {
////                this.logicException = new BELogicException(redo_word_friend_result.logicException);
////            }
////        }
////
////        public redo_word_friend_result deepCopy() {
////            return new redo_word_friend_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public redo_word_friend_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public redo_word_friend_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public redo_word_friend_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof redo_word_friend_result)) {
////                return equals((redo_word_friend_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(redo_word_friend_result redo_word_friend_result) {
////            if (redo_word_friend_result == null || this.success != redo_word_friend_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = redo_word_friend_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(redo_word_friend_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = redo_word_friend_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(redo_word_friend_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(redo_word_friend_result redo_word_friend_result) {
////            if (!getClass().equals(redo_word_friend_result.getClass())) {
////                return getClass().getName().compareTo(redo_word_friend_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(redo_word_friend_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, redo_word_friend_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(redo_word_friend_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) redo_word_friend_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(redo_word_friend_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) redo_word_friend_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("redo_word_friend_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class register_user_args implements Serializable, Cloneable, Comparable<register_user_args>, C2116f<register_user_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b EMAIL_FIELD_DESC = new C2097b("email", JceStruct.STRUCT_END, 1);
////        /* access modifiers changed from: private */
////        public static final C2097b PASSWORD_FIELD_DESC = new C2097b("password", JceStruct.STRUCT_END, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("register_user_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public String email;
////        public String password;
////
////        public enum _Fields implements C2124m {
////            EMAIL(1, "email"),
////            PASSWORD(2, "password");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return EMAIL;
////                    case 2:
////                        return PASSWORD;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class register_user_argsStandardScheme extends C2110c<register_user_args> {
////            private register_user_argsStandardScheme() {
////            }
////
////            /* synthetic */ register_user_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, register_user_args register_user_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    register_user_args.email = fVar.mo18516q();
////                                    register_user_args.setEmailIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    register_user_args.password = fVar.mo18516q();
////                                    register_user_args.setPasswordIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        register_user_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, register_user_args register_user_args) {
////                register_user_args.validate();
////                register_user_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (register_user_args.email != null) {
////                    fVar.mo18496a(register_user_args.EMAIL_FIELD_DESC);
////                    fVar.mo18495a(register_user_args.email);
////                }
////                if (register_user_args.password != null) {
////                    fVar.mo18496a(register_user_args.PASSWORD_FIELD_DESC);
////                    fVar.mo18495a(register_user_args.password);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class register_user_argsStandardSchemeFactory implements C2109b {
////            private register_user_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ register_user_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public register_user_argsStandardScheme getScheme() {
////                return new register_user_argsStandardScheme(null);
////            }
////        }
////
////        class register_user_argsTupleScheme extends C2111d<register_user_args> {
////            private register_user_argsTupleScheme() {
////            }
////
////            /* synthetic */ register_user_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, register_user_args register_user_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18495a(register_user_args.email);
////                lVar.mo18495a(register_user_args.password);
////            }
////
////            public void read(C2100f fVar, register_user_args register_user_args) {
////                C2106l lVar = (C2106l) fVar;
////                register_user_args.email = lVar.mo18516q();
////                register_user_args.setEmailIsSet(true);
////                register_user_args.password = lVar.mo18516q();
////                register_user_args.setPasswordIsSet(true);
////            }
////        }
////
////        class register_user_argsTupleSchemeFactory implements C2109b {
////            private register_user_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ register_user_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public register_user_argsTupleScheme getScheme() {
////                return new register_user_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new register_user_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new register_user_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.EMAIL, new C2091a("email", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            enumMap.put(_Fields.PASSWORD, new C2091a("password", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(register_user_args.class, metaDataMap);
////        }
////
////        public register_user_args() {
////        }
////
////        public register_user_args(String str, String str2) {
////            this();
////            this.email = str;
////            this.password = str2;
////        }
////
////        public register_user_args(register_user_args register_user_args) {
////            if (register_user_args.isSetEmail()) {
////                this.email = register_user_args.email;
////            }
////            if (register_user_args.isSetPassword()) {
////                this.password = register_user_args.password;
////            }
////        }
////
////        public register_user_args deepCopy() {
////            return new register_user_args(this);
////        }
////
////        public void clear() {
////            this.email = null;
////            this.password = null;
////        }
////
////        public String getEmail() {
////            return this.email;
////        }
////
////        public register_user_args setEmail(String str) {
////            this.email = str;
////            return this;
////        }
////
////        public void unsetEmail() {
////            this.email = null;
////        }
////
////        public boolean isSetEmail() {
////            return this.email != null;
////        }
////
////        public void setEmailIsSet(boolean z) {
////            if (!z) {
////                this.email = null;
////            }
////        }
////
////        public String getPassword() {
////            return this.password;
////        }
////
////        public register_user_args setPassword(String str) {
////            this.password = str;
////            return this;
////        }
////
////        public void unsetPassword() {
////            this.password = null;
////        }
////
////        public boolean isSetPassword() {
////            return this.password != null;
////        }
////
////        public void setPasswordIsSet(boolean z) {
////            if (!z) {
////                this.password = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case EMAIL:
////                    if (obj == null) {
////                        unsetEmail();
////                        return;
////                    } else {
////                        setEmail((String) obj);
////                        return;
////                    }
////                case PASSWORD:
////                    if (obj == null) {
////                        unsetPassword();
////                        return;
////                    } else {
////                        setPassword((String) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case EMAIL:
////                    return getEmail();
////                case PASSWORD:
////                    return getPassword();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case EMAIL:
////                    return isSetEmail();
////                case PASSWORD:
////                    return isSetPassword();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof register_user_args)) {
////                return equals((register_user_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(register_user_args register_user_args) {
////            if (register_user_args == null) {
////                return false;
////            }
////            boolean isSetEmail = isSetEmail();
////            boolean isSetEmail2 = register_user_args.isSetEmail();
////            if ((isSetEmail || isSetEmail2) && (!isSetEmail || !isSetEmail2 || !this.email.equals(register_user_args.email))) {
////                return false;
////            }
////            boolean isSetPassword = isSetPassword();
////            boolean isSetPassword2 = register_user_args.isSetPassword();
////            if ((isSetPassword || isSetPassword2) && (!isSetPassword || !isSetPassword2 || !this.password.equals(register_user_args.password))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(register_user_args register_user_args) {
////            if (!getClass().equals(register_user_args.getClass())) {
////                return getClass().getName().compareTo(register_user_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetEmail()).compareTo(Boolean.valueOf(register_user_args.isSetEmail()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetEmail()) {
////                int a = C2121h.m5525a(this.email, register_user_args.email);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetPassword()).compareTo(Boolean.valueOf(register_user_args.isSetPassword()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetPassword()) {
////                int a2 = C2121h.m5525a(this.password, register_user_args.password);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("register_user_args(");
////            sb.append("email:");
////            if (this.email == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.email);
////            }
////            sb.append(", ");
////            sb.append("password:");
////            if (this.password == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.password);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.email == null) {
////                throw new C2101g("Required field 'email' was not present! Struct: " + toString());
////            } else if (this.password == null) {
////                throw new C2101g("Required field 'password' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class register_user_result implements Serializable, Cloneable, Comparable<register_user_result>, C2116f<register_user_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("register_user_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class register_user_resultStandardScheme extends C2110c<register_user_result> {
////            private register_user_resultStandardScheme() {
////            }
////
////            /* synthetic */ register_user_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, register_user_result register_user_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    register_user_result.success = fVar.mo18513n();
////                                    register_user_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    register_user_result.sysException = new BESystemException();
////                                    register_user_result.sysException.read(fVar);
////                                    register_user_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    register_user_result.logicException = new BELogicException();
////                                    register_user_result.logicException.read(fVar);
////                                    register_user_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        register_user_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, register_user_result register_user_result) {
////                register_user_result.validate();
////                register_user_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (register_user_result.isSetSuccess()) {
////                    fVar.mo18496a(register_user_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(register_user_result.success);
////                }
////                if (register_user_result.sysException != null) {
////                    fVar.mo18496a(register_user_result.SYS_EXCEPTION_FIELD_DESC);
////                    register_user_result.sysException.write(fVar);
////                }
////                if (register_user_result.logicException != null) {
////                    fVar.mo18496a(register_user_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    register_user_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class register_user_resultStandardSchemeFactory implements C2109b {
////            private register_user_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ register_user_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public register_user_resultStandardScheme getScheme() {
////                return new register_user_resultStandardScheme(null);
////            }
////        }
////
////        class register_user_resultTupleScheme extends C2111d<register_user_result> {
////            private register_user_resultTupleScheme() {
////            }
////
////            /* synthetic */ register_user_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, register_user_result register_user_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (register_user_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (register_user_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (register_user_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (register_user_result.isSetSuccess()) {
////                    lVar.mo18493a(register_user_result.success);
////                }
////                if (register_user_result.isSetSysException()) {
////                    register_user_result.sysException.write(lVar);
////                }
////                if (register_user_result.isSetLogicException()) {
////                    register_user_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, register_user_result register_user_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    register_user_result.success = lVar.mo18513n();
////                    register_user_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    register_user_result.sysException = new BESystemException();
////                    register_user_result.sysException.read(lVar);
////                    register_user_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    register_user_result.logicException = new BELogicException();
////                    register_user_result.logicException.read(lVar);
////                    register_user_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class register_user_resultTupleSchemeFactory implements C2109b {
////            private register_user_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ register_user_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public register_user_resultTupleScheme getScheme() {
////                return new register_user_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new register_user_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new register_user_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(register_user_result.class, metaDataMap);
////        }
////
////        public register_user_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public register_user_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public register_user_result(register_user_result register_user_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = register_user_result.__isset_bitfield;
////            this.success = register_user_result.success;
////            if (register_user_result.isSetSysException()) {
////                this.sysException = new BESystemException(register_user_result.sysException);
////            }
////            if (register_user_result.isSetLogicException()) {
////                this.logicException = new BELogicException(register_user_result.logicException);
////            }
////        }
////
////        public register_user_result deepCopy() {
////            return new register_user_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public register_user_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public register_user_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public register_user_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof register_user_result)) {
////                return equals((register_user_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(register_user_result register_user_result) {
////            if (register_user_result == null || this.success != register_user_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = register_user_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(register_user_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = register_user_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(register_user_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(register_user_result register_user_result) {
////            if (!getClass().equals(register_user_result.getClass())) {
////                return getClass().getName().compareTo(register_user_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(register_user_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, register_user_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(register_user_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) register_user_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(register_user_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) register_user_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("register_user_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class reset_done_score_data_args implements Serializable, Cloneable, Comparable<reset_done_score_data_args>, C2116f<reset_done_score_data_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("reset_done_score_data_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class reset_done_score_data_argsStandardScheme extends C2110c<reset_done_score_data_args> {
////            private reset_done_score_data_argsStandardScheme() {
////            }
////
////            /* synthetic */ reset_done_score_data_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, reset_done_score_data_args reset_done_score_data_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    reset_done_score_data_args.word_level_id = fVar.mo18513n();
////                                    reset_done_score_data_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!reset_done_score_data_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        reset_done_score_data_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, reset_done_score_data_args reset_done_score_data_args) {
////                reset_done_score_data_args.validate();
////                reset_done_score_data_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(reset_done_score_data_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(reset_done_score_data_args.word_level_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class reset_done_score_data_argsStandardSchemeFactory implements C2109b {
////            private reset_done_score_data_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ reset_done_score_data_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public reset_done_score_data_argsStandardScheme getScheme() {
////                return new reset_done_score_data_argsStandardScheme(null);
////            }
////        }
////
////        class reset_done_score_data_argsTupleScheme extends C2111d<reset_done_score_data_args> {
////            private reset_done_score_data_argsTupleScheme() {
////            }
////
////            /* synthetic */ reset_done_score_data_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, reset_done_score_data_args reset_done_score_data_args) {
////                ((C2106l) fVar).mo18493a(reset_done_score_data_args.word_level_id);
////            }
////
////            public void read(C2100f fVar, reset_done_score_data_args reset_done_score_data_args) {
////                reset_done_score_data_args.word_level_id = ((C2106l) fVar).mo18513n();
////                reset_done_score_data_args.setWord_level_idIsSet(true);
////            }
////        }
////
////        class reset_done_score_data_argsTupleSchemeFactory implements C2109b {
////            private reset_done_score_data_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ reset_done_score_data_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public reset_done_score_data_argsTupleScheme getScheme() {
////                return new reset_done_score_data_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new reset_done_score_data_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new reset_done_score_data_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(reset_done_score_data_args.class, metaDataMap);
////        }
////
////        public reset_done_score_data_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public reset_done_score_data_args(int i) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////        }
////
////        public reset_done_score_data_args(reset_done_score_data_args reset_done_score_data_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = reset_done_score_data_args.__isset_bitfield;
////            this.word_level_id = reset_done_score_data_args.word_level_id;
////        }
////
////        public reset_done_score_data_args deepCopy() {
////            return new reset_done_score_data_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public reset_done_score_data_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof reset_done_score_data_args)) {
////                return equals((reset_done_score_data_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(reset_done_score_data_args reset_done_score_data_args) {
////            if (reset_done_score_data_args != null && this.word_level_id == reset_done_score_data_args.word_level_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(reset_done_score_data_args reset_done_score_data_args) {
////            if (!getClass().equals(reset_done_score_data_args.getClass())) {
////                return getClass().getName().compareTo(reset_done_score_data_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(reset_done_score_data_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, reset_done_score_data_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("reset_done_score_data_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class reset_done_score_data_result implements Serializable, Cloneable, Comparable<reset_done_score_data_result>, C2116f<reset_done_score_data_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("reset_done_score_data_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class reset_done_score_data_resultStandardScheme extends C2110c<reset_done_score_data_result> {
////            private reset_done_score_data_resultStandardScheme() {
////            }
////
////            /* synthetic */ reset_done_score_data_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, reset_done_score_data_result reset_done_score_data_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    reset_done_score_data_result.success = fVar.mo18513n();
////                                    reset_done_score_data_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    reset_done_score_data_result.sysException = new BESystemException();
////                                    reset_done_score_data_result.sysException.read(fVar);
////                                    reset_done_score_data_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    reset_done_score_data_result.logicException = new BELogicException();
////                                    reset_done_score_data_result.logicException.read(fVar);
////                                    reset_done_score_data_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        reset_done_score_data_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, reset_done_score_data_result reset_done_score_data_result) {
////                reset_done_score_data_result.validate();
////                reset_done_score_data_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (reset_done_score_data_result.isSetSuccess()) {
////                    fVar.mo18496a(reset_done_score_data_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(reset_done_score_data_result.success);
////                }
////                if (reset_done_score_data_result.sysException != null) {
////                    fVar.mo18496a(reset_done_score_data_result.SYS_EXCEPTION_FIELD_DESC);
////                    reset_done_score_data_result.sysException.write(fVar);
////                }
////                if (reset_done_score_data_result.logicException != null) {
////                    fVar.mo18496a(reset_done_score_data_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    reset_done_score_data_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class reset_done_score_data_resultStandardSchemeFactory implements C2109b {
////            private reset_done_score_data_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ reset_done_score_data_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public reset_done_score_data_resultStandardScheme getScheme() {
////                return new reset_done_score_data_resultStandardScheme(null);
////            }
////        }
////
////        class reset_done_score_data_resultTupleScheme extends C2111d<reset_done_score_data_result> {
////            private reset_done_score_data_resultTupleScheme() {
////            }
////
////            /* synthetic */ reset_done_score_data_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, reset_done_score_data_result reset_done_score_data_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (reset_done_score_data_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (reset_done_score_data_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (reset_done_score_data_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (reset_done_score_data_result.isSetSuccess()) {
////                    lVar.mo18493a(reset_done_score_data_result.success);
////                }
////                if (reset_done_score_data_result.isSetSysException()) {
////                    reset_done_score_data_result.sysException.write(lVar);
////                }
////                if (reset_done_score_data_result.isSetLogicException()) {
////                    reset_done_score_data_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, reset_done_score_data_result reset_done_score_data_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    reset_done_score_data_result.success = lVar.mo18513n();
////                    reset_done_score_data_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    reset_done_score_data_result.sysException = new BESystemException();
////                    reset_done_score_data_result.sysException.read(lVar);
////                    reset_done_score_data_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    reset_done_score_data_result.logicException = new BELogicException();
////                    reset_done_score_data_result.logicException.read(lVar);
////                    reset_done_score_data_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class reset_done_score_data_resultTupleSchemeFactory implements C2109b {
////            private reset_done_score_data_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ reset_done_score_data_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public reset_done_score_data_resultTupleScheme getScheme() {
////                return new reset_done_score_data_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new reset_done_score_data_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new reset_done_score_data_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(reset_done_score_data_result.class, metaDataMap);
////        }
////
////        public reset_done_score_data_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public reset_done_score_data_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public reset_done_score_data_result(reset_done_score_data_result reset_done_score_data_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = reset_done_score_data_result.__isset_bitfield;
////            this.success = reset_done_score_data_result.success;
////            if (reset_done_score_data_result.isSetSysException()) {
////                this.sysException = new BESystemException(reset_done_score_data_result.sysException);
////            }
////            if (reset_done_score_data_result.isSetLogicException()) {
////                this.logicException = new BELogicException(reset_done_score_data_result.logicException);
////            }
////        }
////
////        public reset_done_score_data_result deepCopy() {
////            return new reset_done_score_data_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public reset_done_score_data_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public reset_done_score_data_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public reset_done_score_data_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof reset_done_score_data_result)) {
////                return equals((reset_done_score_data_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(reset_done_score_data_result reset_done_score_data_result) {
////            if (reset_done_score_data_result == null || this.success != reset_done_score_data_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = reset_done_score_data_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(reset_done_score_data_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = reset_done_score_data_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(reset_done_score_data_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(reset_done_score_data_result reset_done_score_data_result) {
////            if (!getClass().equals(reset_done_score_data_result.getClass())) {
////                return getClass().getName().compareTo(reset_done_score_data_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(reset_done_score_data_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, reset_done_score_data_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(reset_done_score_data_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) reset_done_score_data_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(reset_done_score_data_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) reset_done_score_data_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("reset_done_score_data_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class roadmap_by_word_level_args implements Serializable, Cloneable, Comparable<roadmap_by_word_level_args>, C2116f<roadmap_by_word_level_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b CURRENT_WORD_LEVEL_ID_FIELD_DESC = new C2097b("current_word_level_id", 8, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("roadmap_by_word_level_args");
////        private static final int __CURRENT_WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int current_word_level_id;
////
////        public enum _Fields implements C2124m {
////            CURRENT_WORD_LEVEL_ID(1, "current_word_level_id");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return CURRENT_WORD_LEVEL_ID;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class roadmap_by_word_level_argsStandardScheme extends C2110c<roadmap_by_word_level_args> {
////            private roadmap_by_word_level_argsStandardScheme() {
////            }
////
////            /* synthetic */ roadmap_by_word_level_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, roadmap_by_word_level_args roadmap_by_word_level_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    roadmap_by_word_level_args.current_word_level_id = fVar.mo18513n();
////                                    roadmap_by_word_level_args.setCurrent_word_level_idIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!roadmap_by_word_level_args.isSetCurrent_word_level_id()) {
////                            throw new C2101g("Required field 'current_word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        roadmap_by_word_level_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, roadmap_by_word_level_args roadmap_by_word_level_args) {
////                roadmap_by_word_level_args.validate();
////                roadmap_by_word_level_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(roadmap_by_word_level_args.CURRENT_WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(roadmap_by_word_level_args.current_word_level_id);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class roadmap_by_word_level_argsStandardSchemeFactory implements C2109b {
////            private roadmap_by_word_level_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ roadmap_by_word_level_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public roadmap_by_word_level_argsStandardScheme getScheme() {
////                return new roadmap_by_word_level_argsStandardScheme(null);
////            }
////        }
////
////        class roadmap_by_word_level_argsTupleScheme extends C2111d<roadmap_by_word_level_args> {
////            private roadmap_by_word_level_argsTupleScheme() {
////            }
////
////            /* synthetic */ roadmap_by_word_level_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, roadmap_by_word_level_args roadmap_by_word_level_args) {
////                ((C2106l) fVar).mo18493a(roadmap_by_word_level_args.current_word_level_id);
////            }
////
////            public void read(C2100f fVar, roadmap_by_word_level_args roadmap_by_word_level_args) {
////                roadmap_by_word_level_args.current_word_level_id = ((C2106l) fVar).mo18513n();
////                roadmap_by_word_level_args.setCurrent_word_level_idIsSet(true);
////            }
////        }
////
////        class roadmap_by_word_level_argsTupleSchemeFactory implements C2109b {
////            private roadmap_by_word_level_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ roadmap_by_word_level_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public roadmap_by_word_level_argsTupleScheme getScheme() {
////                return new roadmap_by_word_level_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new roadmap_by_word_level_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new roadmap_by_word_level_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.CURRENT_WORD_LEVEL_ID, new C2091a("current_word_level_id", 1, new C2092b(8, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(roadmap_by_word_level_args.class, metaDataMap);
////        }
////
////        public roadmap_by_word_level_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public roadmap_by_word_level_args(int i) {
////            this();
////            this.current_word_level_id = i;
////            setCurrent_word_level_idIsSet(true);
////        }
////
////        public roadmap_by_word_level_args(roadmap_by_word_level_args roadmap_by_word_level_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = roadmap_by_word_level_args.__isset_bitfield;
////            this.current_word_level_id = roadmap_by_word_level_args.current_word_level_id;
////        }
////
////        public roadmap_by_word_level_args deepCopy() {
////            return new roadmap_by_word_level_args(this);
////        }
////
////        public void clear() {
////            setCurrent_word_level_idIsSet(false);
////            this.current_word_level_id = 0;
////        }
////
////        public int getCurrent_word_level_id() {
////            return this.current_word_level_id;
////        }
////
////        public roadmap_by_word_level_args setCurrent_word_level_id(int i) {
////            this.current_word_level_id = i;
////            setCurrent_word_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetCurrent_word_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetCurrent_word_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setCurrent_word_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case CURRENT_WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetCurrent_word_level_id();
////                        return;
////                    } else {
////                        setCurrent_word_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case CURRENT_WORD_LEVEL_ID:
////                    return Integer.valueOf(getCurrent_word_level_id());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case CURRENT_WORD_LEVEL_ID:
////                    return isSetCurrent_word_level_id();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof roadmap_by_word_level_args)) {
////                return equals((roadmap_by_word_level_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(roadmap_by_word_level_args roadmap_by_word_level_args) {
////            if (roadmap_by_word_level_args != null && this.current_word_level_id == roadmap_by_word_level_args.current_word_level_id) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(roadmap_by_word_level_args roadmap_by_word_level_args) {
////            if (!getClass().equals(roadmap_by_word_level_args.getClass())) {
////                return getClass().getName().compareTo(roadmap_by_word_level_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetCurrent_word_level_id()).compareTo(Boolean.valueOf(roadmap_by_word_level_args.isSetCurrent_word_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetCurrent_word_level_id()) {
////                int a = C2121h.m5522a(this.current_word_level_id, roadmap_by_word_level_args.current_word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("roadmap_by_word_level_args(");
////            sb.append("current_word_level_id:");
////            sb.append(this.current_word_level_id);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class roadmap_by_word_level_result implements Serializable, Cloneable, Comparable<roadmap_by_word_level_result>, C2116f<roadmap_by_word_level_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("roadmap_by_word_level_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 15, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public List<BBRoadMapElement> success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class roadmap_by_word_level_resultStandardScheme extends C2110c<roadmap_by_word_level_result> {
////            private roadmap_by_word_level_resultStandardScheme() {
////            }
////
////            /* synthetic */ roadmap_by_word_level_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, roadmap_by_word_level_result roadmap_by_word_level_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    roadmap_by_word_level_result.success = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBRoadMapElement bBRoadMapElement = new BBRoadMapElement();
////                                        bBRoadMapElement.read(fVar);
////                                        roadmap_by_word_level_result.success.add(bBRoadMapElement);
////                                    }
////                                    roadmap_by_word_level_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    roadmap_by_word_level_result.sysException = new BESystemException();
////                                    roadmap_by_word_level_result.sysException.read(fVar);
////                                    roadmap_by_word_level_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        roadmap_by_word_level_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, roadmap_by_word_level_result roadmap_by_word_level_result) {
////                roadmap_by_word_level_result.validate();
////                roadmap_by_word_level_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (roadmap_by_word_level_result.success != null) {
////                    fVar.mo18496a(roadmap_by_word_level_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, roadmap_by_word_level_result.success.size()));
////                    for (BBRoadMapElement write : roadmap_by_word_level_result.success) {
////                        write.write(fVar);
////                    }
////                }
////                if (roadmap_by_word_level_result.sysException != null) {
////                    fVar.mo18496a(roadmap_by_word_level_result.SYS_EXCEPTION_FIELD_DESC);
////                    roadmap_by_word_level_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class roadmap_by_word_level_resultStandardSchemeFactory implements C2109b {
////            private roadmap_by_word_level_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ roadmap_by_word_level_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public roadmap_by_word_level_resultStandardScheme getScheme() {
////                return new roadmap_by_word_level_resultStandardScheme(null);
////            }
////        }
////
////        class roadmap_by_word_level_resultTupleScheme extends C2111d<roadmap_by_word_level_result> {
////            private roadmap_by_word_level_resultTupleScheme() {
////            }
////
////            /* synthetic */ roadmap_by_word_level_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, roadmap_by_word_level_result roadmap_by_word_level_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (roadmap_by_word_level_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (roadmap_by_word_level_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (roadmap_by_word_level_result.isSetSuccess()) {
////                    lVar.mo18493a(roadmap_by_word_level_result.success.size());
////                    for (BBRoadMapElement write : roadmap_by_word_level_result.success) {
////                        write.write(lVar);
////                    }
////                }
////                if (roadmap_by_word_level_result.isSetSysException()) {
////                    roadmap_by_word_level_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, roadmap_by_word_level_result roadmap_by_word_level_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                    roadmap_by_word_level_result.success = new ArrayList(cVar.f5838b);
////                    for (int i = 0; i < cVar.f5838b; i++) {
////                        BBRoadMapElement bBRoadMapElement = new BBRoadMapElement();
////                        bBRoadMapElement.read(lVar);
////                        roadmap_by_word_level_result.success.add(bBRoadMapElement);
////                    }
////                    roadmap_by_word_level_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    roadmap_by_word_level_result.sysException = new BESystemException();
////                    roadmap_by_word_level_result.sysException.read(lVar);
////                    roadmap_by_word_level_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class roadmap_by_word_level_resultTupleSchemeFactory implements C2109b {
////            private roadmap_by_word_level_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ roadmap_by_word_level_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public roadmap_by_word_level_resultTupleScheme getScheme() {
////                return new roadmap_by_word_level_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new roadmap_by_word_level_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new roadmap_by_word_level_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2093c(new C2095e(BBRoadMapElement.class))));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(roadmap_by_word_level_result.class, metaDataMap);
////        }
////
////        public roadmap_by_word_level_result() {
////        }
////
////        public roadmap_by_word_level_result(List<BBRoadMapElement> list, BESystemException bESystemException) {
////            this();
////            this.success = list;
////            this.sysException = bESystemException;
////        }
////
////        public roadmap_by_word_level_result(roadmap_by_word_level_result roadmap_by_word_level_result) {
////            if (roadmap_by_word_level_result.isSetSuccess()) {
////                ArrayList arrayList = new ArrayList(roadmap_by_word_level_result.success.size());
////                for (BBRoadMapElement bBRoadMapElement : roadmap_by_word_level_result.success) {
////                    arrayList.add(new BBRoadMapElement(bBRoadMapElement));
////                }
////                this.success = arrayList;
////            }
////            if (roadmap_by_word_level_result.isSetSysException()) {
////                this.sysException = new BESystemException(roadmap_by_word_level_result.sysException);
////            }
////        }
////
////        public roadmap_by_word_level_result deepCopy() {
////            return new roadmap_by_word_level_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////        }
////
////        public int getSuccessSize() {
////            if (this.success == null) {
////                return 0;
////            }
////            return this.success.size();
////        }
////
////        public Iterator<BBRoadMapElement> getSuccessIterator() {
////            if (this.success == null) {
////                return null;
////            }
////            return this.success.iterator();
////        }
////
////        public void addToSuccess(BBRoadMapElement bBRoadMapElement) {
////            if (this.success == null) {
////                this.success = new ArrayList();
////            }
////            this.success.add(bBRoadMapElement);
////        }
////
////        public List<BBRoadMapElement> getSuccess() {
////            return this.success;
////        }
////
////        public roadmap_by_word_level_result setSuccess(List<BBRoadMapElement> list) {
////            this.success = list;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public roadmap_by_word_level_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((List) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof roadmap_by_word_level_result)) {
////                return equals((roadmap_by_word_level_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(roadmap_by_word_level_result roadmap_by_word_level_result) {
////            if (roadmap_by_word_level_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = roadmap_by_word_level_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(roadmap_by_word_level_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = roadmap_by_word_level_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(roadmap_by_word_level_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(roadmap_by_word_level_result roadmap_by_word_level_result) {
////            if (!getClass().equals(roadmap_by_word_level_result.getClass())) {
////                return getClass().getName().compareTo(roadmap_by_word_level_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(roadmap_by_word_level_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5526a((List) this.success, (List) roadmap_by_word_level_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(roadmap_by_word_level_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) roadmap_by_word_level_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("roadmap_by_word_level_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class save_user_ext_info_args implements Serializable, Cloneable, Comparable<save_user_ext_info_args>, C2116f<save_user_ext_info_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("save_user_ext_info_args");
////        /* access modifiers changed from: private */
////        public static final C2097b USER_EXT_INFO_FIELD_DESC = new C2097b("user_ext_info", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBUserExtInfo user_ext_info;
////
////        public enum _Fields implements C2124m {
////            USER_EXT_INFO(1, "user_ext_info");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return USER_EXT_INFO;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class save_user_ext_info_argsStandardScheme extends C2110c<save_user_ext_info_args> {
////            private save_user_ext_info_argsStandardScheme() {
////            }
////
////            /* synthetic */ save_user_ext_info_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, save_user_ext_info_args save_user_ext_info_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    save_user_ext_info_args.user_ext_info = new BBUserExtInfo();
////                                    save_user_ext_info_args.user_ext_info.read(fVar);
////                                    save_user_ext_info_args.setUser_ext_infoIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        save_user_ext_info_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, save_user_ext_info_args save_user_ext_info_args) {
////                save_user_ext_info_args.validate();
////                save_user_ext_info_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (save_user_ext_info_args.user_ext_info != null) {
////                    fVar.mo18496a(save_user_ext_info_args.USER_EXT_INFO_FIELD_DESC);
////                    save_user_ext_info_args.user_ext_info.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class save_user_ext_info_argsStandardSchemeFactory implements C2109b {
////            private save_user_ext_info_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ save_user_ext_info_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public save_user_ext_info_argsStandardScheme getScheme() {
////                return new save_user_ext_info_argsStandardScheme(null);
////            }
////        }
////
////        class save_user_ext_info_argsTupleScheme extends C2111d<save_user_ext_info_args> {
////            private save_user_ext_info_argsTupleScheme() {
////            }
////
////            /* synthetic */ save_user_ext_info_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, save_user_ext_info_args save_user_ext_info_args) {
////                save_user_ext_info_args.user_ext_info.write((C2106l) fVar);
////            }
////
////            public void read(C2100f fVar, save_user_ext_info_args save_user_ext_info_args) {
////                C2106l lVar = (C2106l) fVar;
////                save_user_ext_info_args.user_ext_info = new BBUserExtInfo();
////                save_user_ext_info_args.user_ext_info.read(lVar);
////                save_user_ext_info_args.setUser_ext_infoIsSet(true);
////            }
////        }
////
////        class save_user_ext_info_argsTupleSchemeFactory implements C2109b {
////            private save_user_ext_info_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ save_user_ext_info_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public save_user_ext_info_argsTupleScheme getScheme() {
////                return new save_user_ext_info_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new save_user_ext_info_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new save_user_ext_info_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.USER_EXT_INFO, new C2091a("user_ext_info", 1, new C2095e(BBUserExtInfo.class)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(save_user_ext_info_args.class, metaDataMap);
////        }
////
////        public save_user_ext_info_args() {
////        }
////
////        public save_user_ext_info_args(BBUserExtInfo bBUserExtInfo) {
////            this();
////            this.user_ext_info = bBUserExtInfo;
////        }
////
////        public save_user_ext_info_args(save_user_ext_info_args save_user_ext_info_args) {
////            if (save_user_ext_info_args.isSetUser_ext_info()) {
////                this.user_ext_info = new BBUserExtInfo(save_user_ext_info_args.user_ext_info);
////            }
////        }
////
////        public save_user_ext_info_args deepCopy() {
////            return new save_user_ext_info_args(this);
////        }
////
////        public void clear() {
////            this.user_ext_info = null;
////        }
////
////        public BBUserExtInfo getUser_ext_info() {
////            return this.user_ext_info;
////        }
////
////        public save_user_ext_info_args setUser_ext_info(BBUserExtInfo bBUserExtInfo) {
////            this.user_ext_info = bBUserExtInfo;
////            return this;
////        }
////
////        public void unsetUser_ext_info() {
////            this.user_ext_info = null;
////        }
////
////        public boolean isSetUser_ext_info() {
////            return this.user_ext_info != null;
////        }
////
////        public void setUser_ext_infoIsSet(boolean z) {
////            if (!z) {
////                this.user_ext_info = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case USER_EXT_INFO:
////                    if (obj == null) {
////                        unsetUser_ext_info();
////                        return;
////                    } else {
////                        setUser_ext_info((BBUserExtInfo) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case USER_EXT_INFO:
////                    return getUser_ext_info();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case USER_EXT_INFO:
////                    return isSetUser_ext_info();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof save_user_ext_info_args)) {
////                return equals((save_user_ext_info_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(save_user_ext_info_args save_user_ext_info_args) {
////            if (save_user_ext_info_args == null) {
////                return false;
////            }
////            boolean isSetUser_ext_info = isSetUser_ext_info();
////            boolean isSetUser_ext_info2 = save_user_ext_info_args.isSetUser_ext_info();
////            if ((isSetUser_ext_info || isSetUser_ext_info2) && (!isSetUser_ext_info || !isSetUser_ext_info2 || !this.user_ext_info.equals(save_user_ext_info_args.user_ext_info))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(save_user_ext_info_args save_user_ext_info_args) {
////            if (!getClass().equals(save_user_ext_info_args.getClass())) {
////                return getClass().getName().compareTo(save_user_ext_info_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetUser_ext_info()).compareTo(Boolean.valueOf(save_user_ext_info_args.isSetUser_ext_info()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetUser_ext_info()) {
////                int a = C2121h.m5524a((Comparable) this.user_ext_info, (Comparable) save_user_ext_info_args.user_ext_info);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("save_user_ext_info_args(");
////            sb.append("user_ext_info:");
////            if (this.user_ext_info == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.user_ext_info);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.user_ext_info == null) {
////                throw new C2101g("Required field 'user_ext_info' was not present! Struct: " + toString());
////            } else if (this.user_ext_info != null) {
////                this.user_ext_info.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class save_user_ext_info_result implements Serializable, Cloneable, Comparable<save_user_ext_info_result>, C2116f<save_user_ext_info_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("save_user_ext_info_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class save_user_ext_info_resultStandardScheme extends C2110c<save_user_ext_info_result> {
////            private save_user_ext_info_resultStandardScheme() {
////            }
////
////            /* synthetic */ save_user_ext_info_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, save_user_ext_info_result save_user_ext_info_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    save_user_ext_info_result.success = fVar.mo18513n();
////                                    save_user_ext_info_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    save_user_ext_info_result.sysException = new BESystemException();
////                                    save_user_ext_info_result.sysException.read(fVar);
////                                    save_user_ext_info_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    save_user_ext_info_result.logicException = new BELogicException();
////                                    save_user_ext_info_result.logicException.read(fVar);
////                                    save_user_ext_info_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        save_user_ext_info_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, save_user_ext_info_result save_user_ext_info_result) {
////                save_user_ext_info_result.validate();
////                save_user_ext_info_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (save_user_ext_info_result.isSetSuccess()) {
////                    fVar.mo18496a(save_user_ext_info_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(save_user_ext_info_result.success);
////                }
////                if (save_user_ext_info_result.sysException != null) {
////                    fVar.mo18496a(save_user_ext_info_result.SYS_EXCEPTION_FIELD_DESC);
////                    save_user_ext_info_result.sysException.write(fVar);
////                }
////                if (save_user_ext_info_result.logicException != null) {
////                    fVar.mo18496a(save_user_ext_info_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    save_user_ext_info_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class save_user_ext_info_resultStandardSchemeFactory implements C2109b {
////            private save_user_ext_info_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ save_user_ext_info_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public save_user_ext_info_resultStandardScheme getScheme() {
////                return new save_user_ext_info_resultStandardScheme(null);
////            }
////        }
////
////        class save_user_ext_info_resultTupleScheme extends C2111d<save_user_ext_info_result> {
////            private save_user_ext_info_resultTupleScheme() {
////            }
////
////            /* synthetic */ save_user_ext_info_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, save_user_ext_info_result save_user_ext_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (save_user_ext_info_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (save_user_ext_info_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (save_user_ext_info_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (save_user_ext_info_result.isSetSuccess()) {
////                    lVar.mo18493a(save_user_ext_info_result.success);
////                }
////                if (save_user_ext_info_result.isSetSysException()) {
////                    save_user_ext_info_result.sysException.write(lVar);
////                }
////                if (save_user_ext_info_result.isSetLogicException()) {
////                    save_user_ext_info_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, save_user_ext_info_result save_user_ext_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    save_user_ext_info_result.success = lVar.mo18513n();
////                    save_user_ext_info_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    save_user_ext_info_result.sysException = new BESystemException();
////                    save_user_ext_info_result.sysException.read(lVar);
////                    save_user_ext_info_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    save_user_ext_info_result.logicException = new BELogicException();
////                    save_user_ext_info_result.logicException.read(lVar);
////                    save_user_ext_info_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class save_user_ext_info_resultTupleSchemeFactory implements C2109b {
////            private save_user_ext_info_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ save_user_ext_info_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public save_user_ext_info_resultTupleScheme getScheme() {
////                return new save_user_ext_info_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new save_user_ext_info_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new save_user_ext_info_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(save_user_ext_info_result.class, metaDataMap);
////        }
////
////        public save_user_ext_info_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public save_user_ext_info_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public save_user_ext_info_result(save_user_ext_info_result save_user_ext_info_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = save_user_ext_info_result.__isset_bitfield;
////            this.success = save_user_ext_info_result.success;
////            if (save_user_ext_info_result.isSetSysException()) {
////                this.sysException = new BESystemException(save_user_ext_info_result.sysException);
////            }
////            if (save_user_ext_info_result.isSetLogicException()) {
////                this.logicException = new BELogicException(save_user_ext_info_result.logicException);
////            }
////        }
////
////        public save_user_ext_info_result deepCopy() {
////            return new save_user_ext_info_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public save_user_ext_info_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public save_user_ext_info_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public save_user_ext_info_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof save_user_ext_info_result)) {
////                return equals((save_user_ext_info_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(save_user_ext_info_result save_user_ext_info_result) {
////            if (save_user_ext_info_result == null || this.success != save_user_ext_info_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = save_user_ext_info_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(save_user_ext_info_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = save_user_ext_info_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(save_user_ext_info_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(save_user_ext_info_result save_user_ext_info_result) {
////            if (!getClass().equals(save_user_ext_info_result.getClass())) {
////                return getClass().getName().compareTo(save_user_ext_info_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(save_user_ext_info_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, save_user_ext_info_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(save_user_ext_info_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) save_user_ext_info_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(save_user_ext_info_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) save_user_ext_info_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("save_user_ext_info_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class save_word_friend_done_record_args implements Serializable, Cloneable, Comparable<save_word_friend_done_record_args>, C2116f<save_word_friend_done_record_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b DONE_TOPIC_IDS_FIELD_DESC = new C2097b("done_topic_ids", 15, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("save_word_friend_done_record_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public List<Integer> done_topic_ids;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id"),
////            DONE_TOPIC_IDS(2, "done_topic_ids");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    case 2:
////                        return DONE_TOPIC_IDS;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class save_word_friend_done_record_argsStandardScheme extends C2110c<save_word_friend_done_record_args> {
////            private save_word_friend_done_record_argsStandardScheme() {
////            }
////
////            /* synthetic */ save_word_friend_done_record_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, save_word_friend_done_record_args save_word_friend_done_record_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    save_word_friend_done_record_args.word_level_id = fVar.mo18513n();
////                                    save_word_friend_done_record_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    save_word_friend_done_record_args.done_topic_ids = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        save_word_friend_done_record_args.done_topic_ids.add(Integer.valueOf(fVar.mo18513n()));
////                                    }
////                                    save_word_friend_done_record_args.setDone_topic_idsIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!save_word_friend_done_record_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        save_word_friend_done_record_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, save_word_friend_done_record_args save_word_friend_done_record_args) {
////                save_word_friend_done_record_args.validate();
////                save_word_friend_done_record_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(save_word_friend_done_record_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(save_word_friend_done_record_args.word_level_id);
////                if (save_word_friend_done_record_args.done_topic_ids != null) {
////                    fVar.mo18496a(save_word_friend_done_record_args.DONE_TOPIC_IDS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(8, save_word_friend_done_record_args.done_topic_ids.size()));
////                    for (Integer intValue : save_word_friend_done_record_args.done_topic_ids) {
////                        fVar.mo18493a(intValue.intValue());
////                    }
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class save_word_friend_done_record_argsStandardSchemeFactory implements C2109b {
////            private save_word_friend_done_record_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ save_word_friend_done_record_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public save_word_friend_done_record_argsStandardScheme getScheme() {
////                return new save_word_friend_done_record_argsStandardScheme(null);
////            }
////        }
////
////        class save_word_friend_done_record_argsTupleScheme extends C2111d<save_word_friend_done_record_args> {
////            private save_word_friend_done_record_argsTupleScheme() {
////            }
////
////            /* synthetic */ save_word_friend_done_record_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, save_word_friend_done_record_args save_word_friend_done_record_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(save_word_friend_done_record_args.word_level_id);
////                lVar.mo18493a(save_word_friend_done_record_args.done_topic_ids.size());
////                for (Integer intValue : save_word_friend_done_record_args.done_topic_ids) {
////                    lVar.mo18493a(intValue.intValue());
////                }
////            }
////
////            public void read(C2100f fVar, save_word_friend_done_record_args save_word_friend_done_record_args) {
////                C2106l lVar = (C2106l) fVar;
////                save_word_friend_done_record_args.word_level_id = lVar.mo18513n();
////                save_word_friend_done_record_args.setWord_level_idIsSet(true);
////                C2098c cVar = new C2098c(8, lVar.mo18513n());
////                save_word_friend_done_record_args.done_topic_ids = new ArrayList(cVar.f5838b);
////                for (int i = 0; i < cVar.f5838b; i++) {
////                    save_word_friend_done_record_args.done_topic_ids.add(Integer.valueOf(lVar.mo18513n()));
////                }
////                save_word_friend_done_record_args.setDone_topic_idsIsSet(true);
////            }
////        }
////
////        class save_word_friend_done_record_argsTupleSchemeFactory implements C2109b {
////            private save_word_friend_done_record_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ save_word_friend_done_record_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public save_word_friend_done_record_argsTupleScheme getScheme() {
////                return new save_word_friend_done_record_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new save_word_friend_done_record_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new save_word_friend_done_record_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.DONE_TOPIC_IDS, new C2091a("done_topic_ids", 1, new C2093c(new C2092b(8, 0))));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(save_word_friend_done_record_args.class, metaDataMap);
////        }
////
////        public save_word_friend_done_record_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public save_word_friend_done_record_args(int i, List<Integer> list) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            this.done_topic_ids = list;
////        }
////
////        public save_word_friend_done_record_args(save_word_friend_done_record_args save_word_friend_done_record_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = save_word_friend_done_record_args.__isset_bitfield;
////            this.word_level_id = save_word_friend_done_record_args.word_level_id;
////            if (save_word_friend_done_record_args.isSetDone_topic_ids()) {
////                this.done_topic_ids = new ArrayList(save_word_friend_done_record_args.done_topic_ids);
////            }
////        }
////
////        public save_word_friend_done_record_args deepCopy() {
////            return new save_word_friend_done_record_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////            this.done_topic_ids = null;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public save_word_friend_done_record_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public int getDone_topic_idsSize() {
////            if (this.done_topic_ids == null) {
////                return 0;
////            }
////            return this.done_topic_ids.size();
////        }
////
////        public Iterator<Integer> getDone_topic_idsIterator() {
////            if (this.done_topic_ids == null) {
////                return null;
////            }
////            return this.done_topic_ids.iterator();
////        }
////
////        public void addToDone_topic_ids(int i) {
////            if (this.done_topic_ids == null) {
////                this.done_topic_ids = new ArrayList();
////            }
////            this.done_topic_ids.add(Integer.valueOf(i));
////        }
////
////        public List<Integer> getDone_topic_ids() {
////            return this.done_topic_ids;
////        }
////
////        public save_word_friend_done_record_args setDone_topic_ids(List<Integer> list) {
////            this.done_topic_ids = list;
////            return this;
////        }
////
////        public void unsetDone_topic_ids() {
////            this.done_topic_ids = null;
////        }
////
////        public boolean isSetDone_topic_ids() {
////            return this.done_topic_ids != null;
////        }
////
////        public void setDone_topic_idsIsSet(boolean z) {
////            if (!z) {
////                this.done_topic_ids = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case DONE_TOPIC_IDS:
////                    if (obj == null) {
////                        unsetDone_topic_ids();
////                        return;
////                    } else {
////                        setDone_topic_ids((List) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                case DONE_TOPIC_IDS:
////                    return getDone_topic_ids();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                case DONE_TOPIC_IDS:
////                    return isSetDone_topic_ids();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof save_word_friend_done_record_args)) {
////                return equals((save_word_friend_done_record_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(save_word_friend_done_record_args save_word_friend_done_record_args) {
////            if (save_word_friend_done_record_args == null || this.word_level_id != save_word_friend_done_record_args.word_level_id) {
////                return false;
////            }
////            boolean isSetDone_topic_ids = isSetDone_topic_ids();
////            boolean isSetDone_topic_ids2 = save_word_friend_done_record_args.isSetDone_topic_ids();
////            if ((isSetDone_topic_ids || isSetDone_topic_ids2) && (!isSetDone_topic_ids || !isSetDone_topic_ids2 || !this.done_topic_ids.equals(save_word_friend_done_record_args.done_topic_ids))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(save_word_friend_done_record_args save_word_friend_done_record_args) {
////            if (!getClass().equals(save_word_friend_done_record_args.getClass())) {
////                return getClass().getName().compareTo(save_word_friend_done_record_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(save_word_friend_done_record_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, save_word_friend_done_record_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetDone_topic_ids()).compareTo(Boolean.valueOf(save_word_friend_done_record_args.isSetDone_topic_ids()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetDone_topic_ids()) {
////                int a2 = C2121h.m5526a((List) this.done_topic_ids, (List) save_word_friend_done_record_args.done_topic_ids);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("save_word_friend_done_record_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(", ");
////            sb.append("done_topic_ids:");
////            if (this.done_topic_ids == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.done_topic_ids);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.done_topic_ids == null) {
////                throw new C2101g("Required field 'done_topic_ids' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class save_word_friend_done_record_result implements Serializable, Cloneable, Comparable<save_word_friend_done_record_result>, C2116f<save_word_friend_done_record_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("save_word_friend_done_record_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class save_word_friend_done_record_resultStandardScheme extends C2110c<save_word_friend_done_record_result> {
////            private save_word_friend_done_record_resultStandardScheme() {
////            }
////
////            /* synthetic */ save_word_friend_done_record_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, save_word_friend_done_record_result save_word_friend_done_record_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    save_word_friend_done_record_result.success = fVar.mo18513n();
////                                    save_word_friend_done_record_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    save_word_friend_done_record_result.sysException = new BESystemException();
////                                    save_word_friend_done_record_result.sysException.read(fVar);
////                                    save_word_friend_done_record_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    save_word_friend_done_record_result.logicException = new BELogicException();
////                                    save_word_friend_done_record_result.logicException.read(fVar);
////                                    save_word_friend_done_record_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        save_word_friend_done_record_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, save_word_friend_done_record_result save_word_friend_done_record_result) {
////                save_word_friend_done_record_result.validate();
////                save_word_friend_done_record_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (save_word_friend_done_record_result.isSetSuccess()) {
////                    fVar.mo18496a(save_word_friend_done_record_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(save_word_friend_done_record_result.success);
////                }
////                if (save_word_friend_done_record_result.sysException != null) {
////                    fVar.mo18496a(save_word_friend_done_record_result.SYS_EXCEPTION_FIELD_DESC);
////                    save_word_friend_done_record_result.sysException.write(fVar);
////                }
////                if (save_word_friend_done_record_result.logicException != null) {
////                    fVar.mo18496a(save_word_friend_done_record_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    save_word_friend_done_record_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class save_word_friend_done_record_resultStandardSchemeFactory implements C2109b {
////            private save_word_friend_done_record_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ save_word_friend_done_record_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public save_word_friend_done_record_resultStandardScheme getScheme() {
////                return new save_word_friend_done_record_resultStandardScheme(null);
////            }
////        }
////
////        class save_word_friend_done_record_resultTupleScheme extends C2111d<save_word_friend_done_record_result> {
////            private save_word_friend_done_record_resultTupleScheme() {
////            }
////
////            /* synthetic */ save_word_friend_done_record_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, save_word_friend_done_record_result save_word_friend_done_record_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (save_word_friend_done_record_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (save_word_friend_done_record_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (save_word_friend_done_record_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (save_word_friend_done_record_result.isSetSuccess()) {
////                    lVar.mo18493a(save_word_friend_done_record_result.success);
////                }
////                if (save_word_friend_done_record_result.isSetSysException()) {
////                    save_word_friend_done_record_result.sysException.write(lVar);
////                }
////                if (save_word_friend_done_record_result.isSetLogicException()) {
////                    save_word_friend_done_record_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, save_word_friend_done_record_result save_word_friend_done_record_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    save_word_friend_done_record_result.success = lVar.mo18513n();
////                    save_word_friend_done_record_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    save_word_friend_done_record_result.sysException = new BESystemException();
////                    save_word_friend_done_record_result.sysException.read(lVar);
////                    save_word_friend_done_record_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    save_word_friend_done_record_result.logicException = new BELogicException();
////                    save_word_friend_done_record_result.logicException.read(lVar);
////                    save_word_friend_done_record_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class save_word_friend_done_record_resultTupleSchemeFactory implements C2109b {
////            private save_word_friend_done_record_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ save_word_friend_done_record_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public save_word_friend_done_record_resultTupleScheme getScheme() {
////                return new save_word_friend_done_record_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new save_word_friend_done_record_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new save_word_friend_done_record_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(save_word_friend_done_record_result.class, metaDataMap);
////        }
////
////        public save_word_friend_done_record_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public save_word_friend_done_record_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public save_word_friend_done_record_result(save_word_friend_done_record_result save_word_friend_done_record_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = save_word_friend_done_record_result.__isset_bitfield;
////            this.success = save_word_friend_done_record_result.success;
////            if (save_word_friend_done_record_result.isSetSysException()) {
////                this.sysException = new BESystemException(save_word_friend_done_record_result.sysException);
////            }
////            if (save_word_friend_done_record_result.isSetLogicException()) {
////                this.logicException = new BELogicException(save_word_friend_done_record_result.logicException);
////            }
////        }
////
////        public save_word_friend_done_record_result deepCopy() {
////            return new save_word_friend_done_record_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public save_word_friend_done_record_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public save_word_friend_done_record_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public save_word_friend_done_record_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof save_word_friend_done_record_result)) {
////                return equals((save_word_friend_done_record_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(save_word_friend_done_record_result save_word_friend_done_record_result) {
////            if (save_word_friend_done_record_result == null || this.success != save_word_friend_done_record_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = save_word_friend_done_record_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(save_word_friend_done_record_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = save_word_friend_done_record_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(save_word_friend_done_record_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(save_word_friend_done_record_result save_word_friend_done_record_result) {
////            if (!getClass().equals(save_word_friend_done_record_result.getClass())) {
////                return getClass().getName().compareTo(save_word_friend_done_record_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(save_word_friend_done_record_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, save_word_friend_done_record_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(save_word_friend_done_record_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) save_word_friend_done_record_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(save_word_friend_done_record_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) save_word_friend_done_record_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("save_word_friend_done_record_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class select_book_args implements Serializable, Cloneable, Comparable<select_book_args>, C2116f<select_book_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b BOOK_ID_FIELD_DESC = new C2097b("book_id", 8, 1);
////        /* access modifiers changed from: private */
////        public static final C2097b END_TIME_FIELD_DESC = new C2097b("end_time", 10, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("select_book_args");
////        private static final int __BOOK_ID_ISSET_ID = 0;
////        private static final int __END_TIME_ISSET_ID = 1;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int book_id;
////        public long end_time;
////
////        public enum _Fields implements C2124m {
////            BOOK_ID(1, "book_id"),
////            END_TIME(2, "end_time");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return BOOK_ID;
////                    case 2:
////                        return END_TIME;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class select_book_argsStandardScheme extends C2110c<select_book_args> {
////            private select_book_argsStandardScheme() {
////            }
////
////            /* synthetic */ select_book_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, select_book_args select_book_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_args.book_id = fVar.mo18513n();
////                                    select_book_args.setBook_idIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 10) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_args.end_time = fVar.mo18514o();
////                                    select_book_args.setEnd_timeIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!select_book_args.isSetBook_id()) {
////                            throw new C2101g("Required field 'book_id' was not found in serialized data! Struct: " + toString());
////                        } else if (!select_book_args.isSetEnd_time()) {
////                            throw new C2101g("Required field 'end_time' was not found in serialized data! Struct: " + toString());
////                        } else {
////                            select_book_args.validate();
////                            return;
////                        }
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, select_book_args select_book_args) {
////                select_book_args.validate();
////                select_book_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(select_book_args.BOOK_ID_FIELD_DESC);
////                fVar.mo18493a(select_book_args.book_id);
////                fVar.mo18496a(select_book_args.END_TIME_FIELD_DESC);
////                fVar.mo18494a(select_book_args.end_time);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class select_book_argsStandardSchemeFactory implements C2109b {
////            private select_book_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ select_book_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_book_argsStandardScheme getScheme() {
////                return new select_book_argsStandardScheme(null);
////            }
////        }
////
////        class select_book_argsTupleScheme extends C2111d<select_book_args> {
////            private select_book_argsTupleScheme() {
////            }
////
////            /* synthetic */ select_book_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, select_book_args select_book_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(select_book_args.book_id);
////                lVar.mo18494a(select_book_args.end_time);
////            }
////
////            public void read(C2100f fVar, select_book_args select_book_args) {
////                C2106l lVar = (C2106l) fVar;
////                select_book_args.book_id = lVar.mo18513n();
////                select_book_args.setBook_idIsSet(true);
////                select_book_args.end_time = lVar.mo18514o();
////                select_book_args.setEnd_timeIsSet(true);
////            }
////        }
////
////        class select_book_argsTupleSchemeFactory implements C2109b {
////            private select_book_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ select_book_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_book_argsTupleScheme getScheme() {
////                return new select_book_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new select_book_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new select_book_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.BOOK_ID, new C2091a("book_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.END_TIME, new C2091a("end_time", 1, new C2092b(10, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(select_book_args.class, metaDataMap);
////        }
////
////        public select_book_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public select_book_args(int i, long j) {
////            this();
////            this.book_id = i;
////            setBook_idIsSet(true);
////            this.end_time = j;
////            setEnd_timeIsSet(true);
////        }
////
////        public select_book_args(select_book_args select_book_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = select_book_args.__isset_bitfield;
////            this.book_id = select_book_args.book_id;
////            this.end_time = select_book_args.end_time;
////        }
////
////        public select_book_args deepCopy() {
////            return new select_book_args(this);
////        }
////
////        public void clear() {
////            setBook_idIsSet(false);
////            this.book_id = 0;
////            setEnd_timeIsSet(false);
////            this.end_time = 0;
////        }
////
////        public int getBook_id() {
////            return this.book_id;
////        }
////
////        public select_book_args setBook_id(int i) {
////            this.book_id = i;
////            setBook_idIsSet(true);
////            return this;
////        }
////
////        public void unsetBook_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetBook_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setBook_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public long getEnd_time() {
////            return this.end_time;
////        }
////
////        public select_book_args setEnd_time(long j) {
////            this.end_time = j;
////            setEnd_timeIsSet(true);
////            return this;
////        }
////
////        public void unsetEnd_time() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -3);
////        }
////
////        public boolean isSetEnd_time() {
////            return C2090b.m5429a(this.__isset_bitfield, 1);
////        }
////
////        public void setEnd_timeIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 1, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case BOOK_ID:
////                    if (obj == null) {
////                        unsetBook_id();
////                        return;
////                    } else {
////                        setBook_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case END_TIME:
////                    if (obj == null) {
////                        unsetEnd_time();
////                        return;
////                    } else {
////                        setEnd_time(((Long) obj).longValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case BOOK_ID:
////                    return Integer.valueOf(getBook_id());
////                case END_TIME:
////                    return Long.valueOf(getEnd_time());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case BOOK_ID:
////                    return isSetBook_id();
////                case END_TIME:
////                    return isSetEnd_time();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof select_book_args)) {
////                return equals((select_book_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(select_book_args select_book_args) {
////            if (select_book_args != null && this.book_id == select_book_args.book_id && this.end_time == select_book_args.end_time) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(select_book_args select_book_args) {
////            if (!getClass().equals(select_book_args.getClass())) {
////                return getClass().getName().compareTo(select_book_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetBook_id()).compareTo(Boolean.valueOf(select_book_args.isSetBook_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetBook_id()) {
////                int a = C2121h.m5522a(this.book_id, select_book_args.book_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetEnd_time()).compareTo(Boolean.valueOf(select_book_args.isSetEnd_time()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetEnd_time()) {
////                int a2 = C2121h.m5523a(this.end_time, select_book_args.end_time);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("select_book_args(");
////            sb.append("book_id:");
////            sb.append(this.book_id);
////            sb.append(", ");
////            sb.append("end_time:");
////            sb.append(this.end_time);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class select_book_result implements Serializable, Cloneable, Comparable<select_book_result>, C2116f<select_book_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("select_book_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBUserSelectedBookInfo success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class select_book_resultStandardScheme extends C2110c<select_book_result> {
////            private select_book_resultStandardScheme() {
////            }
////
////            /* synthetic */ select_book_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, select_book_result select_book_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_result.success = new BBUserSelectedBookInfo();
////                                    select_book_result.success.read(fVar);
////                                    select_book_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_result.sysException = new BESystemException();
////                                    select_book_result.sysException.read(fVar);
////                                    select_book_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_result.logicException = new BELogicException();
////                                    select_book_result.logicException.read(fVar);
////                                    select_book_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        select_book_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, select_book_result select_book_result) {
////                select_book_result.validate();
////                select_book_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (select_book_result.success != null) {
////                    fVar.mo18496a(select_book_result.SUCCESS_FIELD_DESC);
////                    select_book_result.success.write(fVar);
////                }
////                if (select_book_result.sysException != null) {
////                    fVar.mo18496a(select_book_result.SYS_EXCEPTION_FIELD_DESC);
////                    select_book_result.sysException.write(fVar);
////                }
////                if (select_book_result.logicException != null) {
////                    fVar.mo18496a(select_book_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    select_book_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class select_book_resultStandardSchemeFactory implements C2109b {
////            private select_book_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ select_book_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_book_resultStandardScheme getScheme() {
////                return new select_book_resultStandardScheme(null);
////            }
////        }
////
////        class select_book_resultTupleScheme extends C2111d<select_book_result> {
////            private select_book_resultTupleScheme() {
////            }
////
////            /* synthetic */ select_book_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, select_book_result select_book_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (select_book_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (select_book_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (select_book_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (select_book_result.isSetSuccess()) {
////                    select_book_result.success.write(lVar);
////                }
////                if (select_book_result.isSetSysException()) {
////                    select_book_result.sysException.write(lVar);
////                }
////                if (select_book_result.isSetLogicException()) {
////                    select_book_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, select_book_result select_book_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    select_book_result.success = new BBUserSelectedBookInfo();
////                    select_book_result.success.read(lVar);
////                    select_book_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    select_book_result.sysException = new BESystemException();
////                    select_book_result.sysException.read(lVar);
////                    select_book_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    select_book_result.logicException = new BELogicException();
////                    select_book_result.logicException.read(lVar);
////                    select_book_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class select_book_resultTupleSchemeFactory implements C2109b {
////            private select_book_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ select_book_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_book_resultTupleScheme getScheme() {
////                return new select_book_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new select_book_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new select_book_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBUserSelectedBookInfo.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(select_book_result.class, metaDataMap);
////        }
////
////        public select_book_result() {
////        }
////
////        public select_book_result(BBUserSelectedBookInfo bBUserSelectedBookInfo, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBUserSelectedBookInfo;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public select_book_result(select_book_result select_book_result) {
////            if (select_book_result.isSetSuccess()) {
////                this.success = new BBUserSelectedBookInfo(select_book_result.success);
////            }
////            if (select_book_result.isSetSysException()) {
////                this.sysException = new BESystemException(select_book_result.sysException);
////            }
////            if (select_book_result.isSetLogicException()) {
////                this.logicException = new BELogicException(select_book_result.logicException);
////            }
////        }
////
////        public select_book_result deepCopy() {
////            return new select_book_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBUserSelectedBookInfo getSuccess() {
////            return this.success;
////        }
////
////        public select_book_result setSuccess(BBUserSelectedBookInfo bBUserSelectedBookInfo) {
////            this.success = bBUserSelectedBookInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public select_book_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public select_book_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBUserSelectedBookInfo) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof select_book_result)) {
////                return equals((select_book_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(select_book_result select_book_result) {
////            if (select_book_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = select_book_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(select_book_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = select_book_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(select_book_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = select_book_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(select_book_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(select_book_result select_book_result) {
////            if (!getClass().equals(select_book_result.getClass())) {
////                return getClass().getName().compareTo(select_book_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(select_book_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) select_book_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(select_book_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) select_book_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(select_book_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) select_book_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("select_book_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class select_book_v2_args implements Serializable, Cloneable, Comparable<select_book_v2_args>, C2116f<select_book_v2_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b BOOK_ID_FIELD_DESC = new C2097b("book_id", 8, 1);
////        /* access modifiers changed from: private */
////        public static final C2097b END_TIME_FIELD_DESC = new C2097b("end_time", 10, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("select_book_v2_args");
////        private static final int __BOOK_ID_ISSET_ID = 0;
////        private static final int __END_TIME_ISSET_ID = 1;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int book_id;
////        public long end_time;
////
////        public enum _Fields implements C2124m {
////            BOOK_ID(1, "book_id"),
////            END_TIME(2, "end_time");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return BOOK_ID;
////                    case 2:
////                        return END_TIME;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class select_book_v2_argsStandardScheme extends C2110c<select_book_v2_args> {
////            private select_book_v2_argsStandardScheme() {
////            }
////
////            /* synthetic */ select_book_v2_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, select_book_v2_args select_book_v2_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_v2_args.book_id = fVar.mo18513n();
////                                    select_book_v2_args.setBook_idIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 10) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_v2_args.end_time = fVar.mo18514o();
////                                    select_book_v2_args.setEnd_timeIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!select_book_v2_args.isSetBook_id()) {
////                            throw new C2101g("Required field 'book_id' was not found in serialized data! Struct: " + toString());
////                        } else if (!select_book_v2_args.isSetEnd_time()) {
////                            throw new C2101g("Required field 'end_time' was not found in serialized data! Struct: " + toString());
////                        } else {
////                            select_book_v2_args.validate();
////                            return;
////                        }
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, select_book_v2_args select_book_v2_args) {
////                select_book_v2_args.validate();
////                select_book_v2_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(select_book_v2_args.BOOK_ID_FIELD_DESC);
////                fVar.mo18493a(select_book_v2_args.book_id);
////                fVar.mo18496a(select_book_v2_args.END_TIME_FIELD_DESC);
////                fVar.mo18494a(select_book_v2_args.end_time);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class select_book_v2_argsStandardSchemeFactory implements C2109b {
////            private select_book_v2_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ select_book_v2_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_book_v2_argsStandardScheme getScheme() {
////                return new select_book_v2_argsStandardScheme(null);
////            }
////        }
////
////        class select_book_v2_argsTupleScheme extends C2111d<select_book_v2_args> {
////            private select_book_v2_argsTupleScheme() {
////            }
////
////            /* synthetic */ select_book_v2_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, select_book_v2_args select_book_v2_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(select_book_v2_args.book_id);
////                lVar.mo18494a(select_book_v2_args.end_time);
////            }
////
////            public void read(C2100f fVar, select_book_v2_args select_book_v2_args) {
////                C2106l lVar = (C2106l) fVar;
////                select_book_v2_args.book_id = lVar.mo18513n();
////                select_book_v2_args.setBook_idIsSet(true);
////                select_book_v2_args.end_time = lVar.mo18514o();
////                select_book_v2_args.setEnd_timeIsSet(true);
////            }
////        }
////
////        class select_book_v2_argsTupleSchemeFactory implements C2109b {
////            private select_book_v2_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ select_book_v2_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_book_v2_argsTupleScheme getScheme() {
////                return new select_book_v2_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new select_book_v2_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new select_book_v2_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.BOOK_ID, new C2091a("book_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.END_TIME, new C2091a("end_time", 1, new C2092b(10, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(select_book_v2_args.class, metaDataMap);
////        }
////
////        public select_book_v2_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public select_book_v2_args(int i, long j) {
////            this();
////            this.book_id = i;
////            setBook_idIsSet(true);
////            this.end_time = j;
////            setEnd_timeIsSet(true);
////        }
////
////        public select_book_v2_args(select_book_v2_args select_book_v2_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = select_book_v2_args.__isset_bitfield;
////            this.book_id = select_book_v2_args.book_id;
////            this.end_time = select_book_v2_args.end_time;
////        }
////
////        public select_book_v2_args deepCopy() {
////            return new select_book_v2_args(this);
////        }
////
////        public void clear() {
////            setBook_idIsSet(false);
////            this.book_id = 0;
////            setEnd_timeIsSet(false);
////            this.end_time = 0;
////        }
////
////        public int getBook_id() {
////            return this.book_id;
////        }
////
////        public select_book_v2_args setBook_id(int i) {
////            this.book_id = i;
////            setBook_idIsSet(true);
////            return this;
////        }
////
////        public void unsetBook_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetBook_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setBook_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public long getEnd_time() {
////            return this.end_time;
////        }
////
////        public select_book_v2_args setEnd_time(long j) {
////            this.end_time = j;
////            setEnd_timeIsSet(true);
////            return this;
////        }
////
////        public void unsetEnd_time() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -3);
////        }
////
////        public boolean isSetEnd_time() {
////            return C2090b.m5429a(this.__isset_bitfield, 1);
////        }
////
////        public void setEnd_timeIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 1, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case BOOK_ID:
////                    if (obj == null) {
////                        unsetBook_id();
////                        return;
////                    } else {
////                        setBook_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case END_TIME:
////                    if (obj == null) {
////                        unsetEnd_time();
////                        return;
////                    } else {
////                        setEnd_time(((Long) obj).longValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case BOOK_ID:
////                    return Integer.valueOf(getBook_id());
////                case END_TIME:
////                    return Long.valueOf(getEnd_time());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case BOOK_ID:
////                    return isSetBook_id();
////                case END_TIME:
////                    return isSetEnd_time();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof select_book_v2_args)) {
////                return equals((select_book_v2_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(select_book_v2_args select_book_v2_args) {
////            if (select_book_v2_args != null && this.book_id == select_book_v2_args.book_id && this.end_time == select_book_v2_args.end_time) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(select_book_v2_args select_book_v2_args) {
////            if (!getClass().equals(select_book_v2_args.getClass())) {
////                return getClass().getName().compareTo(select_book_v2_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetBook_id()).compareTo(Boolean.valueOf(select_book_v2_args.isSetBook_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetBook_id()) {
////                int a = C2121h.m5522a(this.book_id, select_book_v2_args.book_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetEnd_time()).compareTo(Boolean.valueOf(select_book_v2_args.isSetEnd_time()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetEnd_time()) {
////                int a2 = C2121h.m5523a(this.end_time, select_book_v2_args.end_time);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("select_book_v2_args(");
////            sb.append("book_id:");
////            sb.append(this.book_id);
////            sb.append(", ");
////            sb.append("end_time:");
////            sb.append(this.end_time);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class select_book_v2_result implements Serializable, Cloneable, Comparable<select_book_v2_result>, C2116f<select_book_v2_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("select_book_v2_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBSelectedBookInfo success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class select_book_v2_resultStandardScheme extends C2110c<select_book_v2_result> {
////            private select_book_v2_resultStandardScheme() {
////            }
////
////            /* synthetic */ select_book_v2_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, select_book_v2_result select_book_v2_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_v2_result.success = new BBSelectedBookInfo();
////                                    select_book_v2_result.success.read(fVar);
////                                    select_book_v2_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_v2_result.sysException = new BESystemException();
////                                    select_book_v2_result.sysException.read(fVar);
////                                    select_book_v2_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_book_v2_result.logicException = new BELogicException();
////                                    select_book_v2_result.logicException.read(fVar);
////                                    select_book_v2_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        select_book_v2_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, select_book_v2_result select_book_v2_result) {
////                select_book_v2_result.validate();
////                select_book_v2_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (select_book_v2_result.success != null) {
////                    fVar.mo18496a(select_book_v2_result.SUCCESS_FIELD_DESC);
////                    select_book_v2_result.success.write(fVar);
////                }
////                if (select_book_v2_result.sysException != null) {
////                    fVar.mo18496a(select_book_v2_result.SYS_EXCEPTION_FIELD_DESC);
////                    select_book_v2_result.sysException.write(fVar);
////                }
////                if (select_book_v2_result.logicException != null) {
////                    fVar.mo18496a(select_book_v2_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    select_book_v2_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class select_book_v2_resultStandardSchemeFactory implements C2109b {
////            private select_book_v2_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ select_book_v2_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_book_v2_resultStandardScheme getScheme() {
////                return new select_book_v2_resultStandardScheme(null);
////            }
////        }
////
////        class select_book_v2_resultTupleScheme extends C2111d<select_book_v2_result> {
////            private select_book_v2_resultTupleScheme() {
////            }
////
////            /* synthetic */ select_book_v2_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, select_book_v2_result select_book_v2_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (select_book_v2_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (select_book_v2_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (select_book_v2_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (select_book_v2_result.isSetSuccess()) {
////                    select_book_v2_result.success.write(lVar);
////                }
////                if (select_book_v2_result.isSetSysException()) {
////                    select_book_v2_result.sysException.write(lVar);
////                }
////                if (select_book_v2_result.isSetLogicException()) {
////                    select_book_v2_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, select_book_v2_result select_book_v2_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    select_book_v2_result.success = new BBSelectedBookInfo();
////                    select_book_v2_result.success.read(lVar);
////                    select_book_v2_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    select_book_v2_result.sysException = new BESystemException();
////                    select_book_v2_result.sysException.read(lVar);
////                    select_book_v2_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    select_book_v2_result.logicException = new BELogicException();
////                    select_book_v2_result.logicException.read(lVar);
////                    select_book_v2_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class select_book_v2_resultTupleSchemeFactory implements C2109b {
////            private select_book_v2_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ select_book_v2_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_book_v2_resultTupleScheme getScheme() {
////                return new select_book_v2_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new select_book_v2_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new select_book_v2_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBSelectedBookInfo.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(select_book_v2_result.class, metaDataMap);
////        }
////
////        public select_book_v2_result() {
////        }
////
////        public select_book_v2_result(BBSelectedBookInfo bBSelectedBookInfo, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBSelectedBookInfo;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public select_book_v2_result(select_book_v2_result select_book_v2_result) {
////            if (select_book_v2_result.isSetSuccess()) {
////                this.success = new BBSelectedBookInfo(select_book_v2_result.success);
////            }
////            if (select_book_v2_result.isSetSysException()) {
////                this.sysException = new BESystemException(select_book_v2_result.sysException);
////            }
////            if (select_book_v2_result.isSetLogicException()) {
////                this.logicException = new BELogicException(select_book_v2_result.logicException);
////            }
////        }
////
////        public select_book_v2_result deepCopy() {
////            return new select_book_v2_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBSelectedBookInfo getSuccess() {
////            return this.success;
////        }
////
////        public select_book_v2_result setSuccess(BBSelectedBookInfo bBSelectedBookInfo) {
////            this.success = bBSelectedBookInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public select_book_v2_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public select_book_v2_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBSelectedBookInfo) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof select_book_v2_result)) {
////                return equals((select_book_v2_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(select_book_v2_result select_book_v2_result) {
////            if (select_book_v2_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = select_book_v2_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(select_book_v2_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = select_book_v2_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(select_book_v2_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = select_book_v2_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(select_book_v2_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(select_book_v2_result select_book_v2_result) {
////            if (!getClass().equals(select_book_v2_result.getClass())) {
////                return getClass().getName().compareTo(select_book_v2_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(select_book_v2_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) select_book_v2_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(select_book_v2_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) select_book_v2_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(select_book_v2_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) select_book_v2_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("select_book_v2_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class select_word_level_args implements Serializable, Cloneable, Comparable<select_word_level_args>, C2116f<select_word_level_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b END_TIME_FIELD_DESC = new C2097b("end_time", 10, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("select_word_level_args");
////        /* access modifiers changed from: private */
////        public static final C2097b WORD_LEVEL_ID_FIELD_DESC = new C2097b("word_level_id", 8, 1);
////        private static final int __END_TIME_ISSET_ID = 1;
////        private static final int __WORD_LEVEL_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public long end_time;
////        public int word_level_id;
////
////        public enum _Fields implements C2124m {
////            WORD_LEVEL_ID(1, "word_level_id"),
////            END_TIME(2, "end_time");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return WORD_LEVEL_ID;
////                    case 2:
////                        return END_TIME;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class select_word_level_argsStandardScheme extends C2110c<select_word_level_args> {
////            private select_word_level_argsStandardScheme() {
////            }
////
////            /* synthetic */ select_word_level_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, select_word_level_args select_word_level_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_word_level_args.word_level_id = fVar.mo18513n();
////                                    select_word_level_args.setWord_level_idIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 10) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_word_level_args.end_time = fVar.mo18514o();
////                                    select_word_level_args.setEnd_timeIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!select_word_level_args.isSetWord_level_id()) {
////                            throw new C2101g("Required field 'word_level_id' was not found in serialized data! Struct: " + toString());
////                        } else if (!select_word_level_args.isSetEnd_time()) {
////                            throw new C2101g("Required field 'end_time' was not found in serialized data! Struct: " + toString());
////                        } else {
////                            select_word_level_args.validate();
////                            return;
////                        }
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, select_word_level_args select_word_level_args) {
////                select_word_level_args.validate();
////                select_word_level_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(select_word_level_args.WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(select_word_level_args.word_level_id);
////                fVar.mo18496a(select_word_level_args.END_TIME_FIELD_DESC);
////                fVar.mo18494a(select_word_level_args.end_time);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class select_word_level_argsStandardSchemeFactory implements C2109b {
////            private select_word_level_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ select_word_level_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_word_level_argsStandardScheme getScheme() {
////                return new select_word_level_argsStandardScheme(null);
////            }
////        }
////
////        class select_word_level_argsTupleScheme extends C2111d<select_word_level_args> {
////            private select_word_level_argsTupleScheme() {
////            }
////
////            /* synthetic */ select_word_level_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, select_word_level_args select_word_level_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(select_word_level_args.word_level_id);
////                lVar.mo18494a(select_word_level_args.end_time);
////            }
////
////            public void read(C2100f fVar, select_word_level_args select_word_level_args) {
////                C2106l lVar = (C2106l) fVar;
////                select_word_level_args.word_level_id = lVar.mo18513n();
////                select_word_level_args.setWord_level_idIsSet(true);
////                select_word_level_args.end_time = lVar.mo18514o();
////                select_word_level_args.setEnd_timeIsSet(true);
////            }
////        }
////
////        class select_word_level_argsTupleSchemeFactory implements C2109b {
////            private select_word_level_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ select_word_level_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_word_level_argsTupleScheme getScheme() {
////                return new select_word_level_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new select_word_level_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new select_word_level_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.WORD_LEVEL_ID, new C2091a("word_level_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.END_TIME, new C2091a("end_time", 1, new C2092b(10, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(select_word_level_args.class, metaDataMap);
////        }
////
////        public select_word_level_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public select_word_level_args(int i, long j) {
////            this();
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            this.end_time = j;
////            setEnd_timeIsSet(true);
////        }
////
////        public select_word_level_args(select_word_level_args select_word_level_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = select_word_level_args.__isset_bitfield;
////            this.word_level_id = select_word_level_args.word_level_id;
////            this.end_time = select_word_level_args.end_time;
////        }
////
////        public select_word_level_args deepCopy() {
////            return new select_word_level_args(this);
////        }
////
////        public void clear() {
////            setWord_level_idIsSet(false);
////            this.word_level_id = 0;
////            setEnd_timeIsSet(false);
////            this.end_time = 0;
////        }
////
////        public int getWord_level_id() {
////            return this.word_level_id;
////        }
////
////        public select_word_level_args setWord_level_id(int i) {
////            this.word_level_id = i;
////            setWord_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetWord_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetWord_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setWord_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public long getEnd_time() {
////            return this.end_time;
////        }
////
////        public select_word_level_args setEnd_time(long j) {
////            this.end_time = j;
////            setEnd_timeIsSet(true);
////            return this;
////        }
////
////        public void unsetEnd_time() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -3);
////        }
////
////        public boolean isSetEnd_time() {
////            return C2090b.m5429a(this.__isset_bitfield, 1);
////        }
////
////        public void setEnd_timeIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 1, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetWord_level_id();
////                        return;
////                    } else {
////                        setWord_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case END_TIME:
////                    if (obj == null) {
////                        unsetEnd_time();
////                        return;
////                    } else {
////                        setEnd_time(((Long) obj).longValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return Integer.valueOf(getWord_level_id());
////                case END_TIME:
////                    return Long.valueOf(getEnd_time());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case WORD_LEVEL_ID:
////                    return isSetWord_level_id();
////                case END_TIME:
////                    return isSetEnd_time();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof select_word_level_args)) {
////                return equals((select_word_level_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(select_word_level_args select_word_level_args) {
////            if (select_word_level_args != null && this.word_level_id == select_word_level_args.word_level_id && this.end_time == select_word_level_args.end_time) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(select_word_level_args select_word_level_args) {
////            if (!getClass().equals(select_word_level_args.getClass())) {
////                return getClass().getName().compareTo(select_word_level_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetWord_level_id()).compareTo(Boolean.valueOf(select_word_level_args.isSetWord_level_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetWord_level_id()) {
////                int a = C2121h.m5522a(this.word_level_id, select_word_level_args.word_level_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetEnd_time()).compareTo(Boolean.valueOf(select_word_level_args.isSetEnd_time()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetEnd_time()) {
////                int a2 = C2121h.m5523a(this.end_time, select_word_level_args.end_time);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("select_word_level_args(");
////            sb.append("word_level_id:");
////            sb.append(this.word_level_id);
////            sb.append(", ");
////            sb.append("end_time:");
////            sb.append(this.end_time);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class select_word_level_result implements Serializable, Cloneable, Comparable<select_word_level_result>, C2116f<select_word_level_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("select_word_level_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class select_word_level_resultStandardScheme extends C2110c<select_word_level_result> {
////            private select_word_level_resultStandardScheme() {
////            }
////
////            /* synthetic */ select_word_level_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, select_word_level_result select_word_level_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_word_level_result.success = fVar.mo18513n();
////                                    select_word_level_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_word_level_result.sysException = new BESystemException();
////                                    select_word_level_result.sysException.read(fVar);
////                                    select_word_level_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    select_word_level_result.logicException = new BELogicException();
////                                    select_word_level_result.logicException.read(fVar);
////                                    select_word_level_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        select_word_level_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, select_word_level_result select_word_level_result) {
////                select_word_level_result.validate();
////                select_word_level_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (select_word_level_result.isSetSuccess()) {
////                    fVar.mo18496a(select_word_level_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(select_word_level_result.success);
////                }
////                if (select_word_level_result.sysException != null) {
////                    fVar.mo18496a(select_word_level_result.SYS_EXCEPTION_FIELD_DESC);
////                    select_word_level_result.sysException.write(fVar);
////                }
////                if (select_word_level_result.logicException != null) {
////                    fVar.mo18496a(select_word_level_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    select_word_level_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class select_word_level_resultStandardSchemeFactory implements C2109b {
////            private select_word_level_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ select_word_level_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_word_level_resultStandardScheme getScheme() {
////                return new select_word_level_resultStandardScheme(null);
////            }
////        }
////
////        class select_word_level_resultTupleScheme extends C2111d<select_word_level_result> {
////            private select_word_level_resultTupleScheme() {
////            }
////
////            /* synthetic */ select_word_level_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, select_word_level_result select_word_level_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (select_word_level_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (select_word_level_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (select_word_level_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (select_word_level_result.isSetSuccess()) {
////                    lVar.mo18493a(select_word_level_result.success);
////                }
////                if (select_word_level_result.isSetSysException()) {
////                    select_word_level_result.sysException.write(lVar);
////                }
////                if (select_word_level_result.isSetLogicException()) {
////                    select_word_level_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, select_word_level_result select_word_level_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    select_word_level_result.success = lVar.mo18513n();
////                    select_word_level_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    select_word_level_result.sysException = new BESystemException();
////                    select_word_level_result.sysException.read(lVar);
////                    select_word_level_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    select_word_level_result.logicException = new BELogicException();
////                    select_word_level_result.logicException.read(lVar);
////                    select_word_level_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class select_word_level_resultTupleSchemeFactory implements C2109b {
////            private select_word_level_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ select_word_level_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public select_word_level_resultTupleScheme getScheme() {
////                return new select_word_level_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new select_word_level_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new select_word_level_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(select_word_level_result.class, metaDataMap);
////        }
////
////        public select_word_level_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public select_word_level_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public select_word_level_result(select_word_level_result select_word_level_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = select_word_level_result.__isset_bitfield;
////            this.success = select_word_level_result.success;
////            if (select_word_level_result.isSetSysException()) {
////                this.sysException = new BESystemException(select_word_level_result.sysException);
////            }
////            if (select_word_level_result.isSetLogicException()) {
////                this.logicException = new BELogicException(select_word_level_result.logicException);
////            }
////        }
////
////        public select_word_level_result deepCopy() {
////            return new select_word_level_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public select_word_level_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public select_word_level_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public select_word_level_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof select_word_level_result)) {
////                return equals((select_word_level_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(select_word_level_result select_word_level_result) {
////            if (select_word_level_result == null || this.success != select_word_level_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = select_word_level_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(select_word_level_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = select_word_level_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(select_word_level_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(select_word_level_result select_word_level_result) {
////            if (!getClass().equals(select_word_level_result.getClass())) {
////                return getClass().getName().compareTo(select_word_level_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(select_word_level_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, select_word_level_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(select_word_level_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) select_word_level_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(select_word_level_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) select_word_level_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("select_word_level_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class set_notify_info_args implements Serializable, Cloneable, Comparable<set_notify_info_args>, C2116f<set_notify_info_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b NOTIFY_SETTING_FIELD_DESC = new C2097b("notify_setting", JceStruct.ZERO_TAG, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("set_notify_info_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBUserNotifySetting notify_setting;
////
////        public enum _Fields implements C2124m {
////            NOTIFY_SETTING(1, "notify_setting");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return NOTIFY_SETTING;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class set_notify_info_argsStandardScheme extends C2110c<set_notify_info_args> {
////            private set_notify_info_argsStandardScheme() {
////            }
////
////            /* synthetic */ set_notify_info_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, set_notify_info_args set_notify_info_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    set_notify_info_args.notify_setting = new BBUserNotifySetting();
////                                    set_notify_info_args.notify_setting.read(fVar);
////                                    set_notify_info_args.setNotify_settingIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        set_notify_info_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, set_notify_info_args set_notify_info_args) {
////                set_notify_info_args.validate();
////                set_notify_info_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (set_notify_info_args.notify_setting != null) {
////                    fVar.mo18496a(set_notify_info_args.NOTIFY_SETTING_FIELD_DESC);
////                    set_notify_info_args.notify_setting.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class set_notify_info_argsStandardSchemeFactory implements C2109b {
////            private set_notify_info_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ set_notify_info_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public set_notify_info_argsStandardScheme getScheme() {
////                return new set_notify_info_argsStandardScheme(null);
////            }
////        }
////
////        class set_notify_info_argsTupleScheme extends C2111d<set_notify_info_args> {
////            private set_notify_info_argsTupleScheme() {
////            }
////
////            /* synthetic */ set_notify_info_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, set_notify_info_args set_notify_info_args) {
////                set_notify_info_args.notify_setting.write((C2106l) fVar);
////            }
////
////            public void read(C2100f fVar, set_notify_info_args set_notify_info_args) {
////                C2106l lVar = (C2106l) fVar;
////                set_notify_info_args.notify_setting = new BBUserNotifySetting();
////                set_notify_info_args.notify_setting.read(lVar);
////                set_notify_info_args.setNotify_settingIsSet(true);
////            }
////        }
////
////        class set_notify_info_argsTupleSchemeFactory implements C2109b {
////            private set_notify_info_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ set_notify_info_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public set_notify_info_argsTupleScheme getScheme() {
////                return new set_notify_info_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new set_notify_info_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new set_notify_info_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.NOTIFY_SETTING, new C2091a("notify_setting", 1, new C2095e(BBUserNotifySetting.class)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(set_notify_info_args.class, metaDataMap);
////        }
////
////        public set_notify_info_args() {
////        }
////
////        public set_notify_info_args(BBUserNotifySetting bBUserNotifySetting) {
////            this();
////            this.notify_setting = bBUserNotifySetting;
////        }
////
////        public set_notify_info_args(set_notify_info_args set_notify_info_args) {
////            if (set_notify_info_args.isSetNotify_setting()) {
////                this.notify_setting = new BBUserNotifySetting(set_notify_info_args.notify_setting);
////            }
////        }
////
////        public set_notify_info_args deepCopy() {
////            return new set_notify_info_args(this);
////        }
////
////        public void clear() {
////            this.notify_setting = null;
////        }
////
////        public BBUserNotifySetting getNotify_setting() {
////            return this.notify_setting;
////        }
////
////        public set_notify_info_args setNotify_setting(BBUserNotifySetting bBUserNotifySetting) {
////            this.notify_setting = bBUserNotifySetting;
////            return this;
////        }
////
////        public void unsetNotify_setting() {
////            this.notify_setting = null;
////        }
////
////        public boolean isSetNotify_setting() {
////            return this.notify_setting != null;
////        }
////
////        public void setNotify_settingIsSet(boolean z) {
////            if (!z) {
////                this.notify_setting = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case NOTIFY_SETTING:
////                    if (obj == null) {
////                        unsetNotify_setting();
////                        return;
////                    } else {
////                        setNotify_setting((BBUserNotifySetting) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case NOTIFY_SETTING:
////                    return getNotify_setting();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case NOTIFY_SETTING:
////                    return isSetNotify_setting();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof set_notify_info_args)) {
////                return equals((set_notify_info_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(set_notify_info_args set_notify_info_args) {
////            if (set_notify_info_args == null) {
////                return false;
////            }
////            boolean isSetNotify_setting = isSetNotify_setting();
////            boolean isSetNotify_setting2 = set_notify_info_args.isSetNotify_setting();
////            if ((isSetNotify_setting || isSetNotify_setting2) && (!isSetNotify_setting || !isSetNotify_setting2 || !this.notify_setting.equals(set_notify_info_args.notify_setting))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(set_notify_info_args set_notify_info_args) {
////            if (!getClass().equals(set_notify_info_args.getClass())) {
////                return getClass().getName().compareTo(set_notify_info_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetNotify_setting()).compareTo(Boolean.valueOf(set_notify_info_args.isSetNotify_setting()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetNotify_setting()) {
////                int a = C2121h.m5524a((Comparable) this.notify_setting, (Comparable) set_notify_info_args.notify_setting);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("set_notify_info_args(");
////            sb.append("notify_setting:");
////            if (this.notify_setting == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.notify_setting);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.notify_setting == null) {
////                throw new C2101g("Required field 'notify_setting' was not present! Struct: " + toString());
////            } else if (this.notify_setting != null) {
////                this.notify_setting.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class set_notify_info_result implements Serializable, Cloneable, Comparable<set_notify_info_result>, C2116f<set_notify_info_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("set_notify_info_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class set_notify_info_resultStandardScheme extends C2110c<set_notify_info_result> {
////            private set_notify_info_resultStandardScheme() {
////            }
////
////            /* synthetic */ set_notify_info_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, set_notify_info_result set_notify_info_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    set_notify_info_result.success = fVar.mo18513n();
////                                    set_notify_info_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    set_notify_info_result.sysException = new BESystemException();
////                                    set_notify_info_result.sysException.read(fVar);
////                                    set_notify_info_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    set_notify_info_result.logicException = new BELogicException();
////                                    set_notify_info_result.logicException.read(fVar);
////                                    set_notify_info_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        set_notify_info_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, set_notify_info_result set_notify_info_result) {
////                set_notify_info_result.validate();
////                set_notify_info_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (set_notify_info_result.isSetSuccess()) {
////                    fVar.mo18496a(set_notify_info_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(set_notify_info_result.success);
////                }
////                if (set_notify_info_result.sysException != null) {
////                    fVar.mo18496a(set_notify_info_result.SYS_EXCEPTION_FIELD_DESC);
////                    set_notify_info_result.sysException.write(fVar);
////                }
////                if (set_notify_info_result.logicException != null) {
////                    fVar.mo18496a(set_notify_info_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    set_notify_info_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class set_notify_info_resultStandardSchemeFactory implements C2109b {
////            private set_notify_info_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ set_notify_info_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public set_notify_info_resultStandardScheme getScheme() {
////                return new set_notify_info_resultStandardScheme(null);
////            }
////        }
////
////        class set_notify_info_resultTupleScheme extends C2111d<set_notify_info_result> {
////            private set_notify_info_resultTupleScheme() {
////            }
////
////            /* synthetic */ set_notify_info_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, set_notify_info_result set_notify_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (set_notify_info_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (set_notify_info_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (set_notify_info_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (set_notify_info_result.isSetSuccess()) {
////                    lVar.mo18493a(set_notify_info_result.success);
////                }
////                if (set_notify_info_result.isSetSysException()) {
////                    set_notify_info_result.sysException.write(lVar);
////                }
////                if (set_notify_info_result.isSetLogicException()) {
////                    set_notify_info_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, set_notify_info_result set_notify_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    set_notify_info_result.success = lVar.mo18513n();
////                    set_notify_info_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    set_notify_info_result.sysException = new BESystemException();
////                    set_notify_info_result.sysException.read(lVar);
////                    set_notify_info_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    set_notify_info_result.logicException = new BELogicException();
////                    set_notify_info_result.logicException.read(lVar);
////                    set_notify_info_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class set_notify_info_resultTupleSchemeFactory implements C2109b {
////            private set_notify_info_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ set_notify_info_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public set_notify_info_resultTupleScheme getScheme() {
////                return new set_notify_info_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new set_notify_info_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new set_notify_info_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(set_notify_info_result.class, metaDataMap);
////        }
////
////        public set_notify_info_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public set_notify_info_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public set_notify_info_result(set_notify_info_result set_notify_info_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = set_notify_info_result.__isset_bitfield;
////            this.success = set_notify_info_result.success;
////            if (set_notify_info_result.isSetSysException()) {
////                this.sysException = new BESystemException(set_notify_info_result.sysException);
////            }
////            if (set_notify_info_result.isSetLogicException()) {
////                this.logicException = new BELogicException(set_notify_info_result.logicException);
////            }
////        }
////
////        public set_notify_info_result deepCopy() {
////            return new set_notify_info_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public set_notify_info_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public set_notify_info_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public set_notify_info_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof set_notify_info_result)) {
////                return equals((set_notify_info_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(set_notify_info_result set_notify_info_result) {
////            if (set_notify_info_result == null || this.success != set_notify_info_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = set_notify_info_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(set_notify_info_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = set_notify_info_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(set_notify_info_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(set_notify_info_result set_notify_info_result) {
////            if (!getClass().equals(set_notify_info_result.getClass())) {
////                return getClass().getName().compareTo(set_notify_info_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(set_notify_info_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, set_notify_info_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(set_notify_info_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) set_notify_info_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(set_notify_info_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) set_notify_info_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("set_notify_info_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class sync_user_word_media_record_args implements Serializable, Cloneable, Comparable<sync_user_word_media_record_args>, C2116f<sync_user_word_media_record_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("sync_user_word_media_record_args");
////        /* access modifiers changed from: private */
////        public static final C2097b USER_MEDIA_RECORDS_FIELD_DESC = new C2097b("user_media_records", 15, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public List<BBUserWordMedia> user_media_records;
////
////        public enum _Fields implements C2124m {
////            USER_MEDIA_RECORDS(1, "user_media_records");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return USER_MEDIA_RECORDS;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class sync_user_word_media_record_argsStandardScheme extends C2110c<sync_user_word_media_record_args> {
////            private sync_user_word_media_record_argsStandardScheme() {
////            }
////
////            /* synthetic */ sync_user_word_media_record_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, sync_user_word_media_record_args sync_user_word_media_record_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    sync_user_word_media_record_args.user_media_records = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBUserWordMedia bBUserWordMedia = new BBUserWordMedia();
////                                        bBUserWordMedia.read(fVar);
////                                        sync_user_word_media_record_args.user_media_records.add(bBUserWordMedia);
////                                    }
////                                    sync_user_word_media_record_args.setUser_media_recordsIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        sync_user_word_media_record_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, sync_user_word_media_record_args sync_user_word_media_record_args) {
////                sync_user_word_media_record_args.validate();
////                sync_user_word_media_record_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (sync_user_word_media_record_args.user_media_records != null) {
////                    fVar.mo18496a(sync_user_word_media_record_args.USER_MEDIA_RECORDS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, sync_user_word_media_record_args.user_media_records.size()));
////                    for (BBUserWordMedia write : sync_user_word_media_record_args.user_media_records) {
////                        write.write(fVar);
////                    }
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class sync_user_word_media_record_argsStandardSchemeFactory implements C2109b {
////            private sync_user_word_media_record_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ sync_user_word_media_record_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public sync_user_word_media_record_argsStandardScheme getScheme() {
////                return new sync_user_word_media_record_argsStandardScheme(null);
////            }
////        }
////
////        class sync_user_word_media_record_argsTupleScheme extends C2111d<sync_user_word_media_record_args> {
////            private sync_user_word_media_record_argsTupleScheme() {
////            }
////
////            /* synthetic */ sync_user_word_media_record_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, sync_user_word_media_record_args sync_user_word_media_record_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(sync_user_word_media_record_args.user_media_records.size());
////                for (BBUserWordMedia write : sync_user_word_media_record_args.user_media_records) {
////                    write.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, sync_user_word_media_record_args sync_user_word_media_record_args) {
////                C2106l lVar = (C2106l) fVar;
////                C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                sync_user_word_media_record_args.user_media_records = new ArrayList(cVar.f5838b);
////                for (int i = 0; i < cVar.f5838b; i++) {
////                    BBUserWordMedia bBUserWordMedia = new BBUserWordMedia();
////                    bBUserWordMedia.read(lVar);
////                    sync_user_word_media_record_args.user_media_records.add(bBUserWordMedia);
////                }
////                sync_user_word_media_record_args.setUser_media_recordsIsSet(true);
////            }
////        }
////
////        class sync_user_word_media_record_argsTupleSchemeFactory implements C2109b {
////            private sync_user_word_media_record_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ sync_user_word_media_record_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public sync_user_word_media_record_argsTupleScheme getScheme() {
////                return new sync_user_word_media_record_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new sync_user_word_media_record_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new sync_user_word_media_record_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.USER_MEDIA_RECORDS, new C2091a("user_media_records", 1, new C2093c(new C2095e(BBUserWordMedia.class))));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(sync_user_word_media_record_args.class, metaDataMap);
////        }
////
////        public sync_user_word_media_record_args() {
////        }
////
////        public sync_user_word_media_record_args(List<BBUserWordMedia> list) {
////            this();
////            this.user_media_records = list;
////        }
////
////        public sync_user_word_media_record_args(sync_user_word_media_record_args sync_user_word_media_record_args) {
////            if (sync_user_word_media_record_args.isSetUser_media_records()) {
////                ArrayList arrayList = new ArrayList(sync_user_word_media_record_args.user_media_records.size());
////                for (BBUserWordMedia bBUserWordMedia : sync_user_word_media_record_args.user_media_records) {
////                    arrayList.add(new BBUserWordMedia(bBUserWordMedia));
////                }
////                this.user_media_records = arrayList;
////            }
////        }
////
////        public sync_user_word_media_record_args deepCopy() {
////            return new sync_user_word_media_record_args(this);
////        }
////
////        public void clear() {
////            this.user_media_records = null;
////        }
////
////        public int getUser_media_recordsSize() {
////            if (this.user_media_records == null) {
////                return 0;
////            }
////            return this.user_media_records.size();
////        }
////
////        public Iterator<BBUserWordMedia> getUser_media_recordsIterator() {
////            if (this.user_media_records == null) {
////                return null;
////            }
////            return this.user_media_records.iterator();
////        }
////
////        public void addToUser_media_records(BBUserWordMedia bBUserWordMedia) {
////            if (this.user_media_records == null) {
////                this.user_media_records = new ArrayList();
////            }
////            this.user_media_records.add(bBUserWordMedia);
////        }
////
////        public List<BBUserWordMedia> getUser_media_records() {
////            return this.user_media_records;
////        }
////
////        public sync_user_word_media_record_args setUser_media_records(List<BBUserWordMedia> list) {
////            this.user_media_records = list;
////            return this;
////        }
////
////        public void unsetUser_media_records() {
////            this.user_media_records = null;
////        }
////
////        public boolean isSetUser_media_records() {
////            return this.user_media_records != null;
////        }
////
////        public void setUser_media_recordsIsSet(boolean z) {
////            if (!z) {
////                this.user_media_records = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case USER_MEDIA_RECORDS:
////                    if (obj == null) {
////                        unsetUser_media_records();
////                        return;
////                    } else {
////                        setUser_media_records((List) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case USER_MEDIA_RECORDS:
////                    return getUser_media_records();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case USER_MEDIA_RECORDS:
////                    return isSetUser_media_records();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof sync_user_word_media_record_args)) {
////                return equals((sync_user_word_media_record_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(sync_user_word_media_record_args sync_user_word_media_record_args) {
////            if (sync_user_word_media_record_args == null) {
////                return false;
////            }
////            boolean isSetUser_media_records = isSetUser_media_records();
////            boolean isSetUser_media_records2 = sync_user_word_media_record_args.isSetUser_media_records();
////            if ((isSetUser_media_records || isSetUser_media_records2) && (!isSetUser_media_records || !isSetUser_media_records2 || !this.user_media_records.equals(sync_user_word_media_record_args.user_media_records))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(sync_user_word_media_record_args sync_user_word_media_record_args) {
////            if (!getClass().equals(sync_user_word_media_record_args.getClass())) {
////                return getClass().getName().compareTo(sync_user_word_media_record_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetUser_media_records()).compareTo(Boolean.valueOf(sync_user_word_media_record_args.isSetUser_media_records()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetUser_media_records()) {
////                int a = C2121h.m5526a((List) this.user_media_records, (List) sync_user_word_media_record_args.user_media_records);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("sync_user_word_media_record_args(");
////            sb.append("user_media_records:");
////            if (this.user_media_records == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.user_media_records);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.user_media_records == null) {
////                throw new C2101g("Required field 'user_media_records' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class sync_user_word_media_record_result implements Serializable, Cloneable, Comparable<sync_user_word_media_record_result>, C2116f<sync_user_word_media_record_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("sync_user_word_media_record_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class sync_user_word_media_record_resultStandardScheme extends C2110c<sync_user_word_media_record_result> {
////            private sync_user_word_media_record_resultStandardScheme() {
////            }
////
////            /* synthetic */ sync_user_word_media_record_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, sync_user_word_media_record_result sync_user_word_media_record_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    sync_user_word_media_record_result.success = fVar.mo18513n();
////                                    sync_user_word_media_record_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    sync_user_word_media_record_result.sysException = new BESystemException();
////                                    sync_user_word_media_record_result.sysException.read(fVar);
////                                    sync_user_word_media_record_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    sync_user_word_media_record_result.logicException = new BELogicException();
////                                    sync_user_word_media_record_result.logicException.read(fVar);
////                                    sync_user_word_media_record_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        sync_user_word_media_record_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, sync_user_word_media_record_result sync_user_word_media_record_result) {
////                sync_user_word_media_record_result.validate();
////                sync_user_word_media_record_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (sync_user_word_media_record_result.isSetSuccess()) {
////                    fVar.mo18496a(sync_user_word_media_record_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(sync_user_word_media_record_result.success);
////                }
////                if (sync_user_word_media_record_result.sysException != null) {
////                    fVar.mo18496a(sync_user_word_media_record_result.SYS_EXCEPTION_FIELD_DESC);
////                    sync_user_word_media_record_result.sysException.write(fVar);
////                }
////                if (sync_user_word_media_record_result.logicException != null) {
////                    fVar.mo18496a(sync_user_word_media_record_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    sync_user_word_media_record_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class sync_user_word_media_record_resultStandardSchemeFactory implements C2109b {
////            private sync_user_word_media_record_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ sync_user_word_media_record_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public sync_user_word_media_record_resultStandardScheme getScheme() {
////                return new sync_user_word_media_record_resultStandardScheme(null);
////            }
////        }
////
////        class sync_user_word_media_record_resultTupleScheme extends C2111d<sync_user_word_media_record_result> {
////            private sync_user_word_media_record_resultTupleScheme() {
////            }
////
////            /* synthetic */ sync_user_word_media_record_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, sync_user_word_media_record_result sync_user_word_media_record_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (sync_user_word_media_record_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (sync_user_word_media_record_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (sync_user_word_media_record_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (sync_user_word_media_record_result.isSetSuccess()) {
////                    lVar.mo18493a(sync_user_word_media_record_result.success);
////                }
////                if (sync_user_word_media_record_result.isSetSysException()) {
////                    sync_user_word_media_record_result.sysException.write(lVar);
////                }
////                if (sync_user_word_media_record_result.isSetLogicException()) {
////                    sync_user_word_media_record_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, sync_user_word_media_record_result sync_user_word_media_record_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    sync_user_word_media_record_result.success = lVar.mo18513n();
////                    sync_user_word_media_record_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    sync_user_word_media_record_result.sysException = new BESystemException();
////                    sync_user_word_media_record_result.sysException.read(lVar);
////                    sync_user_word_media_record_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    sync_user_word_media_record_result.logicException = new BELogicException();
////                    sync_user_word_media_record_result.logicException.read(lVar);
////                    sync_user_word_media_record_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class sync_user_word_media_record_resultTupleSchemeFactory implements C2109b {
////            private sync_user_word_media_record_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ sync_user_word_media_record_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public sync_user_word_media_record_resultTupleScheme getScheme() {
////                return new sync_user_word_media_record_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new sync_user_word_media_record_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new sync_user_word_media_record_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(sync_user_word_media_record_result.class, metaDataMap);
////        }
////
////        public sync_user_word_media_record_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public sync_user_word_media_record_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public sync_user_word_media_record_result(sync_user_word_media_record_result sync_user_word_media_record_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = sync_user_word_media_record_result.__isset_bitfield;
////            this.success = sync_user_word_media_record_result.success;
////            if (sync_user_word_media_record_result.isSetSysException()) {
////                this.sysException = new BESystemException(sync_user_word_media_record_result.sysException);
////            }
////            if (sync_user_word_media_record_result.isSetLogicException()) {
////                this.logicException = new BELogicException(sync_user_word_media_record_result.logicException);
////            }
////        }
////
////        public sync_user_word_media_record_result deepCopy() {
////            return new sync_user_word_media_record_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public sync_user_word_media_record_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public sync_user_word_media_record_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public sync_user_word_media_record_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof sync_user_word_media_record_result)) {
////                return equals((sync_user_word_media_record_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(sync_user_word_media_record_result sync_user_word_media_record_result) {
////            if (sync_user_word_media_record_result == null || this.success != sync_user_word_media_record_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = sync_user_word_media_record_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(sync_user_word_media_record_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = sync_user_word_media_record_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(sync_user_word_media_record_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(sync_user_word_media_record_result sync_user_word_media_record_result) {
////            if (!getClass().equals(sync_user_word_media_record_result.getClass())) {
////                return getClass().getName().compareTo(sync_user_word_media_record_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(sync_user_word_media_record_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, sync_user_word_media_record_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(sync_user_word_media_record_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) sync_user_word_media_record_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(sync_user_word_media_record_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) sync_user_word_media_record_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("sync_user_word_media_record_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class update_done_data_args implements Serializable, Cloneable, Comparable<update_done_data_args>, C2116f<update_done_data_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b ARR_DONE_RECORDS_FIELD_DESC = new C2097b("arr_done_records", 15, 2);
////        /* access modifiers changed from: private */
////        public static final C2097b CURRENT_WORD_LEVEL_ID_FIELD_DESC = new C2097b("current_word_level_id", 8, 3);
////        /* access modifiers changed from: private */
////        public static final C2097b IS_TODAY_COMPLETED_FIELD_DESC = new C2097b("is_today_completed", 2, 4);
////        /* access modifiers changed from: private */
////        public static final C2097b LAST_SYNC_AT_FIELD_DESC = new C2097b("last_sync_at", 10, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("update_done_data_args");
////        private static final int __CURRENT_WORD_LEVEL_ID_ISSET_ID = 1;
////        private static final int __IS_TODAY_COMPLETED_ISSET_ID = 2;
////        private static final int __LAST_SYNC_AT_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public List<BBDoneRecord> arr_done_records;
////        public int current_word_level_id;
////        public boolean is_today_completed;
////        public long last_sync_at;
////
////        public enum _Fields implements C2124m {
////            LAST_SYNC_AT(1, "last_sync_at"),
////            ARR_DONE_RECORDS(2, "arr_done_records"),
////            CURRENT_WORD_LEVEL_ID(3, "current_word_level_id"),
////            IS_TODAY_COMPLETED(4, "is_today_completed");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return LAST_SYNC_AT;
////                    case 2:
////                        return ARR_DONE_RECORDS;
////                    case 3:
////                        return CURRENT_WORD_LEVEL_ID;
////                    case 4:
////                        return IS_TODAY_COMPLETED;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class update_done_data_argsStandardScheme extends C2110c<update_done_data_args> {
////            private update_done_data_argsStandardScheme() {
////            }
////
////            /* synthetic */ update_done_data_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, update_done_data_args update_done_data_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 10) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_done_data_args.last_sync_at = fVar.mo18514o();
////                                    update_done_data_args.setLast_sync_atIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    update_done_data_args.arr_done_records = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBDoneRecord bBDoneRecord = new BBDoneRecord();
////                                        bBDoneRecord.read(fVar);
////                                        update_done_data_args.arr_done_records.add(bBDoneRecord);
////                                    }
////                                    update_done_data_args.setArr_done_recordsIsSet(true);
////                                    break;
////                                }
////                            case 3:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_done_data_args.current_word_level_id = fVar.mo18513n();
////                                    update_done_data_args.setCurrent_word_level_idIsSet(true);
////                                    break;
////                                }
////                            case 4:
////                                if (g.f5835b != 2) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_done_data_args.is_today_completed = fVar.mo18510k();
////                                    update_done_data_args.setIs_today_completedIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!update_done_data_args.isSetLast_sync_at()) {
////                            throw new C2101g("Required field 'last_sync_at' was not found in serialized data! Struct: " + toString());
////                        } else if (!update_done_data_args.isSetCurrent_word_level_id()) {
////                            throw new C2101g("Required field 'current_word_level_id' was not found in serialized data! Struct: " + toString());
////                        } else if (!update_done_data_args.isSetIs_today_completed()) {
////                            throw new C2101g("Required field 'is_today_completed' was not found in serialized data! Struct: " + toString());
////                        } else {
////                            update_done_data_args.validate();
////                            return;
////                        }
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, update_done_data_args update_done_data_args) {
////                update_done_data_args.validate();
////                update_done_data_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(update_done_data_args.LAST_SYNC_AT_FIELD_DESC);
////                fVar.mo18494a(update_done_data_args.last_sync_at);
////                if (update_done_data_args.arr_done_records != null) {
////                    fVar.mo18496a(update_done_data_args.ARR_DONE_RECORDS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, update_done_data_args.arr_done_records.size()));
////                    for (BBDoneRecord write : update_done_data_args.arr_done_records) {
////                        write.write(fVar);
////                    }
////                }
////                fVar.mo18496a(update_done_data_args.CURRENT_WORD_LEVEL_ID_FIELD_DESC);
////                fVar.mo18493a(update_done_data_args.current_word_level_id);
////                fVar.mo18496a(update_done_data_args.IS_TODAY_COMPLETED_FIELD_DESC);
////                fVar.mo18500a(update_done_data_args.is_today_completed);
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class update_done_data_argsStandardSchemeFactory implements C2109b {
////            private update_done_data_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ update_done_data_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_done_data_argsStandardScheme getScheme() {
////                return new update_done_data_argsStandardScheme(null);
////            }
////        }
////
////        class update_done_data_argsTupleScheme extends C2111d<update_done_data_args> {
////            private update_done_data_argsTupleScheme() {
////            }
////
////            /* synthetic */ update_done_data_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, update_done_data_args update_done_data_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18494a(update_done_data_args.last_sync_at);
////                lVar.mo18493a(update_done_data_args.arr_done_records.size());
////                for (BBDoneRecord write : update_done_data_args.arr_done_records) {
////                    write.write(lVar);
////                }
////                lVar.mo18493a(update_done_data_args.current_word_level_id);
////                lVar.mo18500a(update_done_data_args.is_today_completed);
////            }
////
////            public void read(C2100f fVar, update_done_data_args update_done_data_args) {
////                C2106l lVar = (C2106l) fVar;
////                update_done_data_args.last_sync_at = lVar.mo18514o();
////                update_done_data_args.setLast_sync_atIsSet(true);
////                C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                update_done_data_args.arr_done_records = new ArrayList(cVar.f5838b);
////                for (int i = 0; i < cVar.f5838b; i++) {
////                    BBDoneRecord bBDoneRecord = new BBDoneRecord();
////                    bBDoneRecord.read(lVar);
////                    update_done_data_args.arr_done_records.add(bBDoneRecord);
////                }
////                update_done_data_args.setArr_done_recordsIsSet(true);
////                update_done_data_args.current_word_level_id = lVar.mo18513n();
////                update_done_data_args.setCurrent_word_level_idIsSet(true);
////                update_done_data_args.is_today_completed = lVar.mo18510k();
////                update_done_data_args.setIs_today_completedIsSet(true);
////            }
////        }
////
////        class update_done_data_argsTupleSchemeFactory implements C2109b {
////            private update_done_data_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ update_done_data_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_done_data_argsTupleScheme getScheme() {
////                return new update_done_data_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new update_done_data_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new update_done_data_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.LAST_SYNC_AT, new C2091a("last_sync_at", 1, new C2092b(10, 0)));
////            enumMap.put(_Fields.ARR_DONE_RECORDS, new C2091a("arr_done_records", 1, new C2093c(new C2095e(BBDoneRecord.class))));
////            enumMap.put(_Fields.CURRENT_WORD_LEVEL_ID, new C2091a("current_word_level_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.IS_TODAY_COMPLETED, new C2091a("is_today_completed", 1, new C2092b(2, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(update_done_data_args.class, metaDataMap);
////        }
////
////        public update_done_data_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public update_done_data_args(long j, List<BBDoneRecord> list, int i, boolean z) {
////            this();
////            this.last_sync_at = j;
////            setLast_sync_atIsSet(true);
////            this.arr_done_records = list;
////            this.current_word_level_id = i;
////            setCurrent_word_level_idIsSet(true);
////            this.is_today_completed = z;
////            setIs_today_completedIsSet(true);
////        }
////
////        public update_done_data_args(update_done_data_args update_done_data_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = update_done_data_args.__isset_bitfield;
////            this.last_sync_at = update_done_data_args.last_sync_at;
////            if (update_done_data_args.isSetArr_done_records()) {
////                ArrayList arrayList = new ArrayList(update_done_data_args.arr_done_records.size());
////                for (BBDoneRecord bBDoneRecord : update_done_data_args.arr_done_records) {
////                    arrayList.add(new BBDoneRecord(bBDoneRecord));
////                }
////                this.arr_done_records = arrayList;
////            }
////            this.current_word_level_id = update_done_data_args.current_word_level_id;
////            this.is_today_completed = update_done_data_args.is_today_completed;
////        }
////
////        public update_done_data_args deepCopy() {
////            return new update_done_data_args(this);
////        }
////
////        public void clear() {
////            setLast_sync_atIsSet(false);
////            this.last_sync_at = 0;
////            this.arr_done_records = null;
////            setCurrent_word_level_idIsSet(false);
////            this.current_word_level_id = 0;
////            setIs_today_completedIsSet(false);
////            this.is_today_completed = false;
////        }
////
////        public long getLast_sync_at() {
////            return this.last_sync_at;
////        }
////
////        public update_done_data_args setLast_sync_at(long j) {
////            this.last_sync_at = j;
////            setLast_sync_atIsSet(true);
////            return this;
////        }
////
////        public void unsetLast_sync_at() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetLast_sync_at() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setLast_sync_atIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public int getArr_done_recordsSize() {
////            if (this.arr_done_records == null) {
////                return 0;
////            }
////            return this.arr_done_records.size();
////        }
////
////        public Iterator<BBDoneRecord> getArr_done_recordsIterator() {
////            if (this.arr_done_records == null) {
////                return null;
////            }
////            return this.arr_done_records.iterator();
////        }
////
////        public void addToArr_done_records(BBDoneRecord bBDoneRecord) {
////            if (this.arr_done_records == null) {
////                this.arr_done_records = new ArrayList();
////            }
////            this.arr_done_records.add(bBDoneRecord);
////        }
////
////        public List<BBDoneRecord> getArr_done_records() {
////            return this.arr_done_records;
////        }
////
////        public update_done_data_args setArr_done_records(List<BBDoneRecord> list) {
////            this.arr_done_records = list;
////            return this;
////        }
////
////        public void unsetArr_done_records() {
////            this.arr_done_records = null;
////        }
////
////        public boolean isSetArr_done_records() {
////            return this.arr_done_records != null;
////        }
////
////        public void setArr_done_recordsIsSet(boolean z) {
////            if (!z) {
////                this.arr_done_records = null;
////            }
////        }
////
////        public int getCurrent_word_level_id() {
////            return this.current_word_level_id;
////        }
////
////        public update_done_data_args setCurrent_word_level_id(int i) {
////            this.current_word_level_id = i;
////            setCurrent_word_level_idIsSet(true);
////            return this;
////        }
////
////        public void unsetCurrent_word_level_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -3);
////        }
////
////        public boolean isSetCurrent_word_level_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 1);
////        }
////
////        public void setCurrent_word_level_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 1, z);
////        }
////
////        public boolean isIs_today_completed() {
////            return this.is_today_completed;
////        }
////
////        public update_done_data_args setIs_today_completed(boolean z) {
////            this.is_today_completed = z;
////            setIs_today_completedIsSet(true);
////            return this;
////        }
////
////        public void unsetIs_today_completed() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -5);
////        }
////
////        public boolean isSetIs_today_completed() {
////            return C2090b.m5429a(this.__isset_bitfield, 2);
////        }
////
////        public void setIs_today_completedIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 2, z);
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case LAST_SYNC_AT:
////                    if (obj == null) {
////                        unsetLast_sync_at();
////                        return;
////                    } else {
////                        setLast_sync_at(((Long) obj).longValue());
////                        return;
////                    }
////                case ARR_DONE_RECORDS:
////                    if (obj == null) {
////                        unsetArr_done_records();
////                        return;
////                    } else {
////                        setArr_done_records((List) obj);
////                        return;
////                    }
////                case CURRENT_WORD_LEVEL_ID:
////                    if (obj == null) {
////                        unsetCurrent_word_level_id();
////                        return;
////                    } else {
////                        setCurrent_word_level_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case IS_TODAY_COMPLETED:
////                    if (obj == null) {
////                        unsetIs_today_completed();
////                        return;
////                    } else {
////                        setIs_today_completed(((Boolean) obj).booleanValue());
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case LAST_SYNC_AT:
////                    return Long.valueOf(getLast_sync_at());
////                case ARR_DONE_RECORDS:
////                    return getArr_done_records();
////                case CURRENT_WORD_LEVEL_ID:
////                    return Integer.valueOf(getCurrent_word_level_id());
////                case IS_TODAY_COMPLETED:
////                    return Boolean.valueOf(isIs_today_completed());
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case LAST_SYNC_AT:
////                    return isSetLast_sync_at();
////                case ARR_DONE_RECORDS:
////                    return isSetArr_done_records();
////                case CURRENT_WORD_LEVEL_ID:
////                    return isSetCurrent_word_level_id();
////                case IS_TODAY_COMPLETED:
////                    return isSetIs_today_completed();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof update_done_data_args)) {
////                return equals((update_done_data_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(update_done_data_args update_done_data_args) {
////            if (update_done_data_args == null || this.last_sync_at != update_done_data_args.last_sync_at) {
////                return false;
////            }
////            boolean isSetArr_done_records = isSetArr_done_records();
////            boolean isSetArr_done_records2 = update_done_data_args.isSetArr_done_records();
////            if (((!isSetArr_done_records && !isSetArr_done_records2) || (isSetArr_done_records && isSetArr_done_records2 && this.arr_done_records.equals(update_done_data_args.arr_done_records))) && this.current_word_level_id == update_done_data_args.current_word_level_id && this.is_today_completed == update_done_data_args.is_today_completed) {
////                return true;
////            }
////            return false;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(update_done_data_args update_done_data_args) {
////            if (!getClass().equals(update_done_data_args.getClass())) {
////                return getClass().getName().compareTo(update_done_data_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetLast_sync_at()).compareTo(Boolean.valueOf(update_done_data_args.isSetLast_sync_at()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetLast_sync_at()) {
////                int a = C2121h.m5523a(this.last_sync_at, update_done_data_args.last_sync_at);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetArr_done_records()).compareTo(Boolean.valueOf(update_done_data_args.isSetArr_done_records()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetArr_done_records()) {
////                int a2 = C2121h.m5526a((List) this.arr_done_records, (List) update_done_data_args.arr_done_records);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetCurrent_word_level_id()).compareTo(Boolean.valueOf(update_done_data_args.isSetCurrent_word_level_id()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetCurrent_word_level_id()) {
////                int a3 = C2121h.m5522a(this.current_word_level_id, update_done_data_args.current_word_level_id);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            int compareTo4 = Boolean.valueOf(isSetIs_today_completed()).compareTo(Boolean.valueOf(update_done_data_args.isSetIs_today_completed()));
////            if (compareTo4 != 0) {
////                return compareTo4;
////            }
////            if (isSetIs_today_completed()) {
////                int a4 = C2121h.m5529a(this.is_today_completed, update_done_data_args.is_today_completed);
////                if (a4 != 0) {
////                    return a4;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("update_done_data_args(");
////            sb.append("last_sync_at:");
////            sb.append(this.last_sync_at);
////            sb.append(", ");
////            sb.append("arr_done_records:");
////            if (this.arr_done_records == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.arr_done_records);
////            }
////            sb.append(", ");
////            sb.append("current_word_level_id:");
////            sb.append(this.current_word_level_id);
////            sb.append(", ");
////            sb.append("is_today_completed:");
////            sb.append(this.is_today_completed);
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.arr_done_records == null) {
////                throw new C2101g("Required field 'arr_done_records' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class update_done_data_result implements Serializable, Cloneable, Comparable<update_done_data_result>, C2116f<update_done_data_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("update_done_data_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class update_done_data_resultStandardScheme extends C2110c<update_done_data_result> {
////            private update_done_data_resultStandardScheme() {
////            }
////
////            /* synthetic */ update_done_data_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, update_done_data_result update_done_data_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_done_data_result.success = fVar.mo18513n();
////                                    update_done_data_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_done_data_result.sysException = new BESystemException();
////                                    update_done_data_result.sysException.read(fVar);
////                                    update_done_data_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_done_data_result.logicException = new BELogicException();
////                                    update_done_data_result.logicException.read(fVar);
////                                    update_done_data_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        update_done_data_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, update_done_data_result update_done_data_result) {
////                update_done_data_result.validate();
////                update_done_data_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (update_done_data_result.isSetSuccess()) {
////                    fVar.mo18496a(update_done_data_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(update_done_data_result.success);
////                }
////                if (update_done_data_result.sysException != null) {
////                    fVar.mo18496a(update_done_data_result.SYS_EXCEPTION_FIELD_DESC);
////                    update_done_data_result.sysException.write(fVar);
////                }
////                if (update_done_data_result.logicException != null) {
////                    fVar.mo18496a(update_done_data_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    update_done_data_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class update_done_data_resultStandardSchemeFactory implements C2109b {
////            private update_done_data_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ update_done_data_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_done_data_resultStandardScheme getScheme() {
////                return new update_done_data_resultStandardScheme(null);
////            }
////        }
////
////        class update_done_data_resultTupleScheme extends C2111d<update_done_data_result> {
////            private update_done_data_resultTupleScheme() {
////            }
////
////            /* synthetic */ update_done_data_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, update_done_data_result update_done_data_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (update_done_data_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (update_done_data_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (update_done_data_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (update_done_data_result.isSetSuccess()) {
////                    lVar.mo18493a(update_done_data_result.success);
////                }
////                if (update_done_data_result.isSetSysException()) {
////                    update_done_data_result.sysException.write(lVar);
////                }
////                if (update_done_data_result.isSetLogicException()) {
////                    update_done_data_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, update_done_data_result update_done_data_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    update_done_data_result.success = lVar.mo18513n();
////                    update_done_data_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    update_done_data_result.sysException = new BESystemException();
////                    update_done_data_result.sysException.read(lVar);
////                    update_done_data_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    update_done_data_result.logicException = new BELogicException();
////                    update_done_data_result.logicException.read(lVar);
////                    update_done_data_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class update_done_data_resultTupleSchemeFactory implements C2109b {
////            private update_done_data_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ update_done_data_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_done_data_resultTupleScheme getScheme() {
////                return new update_done_data_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new update_done_data_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new update_done_data_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(update_done_data_result.class, metaDataMap);
////        }
////
////        public update_done_data_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public update_done_data_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public update_done_data_result(update_done_data_result update_done_data_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = update_done_data_result.__isset_bitfield;
////            this.success = update_done_data_result.success;
////            if (update_done_data_result.isSetSysException()) {
////                this.sysException = new BESystemException(update_done_data_result.sysException);
////            }
////            if (update_done_data_result.isSetLogicException()) {
////                this.logicException = new BELogicException(update_done_data_result.logicException);
////            }
////        }
////
////        public update_done_data_result deepCopy() {
////            return new update_done_data_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public update_done_data_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public update_done_data_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public update_done_data_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof update_done_data_result)) {
////                return equals((update_done_data_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(update_done_data_result update_done_data_result) {
////            if (update_done_data_result == null || this.success != update_done_data_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = update_done_data_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(update_done_data_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = update_done_data_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(update_done_data_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(update_done_data_result update_done_data_result) {
////            if (!getClass().equals(update_done_data_result.getClass())) {
////                return getClass().getName().compareTo(update_done_data_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(update_done_data_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, update_done_data_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(update_done_data_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) update_done_data_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(update_done_data_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) update_done_data_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("update_done_data_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class update_miscs_args implements Serializable, Cloneable, Comparable<update_miscs_args>, C2116f<update_miscs_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b MISCS_FIELD_DESC = new C2097b("miscs", 15, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("update_miscs_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public List<BBMiscInfo> miscs;
////
////        public enum _Fields implements C2124m {
////            MISCS(1, "miscs");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return MISCS;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class update_miscs_argsStandardScheme extends C2110c<update_miscs_args> {
////            private update_miscs_argsStandardScheme() {
////            }
////
////            /* synthetic */ update_miscs_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, update_miscs_args update_miscs_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    update_miscs_args.miscs = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBMiscInfo bBMiscInfo = new BBMiscInfo();
////                                        bBMiscInfo.read(fVar);
////                                        update_miscs_args.miscs.add(bBMiscInfo);
////                                    }
////                                    update_miscs_args.setMiscsIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        update_miscs_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, update_miscs_args update_miscs_args) {
////                update_miscs_args.validate();
////                update_miscs_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (update_miscs_args.miscs != null) {
////                    fVar.mo18496a(update_miscs_args.MISCS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, update_miscs_args.miscs.size()));
////                    for (BBMiscInfo write : update_miscs_args.miscs) {
////                        write.write(fVar);
////                    }
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class update_miscs_argsStandardSchemeFactory implements C2109b {
////            private update_miscs_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ update_miscs_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_miscs_argsStandardScheme getScheme() {
////                return new update_miscs_argsStandardScheme(null);
////            }
////        }
////
////        class update_miscs_argsTupleScheme extends C2111d<update_miscs_args> {
////            private update_miscs_argsTupleScheme() {
////            }
////
////            /* synthetic */ update_miscs_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, update_miscs_args update_miscs_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(update_miscs_args.miscs.size());
////                for (BBMiscInfo write : update_miscs_args.miscs) {
////                    write.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, update_miscs_args update_miscs_args) {
////                C2106l lVar = (C2106l) fVar;
////                C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                update_miscs_args.miscs = new ArrayList(cVar.f5838b);
////                for (int i = 0; i < cVar.f5838b; i++) {
////                    BBMiscInfo bBMiscInfo = new BBMiscInfo();
////                    bBMiscInfo.read(lVar);
////                    update_miscs_args.miscs.add(bBMiscInfo);
////                }
////                update_miscs_args.setMiscsIsSet(true);
////            }
////        }
////
////        class update_miscs_argsTupleSchemeFactory implements C2109b {
////            private update_miscs_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ update_miscs_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_miscs_argsTupleScheme getScheme() {
////                return new update_miscs_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new update_miscs_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new update_miscs_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.MISCS, new C2091a("miscs", 1, new C2093c(new C2095e(BBMiscInfo.class))));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(update_miscs_args.class, metaDataMap);
////        }
////
////        public update_miscs_args() {
////        }
////
////        public update_miscs_args(List<BBMiscInfo> list) {
////            this();
////            this.miscs = list;
////        }
////
////        public update_miscs_args(update_miscs_args update_miscs_args) {
////            if (update_miscs_args.isSetMiscs()) {
////                ArrayList arrayList = new ArrayList(update_miscs_args.miscs.size());
////                for (BBMiscInfo bBMiscInfo : update_miscs_args.miscs) {
////                    arrayList.add(new BBMiscInfo(bBMiscInfo));
////                }
////                this.miscs = arrayList;
////            }
////        }
////
////        public update_miscs_args deepCopy() {
////            return new update_miscs_args(this);
////        }
////
////        public void clear() {
////            this.miscs = null;
////        }
////
////        public int getMiscsSize() {
////            if (this.miscs == null) {
////                return 0;
////            }
////            return this.miscs.size();
////        }
////
////        public Iterator<BBMiscInfo> getMiscsIterator() {
////            if (this.miscs == null) {
////                return null;
////            }
////            return this.miscs.iterator();
////        }
////
////        public void addToMiscs(BBMiscInfo bBMiscInfo) {
////            if (this.miscs == null) {
////                this.miscs = new ArrayList();
////            }
////            this.miscs.add(bBMiscInfo);
////        }
////
////        public List<BBMiscInfo> getMiscs() {
////            return this.miscs;
////        }
////
////        public update_miscs_args setMiscs(List<BBMiscInfo> list) {
////            this.miscs = list;
////            return this;
////        }
////
////        public void unsetMiscs() {
////            this.miscs = null;
////        }
////
////        public boolean isSetMiscs() {
////            return this.miscs != null;
////        }
////
////        public void setMiscsIsSet(boolean z) {
////            if (!z) {
////                this.miscs = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case MISCS:
////                    if (obj == null) {
////                        unsetMiscs();
////                        return;
////                    } else {
////                        setMiscs((List) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case MISCS:
////                    return getMiscs();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case MISCS:
////                    return isSetMiscs();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof update_miscs_args)) {
////                return equals((update_miscs_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(update_miscs_args update_miscs_args) {
////            if (update_miscs_args == null) {
////                return false;
////            }
////            boolean isSetMiscs = isSetMiscs();
////            boolean isSetMiscs2 = update_miscs_args.isSetMiscs();
////            if ((isSetMiscs || isSetMiscs2) && (!isSetMiscs || !isSetMiscs2 || !this.miscs.equals(update_miscs_args.miscs))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(update_miscs_args update_miscs_args) {
////            if (!getClass().equals(update_miscs_args.getClass())) {
////                return getClass().getName().compareTo(update_miscs_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetMiscs()).compareTo(Boolean.valueOf(update_miscs_args.isSetMiscs()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetMiscs()) {
////                int a = C2121h.m5526a((List) this.miscs, (List) update_miscs_args.miscs);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("update_miscs_args(");
////            sb.append("miscs:");
////            if (this.miscs == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.miscs);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.miscs == null) {
////                throw new C2101g("Required field 'miscs' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class update_miscs_result implements Serializable, Cloneable, Comparable<update_miscs_result>, C2116f<update_miscs_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("update_miscs_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public BELogicException logicException;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class update_miscs_resultStandardScheme extends C2110c<update_miscs_result> {
////            private update_miscs_resultStandardScheme() {
////            }
////
////            /* synthetic */ update_miscs_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, update_miscs_result update_miscs_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_miscs_result.success = fVar.mo18513n();
////                                    update_miscs_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_miscs_result.sysException = new BESystemException();
////                                    update_miscs_result.sysException.read(fVar);
////                                    update_miscs_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_miscs_result.logicException = new BELogicException();
////                                    update_miscs_result.logicException.read(fVar);
////                                    update_miscs_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        update_miscs_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, update_miscs_result update_miscs_result) {
////                update_miscs_result.validate();
////                update_miscs_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (update_miscs_result.isSetSuccess()) {
////                    fVar.mo18496a(update_miscs_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(update_miscs_result.success);
////                }
////                if (update_miscs_result.sysException != null) {
////                    fVar.mo18496a(update_miscs_result.SYS_EXCEPTION_FIELD_DESC);
////                    update_miscs_result.sysException.write(fVar);
////                }
////                if (update_miscs_result.logicException != null) {
////                    fVar.mo18496a(update_miscs_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    update_miscs_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class update_miscs_resultStandardSchemeFactory implements C2109b {
////            private update_miscs_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ update_miscs_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_miscs_resultStandardScheme getScheme() {
////                return new update_miscs_resultStandardScheme(null);
////            }
////        }
////
////        class update_miscs_resultTupleScheme extends C2111d<update_miscs_result> {
////            private update_miscs_resultTupleScheme() {
////            }
////
////            /* synthetic */ update_miscs_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, update_miscs_result update_miscs_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (update_miscs_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (update_miscs_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (update_miscs_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (update_miscs_result.isSetSuccess()) {
////                    lVar.mo18493a(update_miscs_result.success);
////                }
////                if (update_miscs_result.isSetSysException()) {
////                    update_miscs_result.sysException.write(lVar);
////                }
////                if (update_miscs_result.isSetLogicException()) {
////                    update_miscs_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, update_miscs_result update_miscs_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    update_miscs_result.success = lVar.mo18513n();
////                    update_miscs_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    update_miscs_result.sysException = new BESystemException();
////                    update_miscs_result.sysException.read(lVar);
////                    update_miscs_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    update_miscs_result.logicException = new BELogicException();
////                    update_miscs_result.logicException.read(lVar);
////                    update_miscs_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class update_miscs_resultTupleSchemeFactory implements C2109b {
////            private update_miscs_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ update_miscs_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_miscs_resultTupleScheme getScheme() {
////                return new update_miscs_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new update_miscs_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new update_miscs_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(update_miscs_result.class, metaDataMap);
////        }
////
////        public update_miscs_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public update_miscs_result(int i, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public update_miscs_result(update_miscs_result update_miscs_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = update_miscs_result.__isset_bitfield;
////            this.success = update_miscs_result.success;
////            if (update_miscs_result.isSetSysException()) {
////                this.sysException = new BESystemException(update_miscs_result.sysException);
////            }
////            if (update_miscs_result.isSetLogicException()) {
////                this.logicException = new BELogicException(update_miscs_result.logicException);
////            }
////        }
////
////        public update_miscs_result deepCopy() {
////            return new update_miscs_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public update_miscs_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public update_miscs_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public update_miscs_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof update_miscs_result)) {
////                return equals((update_miscs_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(update_miscs_result update_miscs_result) {
////            if (update_miscs_result == null || this.success != update_miscs_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = update_miscs_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(update_miscs_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = update_miscs_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(update_miscs_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(update_miscs_result update_miscs_result) {
////            if (!getClass().equals(update_miscs_result.getClass())) {
////                return getClass().getName().compareTo(update_miscs_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(update_miscs_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, update_miscs_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(update_miscs_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) update_miscs_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(update_miscs_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) update_miscs_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("update_miscs_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class update_profile_args implements Serializable, Cloneable, Comparable<update_profile_args>, C2116f<update_profile_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b NICK_NAME_FIELD_DESC = new C2097b("nick_name", JceStruct.STRUCT_END, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("update_profile_args");
////        /* access modifiers changed from: private */
////        public static final C2097b TITLE_ID_FIELD_DESC = new C2097b("title_id", 8, 1);
////        private static final int __TITLE_ID_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public String nick_name;
////        public int title_id;
////
////        public enum _Fields implements C2124m {
////            TITLE_ID(1, "title_id"),
////            NICK_NAME(2, "nick_name");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return TITLE_ID;
////                    case 2:
////                        return NICK_NAME;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class update_profile_argsStandardScheme extends C2110c<update_profile_args> {
////            private update_profile_argsStandardScheme() {
////            }
////
////            /* synthetic */ update_profile_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, update_profile_args update_profile_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_profile_args.title_id = fVar.mo18513n();
////                                    update_profile_args.setTitle_idIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 11) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_profile_args.nick_name = fVar.mo18516q();
////                                    update_profile_args.setNick_nameIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        if (!update_profile_args.isSetTitle_id()) {
////                            throw new C2101g("Required field 'title_id' was not found in serialized data! Struct: " + toString());
////                        }
////                        update_profile_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, update_profile_args update_profile_args) {
////                update_profile_args.validate();
////                update_profile_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18496a(update_profile_args.TITLE_ID_FIELD_DESC);
////                fVar.mo18493a(update_profile_args.title_id);
////                if (update_profile_args.nick_name != null) {
////                    fVar.mo18496a(update_profile_args.NICK_NAME_FIELD_DESC);
////                    fVar.mo18495a(update_profile_args.nick_name);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class update_profile_argsStandardSchemeFactory implements C2109b {
////            private update_profile_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ update_profile_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_profile_argsStandardScheme getScheme() {
////                return new update_profile_argsStandardScheme(null);
////            }
////        }
////
////        class update_profile_argsTupleScheme extends C2111d<update_profile_args> {
////            private update_profile_argsTupleScheme() {
////            }
////
////            /* synthetic */ update_profile_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, update_profile_args update_profile_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(update_profile_args.title_id);
////                lVar.mo18495a(update_profile_args.nick_name);
////            }
////
////            public void read(C2100f fVar, update_profile_args update_profile_args) {
////                C2106l lVar = (C2106l) fVar;
////                update_profile_args.title_id = lVar.mo18513n();
////                update_profile_args.setTitle_idIsSet(true);
////                update_profile_args.nick_name = lVar.mo18516q();
////                update_profile_args.setNick_nameIsSet(true);
////            }
////        }
////
////        class update_profile_argsTupleSchemeFactory implements C2109b {
////            private update_profile_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ update_profile_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_profile_argsTupleScheme getScheme() {
////                return new update_profile_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new update_profile_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new update_profile_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.TITLE_ID, new C2091a("title_id", 1, new C2092b(8, 0)));
////            enumMap.put(_Fields.NICK_NAME, new C2091a("nick_name", 1, new C2092b(JceStruct.STRUCT_END, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(update_profile_args.class, metaDataMap);
////        }
////
////        public update_profile_args() {
////            this.__isset_bitfield = 0;
////        }
////
////        public update_profile_args(int i, String str) {
////            this();
////            this.title_id = i;
////            setTitle_idIsSet(true);
////            this.nick_name = str;
////        }
////
////        public update_profile_args(update_profile_args update_profile_args) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = update_profile_args.__isset_bitfield;
////            this.title_id = update_profile_args.title_id;
////            if (update_profile_args.isSetNick_name()) {
////                this.nick_name = update_profile_args.nick_name;
////            }
////        }
////
////        public update_profile_args deepCopy() {
////            return new update_profile_args(this);
////        }
////
////        public void clear() {
////            setTitle_idIsSet(false);
////            this.title_id = 0;
////            this.nick_name = null;
////        }
////
////        public int getTitle_id() {
////            return this.title_id;
////        }
////
////        public update_profile_args setTitle_id(int i) {
////            this.title_id = i;
////            setTitle_idIsSet(true);
////            return this;
////        }
////
////        public void unsetTitle_id() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetTitle_id() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setTitle_idIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public String getNick_name() {
////            return this.nick_name;
////        }
////
////        public update_profile_args setNick_name(String str) {
////            this.nick_name = str;
////            return this;
////        }
////
////        public void unsetNick_name() {
////            this.nick_name = null;
////        }
////
////        public boolean isSetNick_name() {
////            return this.nick_name != null;
////        }
////
////        public void setNick_nameIsSet(boolean z) {
////            if (!z) {
////                this.nick_name = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case TITLE_ID:
////                    if (obj == null) {
////                        unsetTitle_id();
////                        return;
////                    } else {
////                        setTitle_id(((Integer) obj).intValue());
////                        return;
////                    }
////                case NICK_NAME:
////                    if (obj == null) {
////                        unsetNick_name();
////                        return;
////                    } else {
////                        setNick_name((String) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case TITLE_ID:
////                    return Integer.valueOf(getTitle_id());
////                case NICK_NAME:
////                    return getNick_name();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case TITLE_ID:
////                    return isSetTitle_id();
////                case NICK_NAME:
////                    return isSetNick_name();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof update_profile_args)) {
////                return equals((update_profile_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(update_profile_args update_profile_args) {
////            if (update_profile_args == null || this.title_id != update_profile_args.title_id) {
////                return false;
////            }
////            boolean isSetNick_name = isSetNick_name();
////            boolean isSetNick_name2 = update_profile_args.isSetNick_name();
////            if ((isSetNick_name || isSetNick_name2) && (!isSetNick_name || !isSetNick_name2 || !this.nick_name.equals(update_profile_args.nick_name))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(update_profile_args update_profile_args) {
////            if (!getClass().equals(update_profile_args.getClass())) {
////                return getClass().getName().compareTo(update_profile_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetTitle_id()).compareTo(Boolean.valueOf(update_profile_args.isSetTitle_id()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetTitle_id()) {
////                int a = C2121h.m5522a(this.title_id, update_profile_args.title_id);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetNick_name()).compareTo(Boolean.valueOf(update_profile_args.isSetNick_name()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetNick_name()) {
////                int a2 = C2121h.m5525a(this.nick_name, update_profile_args.nick_name);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("update_profile_args(");
////            sb.append("title_id:");
////            sb.append(this.title_id);
////            sb.append(", ");
////            sb.append("nick_name:");
////            if (this.nick_name == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.nick_name);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.nick_name == null) {
////                throw new C2101g("Required field 'nick_name' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class update_profile_result implements Serializable, Cloneable, Comparable<update_profile_result>, C2116f<update_profile_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b LOGIC_EXCEPTION_FIELD_DESC = new C2097b("logicException", JceStruct.ZERO_TAG, 2);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("update_profile_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BELogicException logicException;
////        public BBProfile success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException"),
////            LOGIC_EXCEPTION(2, "logicException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    case 2:
////                        return LOGIC_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class update_profile_resultStandardScheme extends C2110c<update_profile_result> {
////            private update_profile_resultStandardScheme() {
////            }
////
////            /* synthetic */ update_profile_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, update_profile_result update_profile_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_profile_result.success = new BBProfile();
////                                    update_profile_result.success.read(fVar);
////                                    update_profile_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_profile_result.sysException = new BESystemException();
////                                    update_profile_result.sysException.read(fVar);
////                                    update_profile_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            case 2:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    update_profile_result.logicException = new BELogicException();
////                                    update_profile_result.logicException.read(fVar);
////                                    update_profile_result.setLogicExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        update_profile_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, update_profile_result update_profile_result) {
////                update_profile_result.validate();
////                update_profile_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (update_profile_result.success != null) {
////                    fVar.mo18496a(update_profile_result.SUCCESS_FIELD_DESC);
////                    update_profile_result.success.write(fVar);
////                }
////                if (update_profile_result.sysException != null) {
////                    fVar.mo18496a(update_profile_result.SYS_EXCEPTION_FIELD_DESC);
////                    update_profile_result.sysException.write(fVar);
////                }
////                if (update_profile_result.logicException != null) {
////                    fVar.mo18496a(update_profile_result.LOGIC_EXCEPTION_FIELD_DESC);
////                    update_profile_result.logicException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class update_profile_resultStandardSchemeFactory implements C2109b {
////            private update_profile_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ update_profile_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_profile_resultStandardScheme getScheme() {
////                return new update_profile_resultStandardScheme(null);
////            }
////        }
////
////        class update_profile_resultTupleScheme extends C2111d<update_profile_result> {
////            private update_profile_resultTupleScheme() {
////            }
////
////            /* synthetic */ update_profile_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, update_profile_result update_profile_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (update_profile_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (update_profile_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                if (update_profile_result.isSetLogicException()) {
////                    bitSet.set(2);
////                }
////                lVar.mo18527a(bitSet, 3);
////                if (update_profile_result.isSetSuccess()) {
////                    update_profile_result.success.write(lVar);
////                }
////                if (update_profile_result.isSetSysException()) {
////                    update_profile_result.sysException.write(lVar);
////                }
////                if (update_profile_result.isSetLogicException()) {
////                    update_profile_result.logicException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, update_profile_result update_profile_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(3);
////                if (b.get(0)) {
////                    update_profile_result.success = new BBProfile();
////                    update_profile_result.success.read(lVar);
////                    update_profile_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    update_profile_result.sysException = new BESystemException();
////                    update_profile_result.sysException.read(lVar);
////                    update_profile_result.setSysExceptionIsSet(true);
////                }
////                if (b.get(2)) {
////                    update_profile_result.logicException = new BELogicException();
////                    update_profile_result.logicException.read(lVar);
////                    update_profile_result.setLogicExceptionIsSet(true);
////                }
////            }
////        }
////
////        class update_profile_resultTupleSchemeFactory implements C2109b {
////            private update_profile_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ update_profile_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public update_profile_resultTupleScheme getScheme() {
////                return new update_profile_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new update_profile_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new update_profile_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBProfile.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            enumMap.put(_Fields.LOGIC_EXCEPTION, new C2091a("logicException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(update_profile_result.class, metaDataMap);
////        }
////
////        public update_profile_result() {
////        }
////
////        public update_profile_result(BBProfile bBProfile, BESystemException bESystemException, BELogicException bELogicException) {
////            this();
////            this.success = bBProfile;
////            this.sysException = bESystemException;
////            this.logicException = bELogicException;
////        }
////
////        public update_profile_result(update_profile_result update_profile_result) {
////            if (update_profile_result.isSetSuccess()) {
////                this.success = new BBProfile(update_profile_result.success);
////            }
////            if (update_profile_result.isSetSysException()) {
////                this.sysException = new BESystemException(update_profile_result.sysException);
////            }
////            if (update_profile_result.isSetLogicException()) {
////                this.logicException = new BELogicException(update_profile_result.logicException);
////            }
////        }
////
////        public update_profile_result deepCopy() {
////            return new update_profile_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////            this.logicException = null;
////        }
////
////        public BBProfile getSuccess() {
////            return this.success;
////        }
////
////        public update_profile_result setSuccess(BBProfile bBProfile) {
////            this.success = bBProfile;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public update_profile_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public BELogicException getLogicException() {
////            return this.logicException;
////        }
////
////        public update_profile_result setLogicException(BELogicException bELogicException) {
////            this.logicException = bELogicException;
////            return this;
////        }
////
////        public void unsetLogicException() {
////            this.logicException = null;
////        }
////
////        public boolean isSetLogicException() {
////            return this.logicException != null;
////        }
////
////        public void setLogicExceptionIsSet(boolean z) {
////            if (!z) {
////                this.logicException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBProfile) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                case LOGIC_EXCEPTION:
////                    if (obj == null) {
////                        unsetLogicException();
////                        return;
////                    } else {
////                        setLogicException((BELogicException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                case LOGIC_EXCEPTION:
////                    return getLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                case LOGIC_EXCEPTION:
////                    return isSetLogicException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof update_profile_result)) {
////                return equals((update_profile_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(update_profile_result update_profile_result) {
////            if (update_profile_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = update_profile_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(update_profile_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = update_profile_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(update_profile_result.sysException))) {
////                return false;
////            }
////            boolean isSetLogicException = isSetLogicException();
////            boolean isSetLogicException2 = update_profile_result.isSetLogicException();
////            if ((isSetLogicException || isSetLogicException2) && (!isSetLogicException || !isSetLogicException2 || !this.logicException.equals(update_profile_result.logicException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(update_profile_result update_profile_result) {
////            if (!getClass().equals(update_profile_result.getClass())) {
////                return getClass().getName().compareTo(update_profile_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(update_profile_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) update_profile_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(update_profile_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) update_profile_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            int compareTo3 = Boolean.valueOf(isSetLogicException()).compareTo(Boolean.valueOf(update_profile_result.isSetLogicException()));
////            if (compareTo3 != 0) {
////                return compareTo3;
////            }
////            if (isSetLogicException()) {
////                int a3 = C2121h.m5524a((Comparable) this.logicException, (Comparable) update_profile_result.logicException);
////                if (a3 != 0) {
////                    return a3;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("update_profile_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(", ");
////            sb.append("logicException:");
////            if (this.logicException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.logicException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class user_basic_info_args implements Serializable, Cloneable, Comparable<user_basic_info_args>, C2116f<user_basic_info_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("user_basic_info_args");
////        public static final Map<_Fields, C2091a> metaDataMap = Collections.unmodifiableMap(new EnumMap(_Fields.class));
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////
////        public enum _Fields implements C2124m {
////            ;
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                return null;
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class user_basic_info_argsStandardScheme extends C2110c<user_basic_info_args> {
////            private user_basic_info_argsStandardScheme() {
////            }
////
////            /* synthetic */ user_basic_info_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, user_basic_info_args user_basic_info_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        C2103i.m5498a(fVar, g.f5835b);
////                    } else {
////                        fVar.mo18505f();
////                        user_basic_info_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, user_basic_info_args user_basic_info_args) {
////                user_basic_info_args.validate();
////                user_basic_info_args.STRUCT_DESC;
////                fVar.mo18490a();
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class user_basic_info_argsStandardSchemeFactory implements C2109b {
////            private user_basic_info_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ user_basic_info_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public user_basic_info_argsStandardScheme getScheme() {
////                return new user_basic_info_argsStandardScheme(null);
////            }
////        }
////
////        class user_basic_info_argsTupleScheme extends C2111d<user_basic_info_args> {
////            private user_basic_info_argsTupleScheme() {
////            }
////
////            /* synthetic */ user_basic_info_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, user_basic_info_args user_basic_info_args) {
////            }
////
////            public void read(C2100f fVar, user_basic_info_args user_basic_info_args) {
////            }
////        }
////
////        class user_basic_info_argsTupleSchemeFactory implements C2109b {
////            private user_basic_info_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ user_basic_info_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public user_basic_info_argsTupleScheme getScheme() {
////                return new user_basic_info_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new user_basic_info_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new user_basic_info_argsTupleSchemeFactory(null));
////            C2091a.m5430a(user_basic_info_args.class, metaDataMap);
////        }
////
////        public user_basic_info_args() {
////        }
////
////        public user_basic_info_args(user_basic_info_args user_basic_info_args) {
////        }
////
////        public user_basic_info_args deepCopy() {
////            return new user_basic_info_args(this);
////        }
////
////        public void clear() {
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            int[] iArr = C12931.f2528xc546c6ff;
////            _fields.ordinal();
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            int[] iArr = C12931.f2528xc546c6ff;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            int[] iArr = C12931.f2528xc546c6ff;
////            _fields.ordinal();
////            throw new IllegalStateException();
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof user_basic_info_args)) {
////                return equals((user_basic_info_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(user_basic_info_args user_basic_info_args) {
////            if (user_basic_info_args == null) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(user_basic_info_args user_basic_info_args) {
////            if (!getClass().equals(user_basic_info_args.getClass())) {
////                return getClass().getName().compareTo(user_basic_info_args.getClass().getName());
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("user_basic_info_args(");
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class user_basic_info_result implements Serializable, Cloneable, Comparable<user_basic_info_result>, C2116f<user_basic_info_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("user_basic_info_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", JceStruct.ZERO_TAG, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public BBBasicInfo success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class user_basic_info_resultStandardScheme extends C2110c<user_basic_info_result> {
////            private user_basic_info_resultStandardScheme() {
////            }
////
////            /* synthetic */ user_basic_info_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, user_basic_info_result user_basic_info_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    user_basic_info_result.success = new BBBasicInfo();
////                                    user_basic_info_result.success.read(fVar);
////                                    user_basic_info_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    user_basic_info_result.sysException = new BESystemException();
////                                    user_basic_info_result.sysException.read(fVar);
////                                    user_basic_info_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        user_basic_info_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, user_basic_info_result user_basic_info_result) {
////                user_basic_info_result.validate();
////                user_basic_info_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (user_basic_info_result.success != null) {
////                    fVar.mo18496a(user_basic_info_result.SUCCESS_FIELD_DESC);
////                    user_basic_info_result.success.write(fVar);
////                }
////                if (user_basic_info_result.sysException != null) {
////                    fVar.mo18496a(user_basic_info_result.SYS_EXCEPTION_FIELD_DESC);
////                    user_basic_info_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class user_basic_info_resultStandardSchemeFactory implements C2109b {
////            private user_basic_info_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ user_basic_info_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public user_basic_info_resultStandardScheme getScheme() {
////                return new user_basic_info_resultStandardScheme(null);
////            }
////        }
////
////        class user_basic_info_resultTupleScheme extends C2111d<user_basic_info_result> {
////            private user_basic_info_resultTupleScheme() {
////            }
////
////            /* synthetic */ user_basic_info_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, user_basic_info_result user_basic_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (user_basic_info_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (user_basic_info_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (user_basic_info_result.isSetSuccess()) {
////                    user_basic_info_result.success.write(lVar);
////                }
////                if (user_basic_info_result.isSetSysException()) {
////                    user_basic_info_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, user_basic_info_result user_basic_info_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    user_basic_info_result.success = new BBBasicInfo();
////                    user_basic_info_result.success.read(lVar);
////                    user_basic_info_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    user_basic_info_result.sysException = new BESystemException();
////                    user_basic_info_result.sysException.read(lVar);
////                    user_basic_info_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class user_basic_info_resultTupleSchemeFactory implements C2109b {
////            private user_basic_info_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ user_basic_info_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public user_basic_info_resultTupleScheme getScheme() {
////                return new user_basic_info_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new user_basic_info_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new user_basic_info_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2095e(BBBasicInfo.class)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(user_basic_info_result.class, metaDataMap);
////        }
////
////        public user_basic_info_result() {
////        }
////
////        public user_basic_info_result(BBBasicInfo bBBasicInfo, BESystemException bESystemException) {
////            this();
////            this.success = bBBasicInfo;
////            this.sysException = bESystemException;
////        }
////
////        public user_basic_info_result(user_basic_info_result user_basic_info_result) {
////            if (user_basic_info_result.isSetSuccess()) {
////                this.success = new BBBasicInfo(user_basic_info_result.success);
////            }
////            if (user_basic_info_result.isSetSysException()) {
////                this.sysException = new BESystemException(user_basic_info_result.sysException);
////            }
////        }
////
////        public user_basic_info_result deepCopy() {
////            return new user_basic_info_result(this);
////        }
////
////        public void clear() {
////            this.success = null;
////            this.sysException = null;
////        }
////
////        public BBBasicInfo getSuccess() {
////            return this.success;
////        }
////
////        public user_basic_info_result setSuccess(BBBasicInfo bBBasicInfo) {
////            this.success = bBBasicInfo;
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.success = null;
////        }
////
////        public boolean isSetSuccess() {
////            return this.success != null;
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            if (!z) {
////                this.success = null;
////            }
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public user_basic_info_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess((BBBasicInfo) obj);
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return getSuccess();
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof user_basic_info_result)) {
////                return equals((user_basic_info_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(user_basic_info_result user_basic_info_result) {
////            if (user_basic_info_result == null) {
////                return false;
////            }
////            boolean isSetSuccess = isSetSuccess();
////            boolean isSetSuccess2 = user_basic_info_result.isSetSuccess();
////            if ((isSetSuccess || isSetSuccess2) && (!isSetSuccess || !isSetSuccess2 || !this.success.equals(user_basic_info_result.success))) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = user_basic_info_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(user_basic_info_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(user_basic_info_result user_basic_info_result) {
////            if (!getClass().equals(user_basic_info_result.getClass())) {
////                return getClass().getName().compareTo(user_basic_info_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(user_basic_info_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5524a((Comparable) this.success, (Comparable) user_basic_info_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(user_basic_info_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) user_basic_info_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("user_basic_info_result(");
////            sb.append("success:");
////            if (this.success == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.success);
////            }
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.success != null) {
////                this.success.validate();
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class user_operation_stat_args implements Serializable, Cloneable, Comparable<user_operation_stat_args>, C2116f<user_operation_stat_args, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2097b OPERATION_LOGS_FIELD_DESC = new C2097b("operation_logs", 15, 1);
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("user_operation_stat_args");
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        public List<BBOperationStatLog> operation_logs;
////
////        public enum _Fields implements C2124m {
////            OPERATION_LOGS(1, "operation_logs");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 1:
////                        return OPERATION_LOGS;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class user_operation_stat_argsStandardScheme extends C2110c<user_operation_stat_args> {
////            private user_operation_stat_argsStandardScheme() {
////            }
////
////            /* synthetic */ user_operation_stat_argsStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, user_operation_stat_args user_operation_stat_args) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 1:
////                                if (g.f5835b != 15) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    C2098c i = fVar.mo18508i();
////                                    user_operation_stat_args.operation_logs = new ArrayList(i.f5838b);
////                                    for (int i2 = 0; i2 < i.f5838b; i2++) {
////                                        BBOperationStatLog bBOperationStatLog = new BBOperationStatLog();
////                                        bBOperationStatLog.read(fVar);
////                                        user_operation_stat_args.operation_logs.add(bBOperationStatLog);
////                                    }
////                                    user_operation_stat_args.setOperation_logsIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        user_operation_stat_args.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, user_operation_stat_args user_operation_stat_args) {
////                user_operation_stat_args.validate();
////                user_operation_stat_args.STRUCT_DESC;
////                fVar.mo18490a();
////                if (user_operation_stat_args.operation_logs != null) {
////                    fVar.mo18496a(user_operation_stat_args.OPERATION_LOGS_FIELD_DESC);
////                    fVar.mo18497a(new C2098c(JceStruct.ZERO_TAG, user_operation_stat_args.operation_logs.size()));
////                    for (BBOperationStatLog write : user_operation_stat_args.operation_logs) {
////                        write.write(fVar);
////                    }
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class user_operation_stat_argsStandardSchemeFactory implements C2109b {
////            private user_operation_stat_argsStandardSchemeFactory() {
////            }
////
////            /* synthetic */ user_operation_stat_argsStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public user_operation_stat_argsStandardScheme getScheme() {
////                return new user_operation_stat_argsStandardScheme(null);
////            }
////        }
////
////        class user_operation_stat_argsTupleScheme extends C2111d<user_operation_stat_args> {
////            private user_operation_stat_argsTupleScheme() {
////            }
////
////            /* synthetic */ user_operation_stat_argsTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, user_operation_stat_args user_operation_stat_args) {
////                C2106l lVar = (C2106l) fVar;
////                lVar.mo18493a(user_operation_stat_args.operation_logs.size());
////                for (BBOperationStatLog write : user_operation_stat_args.operation_logs) {
////                    write.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, user_operation_stat_args user_operation_stat_args) {
////                C2106l lVar = (C2106l) fVar;
////                C2098c cVar = new C2098c(JceStruct.ZERO_TAG, lVar.mo18513n());
////                user_operation_stat_args.operation_logs = new ArrayList(cVar.f5838b);
////                for (int i = 0; i < cVar.f5838b; i++) {
////                    BBOperationStatLog bBOperationStatLog = new BBOperationStatLog();
////                    bBOperationStatLog.read(lVar);
////                    user_operation_stat_args.operation_logs.add(bBOperationStatLog);
////                }
////                user_operation_stat_args.setOperation_logsIsSet(true);
////            }
////        }
////
////        class user_operation_stat_argsTupleSchemeFactory implements C2109b {
////            private user_operation_stat_argsTupleSchemeFactory() {
////            }
////
////            /* synthetic */ user_operation_stat_argsTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public user_operation_stat_argsTupleScheme getScheme() {
////                return new user_operation_stat_argsTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new user_operation_stat_argsStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new user_operation_stat_argsTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.OPERATION_LOGS, new C2091a("operation_logs", 1, new C2093c(new C2095e(BBOperationStatLog.class))));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(user_operation_stat_args.class, metaDataMap);
////        }
////
////        public user_operation_stat_args() {
////        }
////
////        public user_operation_stat_args(List<BBOperationStatLog> list) {
////            this();
////            this.operation_logs = list;
////        }
////
////        public user_operation_stat_args(user_operation_stat_args user_operation_stat_args) {
////            if (user_operation_stat_args.isSetOperation_logs()) {
////                ArrayList arrayList = new ArrayList(user_operation_stat_args.operation_logs.size());
////                for (BBOperationStatLog bBOperationStatLog : user_operation_stat_args.operation_logs) {
////                    arrayList.add(new BBOperationStatLog(bBOperationStatLog));
////                }
////                this.operation_logs = arrayList;
////            }
////        }
////
////        public user_operation_stat_args deepCopy() {
////            return new user_operation_stat_args(this);
////        }
////
////        public void clear() {
////            this.operation_logs = null;
////        }
////
////        public int getOperation_logsSize() {
////            if (this.operation_logs == null) {
////                return 0;
////            }
////            return this.operation_logs.size();
////        }
////
////        public Iterator<BBOperationStatLog> getOperation_logsIterator() {
////            if (this.operation_logs == null) {
////                return null;
////            }
////            return this.operation_logs.iterator();
////        }
////
////        public void addToOperation_logs(BBOperationStatLog bBOperationStatLog) {
////            if (this.operation_logs == null) {
////                this.operation_logs = new ArrayList();
////            }
////            this.operation_logs.add(bBOperationStatLog);
////        }
////
////        public List<BBOperationStatLog> getOperation_logs() {
////            return this.operation_logs;
////        }
////
////        public user_operation_stat_args setOperation_logs(List<BBOperationStatLog> list) {
////            this.operation_logs = list;
////            return this;
////        }
////
////        public void unsetOperation_logs() {
////            this.operation_logs = null;
////        }
////
////        public boolean isSetOperation_logs() {
////            return this.operation_logs != null;
////        }
////
////        public void setOperation_logsIsSet(boolean z) {
////            if (!z) {
////                this.operation_logs = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case OPERATION_LOGS:
////                    if (obj == null) {
////                        unsetOperation_logs();
////                        return;
////                    } else {
////                        setOperation_logs((List) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case OPERATION_LOGS:
////                    return getOperation_logs();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case OPERATION_LOGS:
////                    return isSetOperation_logs();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof user_operation_stat_args)) {
////                return equals((user_operation_stat_args) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(user_operation_stat_args user_operation_stat_args) {
////            if (user_operation_stat_args == null) {
////                return false;
////            }
////            boolean isSetOperation_logs = isSetOperation_logs();
////            boolean isSetOperation_logs2 = user_operation_stat_args.isSetOperation_logs();
////            if ((isSetOperation_logs || isSetOperation_logs2) && (!isSetOperation_logs || !isSetOperation_logs2 || !this.operation_logs.equals(user_operation_stat_args.operation_logs))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(user_operation_stat_args user_operation_stat_args) {
////            if (!getClass().equals(user_operation_stat_args.getClass())) {
////                return getClass().getName().compareTo(user_operation_stat_args.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetOperation_logs()).compareTo(Boolean.valueOf(user_operation_stat_args.isSetOperation_logs()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetOperation_logs()) {
////                int a = C2121h.m5526a((List) this.operation_logs, (List) user_operation_stat_args.operation_logs);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("user_operation_stat_args(");
////            sb.append("operation_logs:");
////            if (this.operation_logs == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.operation_logs);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////            if (this.operation_logs == null) {
////                throw new C2101g("Required field 'operation_logs' was not present! Struct: " + toString());
////            }
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
////
////    public class user_operation_stat_result implements Serializable, Cloneable, Comparable<user_operation_stat_result>, C2116f<user_operation_stat_result, _Fields> {
////        /* access modifiers changed from: private */
////        public static final C2105k STRUCT_DESC = new C2105k("user_operation_stat_result");
////        /* access modifiers changed from: private */
////        public static final C2097b SUCCESS_FIELD_DESC = new C2097b("success", 8, 0);
////        /* access modifiers changed from: private */
////        public static final C2097b SYS_EXCEPTION_FIELD_DESC = new C2097b("sysException", JceStruct.ZERO_TAG, 1);
////        private static final int __SUCCESS_ISSET_ID = 0;
////        public static final Map<_Fields, C2091a> metaDataMap;
////        private static final Map<Class<? extends C2108a>, C2109b> schemes;
////        private byte __isset_bitfield;
////        public int success;
////        public BESystemException sysException;
////
////        public enum _Fields implements C2124m {
////            SUCCESS(0, "success"),
////            SYS_EXCEPTION(1, "sysException");
////
////            private static final Map<String, _Fields> byName = null;
////            private final String _fieldName;
////            private final short _thriftId;
////
////            static {
////                byName = new HashMap();
////                Iterator it = EnumSet.allOf(_Fields.class).iterator();
////                while (it.hasNext()) {
////                    _Fields _fields = (_Fields) it.next();
////                    byName.put(_fields.getFieldName(), _fields);
////                }
////            }
////
////            public static _Fields findByThriftId(int i) {
////                switch (i) {
////                    case 0:
////                        return SUCCESS;
////                    case 1:
////                        return SYS_EXCEPTION;
////                    default:
////                        return null;
////                }
////            }
////
////            public static _Fields findByThriftIdOrThrow(int i) {
////                _Fields findByThriftId = findByThriftId(i);
////                if (findByThriftId != null) {
////                    return findByThriftId;
////                }
////                throw new IllegalArgumentException("Field " + i + " doesn't exist!");
////            }
////
////            public static _Fields findByName(String str) {
////                return (_Fields) byName.get(str);
////            }
////
////            private _Fields(short s, String str) {
////                this._thriftId = s;
////                this._fieldName = str;
////            }
////
////            public final short getThriftFieldId() {
////                return this._thriftId;
////            }
////
////            public final String getFieldName() {
////                return this._fieldName;
////            }
////        }
////
////        class user_operation_stat_resultStandardScheme extends C2110c<user_operation_stat_result> {
////            private user_operation_stat_resultStandardScheme() {
////            }
////
////            /* synthetic */ user_operation_stat_resultStandardScheme(C12931 r1) {
////                this();
////            }
////
////            public void read(C2100f fVar, user_operation_stat_result user_operation_stat_result) {
////                fVar.mo18504e();
////                while (true) {
////                    C2097b g = fVar.mo18506g();
////                    if (g.f5835b != 0) {
////                        switch (g.f5836c) {
////                            case 0:
////                                if (g.f5835b != 8) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    user_operation_stat_result.success = fVar.mo18513n();
////                                    user_operation_stat_result.setSuccessIsSet(true);
////                                    break;
////                                }
////                            case 1:
////                                if (g.f5835b != 12) {
////                                    C2103i.m5498a(fVar, g.f5835b);
////                                    break;
////                                } else {
////                                    user_operation_stat_result.sysException = new BESystemException();
////                                    user_operation_stat_result.sysException.read(fVar);
////                                    user_operation_stat_result.setSysExceptionIsSet(true);
////                                    break;
////                                }
////                            default:
////                                C2103i.m5498a(fVar, g.f5835b);
////                                break;
////                        }
////                    } else {
////                        fVar.mo18505f();
////                        user_operation_stat_result.validate();
////                        return;
////                    }
////                }
////            }
////
////            public void write(C2100f fVar, user_operation_stat_result user_operation_stat_result) {
////                user_operation_stat_result.validate();
////                user_operation_stat_result.STRUCT_DESC;
////                fVar.mo18490a();
////                if (user_operation_stat_result.isSetSuccess()) {
////                    fVar.mo18496a(user_operation_stat_result.SUCCESS_FIELD_DESC);
////                    fVar.mo18493a(user_operation_stat_result.success);
////                }
////                if (user_operation_stat_result.sysException != null) {
////                    fVar.mo18496a(user_operation_stat_result.SYS_EXCEPTION_FIELD_DESC);
////                    user_operation_stat_result.sysException.write(fVar);
////                }
////                fVar.mo18502c();
////                fVar.mo18501b();
////            }
////        }
////
////        class user_operation_stat_resultStandardSchemeFactory implements C2109b {
////            private user_operation_stat_resultStandardSchemeFactory() {
////            }
////
////            /* synthetic */ user_operation_stat_resultStandardSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public user_operation_stat_resultStandardScheme getScheme() {
////                return new user_operation_stat_resultStandardScheme(null);
////            }
////        }
////
////        class user_operation_stat_resultTupleScheme extends C2111d<user_operation_stat_result> {
////            private user_operation_stat_resultTupleScheme() {
////            }
////
////            /* synthetic */ user_operation_stat_resultTupleScheme(C12931 r1) {
////                this();
////            }
////
////            public void write(C2100f fVar, user_operation_stat_result user_operation_stat_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet bitSet = new BitSet();
////                if (user_operation_stat_result.isSetSuccess()) {
////                    bitSet.set(0);
////                }
////                if (user_operation_stat_result.isSetSysException()) {
////                    bitSet.set(1);
////                }
////                lVar.mo18527a(bitSet, 2);
////                if (user_operation_stat_result.isSetSuccess()) {
////                    lVar.mo18493a(user_operation_stat_result.success);
////                }
////                if (user_operation_stat_result.isSetSysException()) {
////                    user_operation_stat_result.sysException.write(lVar);
////                }
////            }
////
////            public void read(C2100f fVar, user_operation_stat_result user_operation_stat_result) {
////                C2106l lVar = (C2106l) fVar;
////                BitSet b = lVar.mo18528b(2);
////                if (b.get(0)) {
////                    user_operation_stat_result.success = lVar.mo18513n();
////                    user_operation_stat_result.setSuccessIsSet(true);
////                }
////                if (b.get(1)) {
////                    user_operation_stat_result.sysException = new BESystemException();
////                    user_operation_stat_result.sysException.read(lVar);
////                    user_operation_stat_result.setSysExceptionIsSet(true);
////                }
////            }
////        }
////
////        class user_operation_stat_resultTupleSchemeFactory implements C2109b {
////            private user_operation_stat_resultTupleSchemeFactory() {
////            }
////
////            /* synthetic */ user_operation_stat_resultTupleSchemeFactory(C12931 r1) {
////                this();
////            }
////
////            public user_operation_stat_resultTupleScheme getScheme() {
////                return new user_operation_stat_resultTupleScheme(null);
////            }
////        }
////
////        static {
////            HashMap hashMap = new HashMap();
////            schemes = hashMap;
////            hashMap.put(C2110c.class, new user_operation_stat_resultStandardSchemeFactory(null));
////            schemes.put(C2111d.class, new user_operation_stat_resultTupleSchemeFactory(null));
////            EnumMap enumMap = new EnumMap(_Fields.class);
////            enumMap.put(_Fields.SUCCESS, new C2091a("success", 3, new C2092b(8, 0)));
////            enumMap.put(_Fields.SYS_EXCEPTION, new C2091a("sysException", 3, new C2092b(JceStruct.ZERO_TAG, 0)));
////            metaDataMap = Collections.unmodifiableMap(enumMap);
////            C2091a.m5430a(user_operation_stat_result.class, metaDataMap);
////        }
////
////        public user_operation_stat_result() {
////            this.__isset_bitfield = 0;
////        }
////
////        public user_operation_stat_result(int i, BESystemException bESystemException) {
////            this();
////            this.success = i;
////            setSuccessIsSet(true);
////            this.sysException = bESystemException;
////        }
////
////        public user_operation_stat_result(user_operation_stat_result user_operation_stat_result) {
////            this.__isset_bitfield = 0;
////            this.__isset_bitfield = user_operation_stat_result.__isset_bitfield;
////            this.success = user_operation_stat_result.success;
////            if (user_operation_stat_result.isSetSysException()) {
////                this.sysException = new BESystemException(user_operation_stat_result.sysException);
////            }
////        }
////
////        public user_operation_stat_result deepCopy() {
////            return new user_operation_stat_result(this);
////        }
////
////        public void clear() {
////            setSuccessIsSet(false);
////            this.success = 0;
////            this.sysException = null;
////        }
////
////        public int getSuccess() {
////            return this.success;
////        }
////
////        public user_operation_stat_result setSuccess(int i) {
////            this.success = i;
////            setSuccessIsSet(true);
////            return this;
////        }
////
////        public void unsetSuccess() {
////            this.__isset_bitfield = (byte) (this.__isset_bitfield & -2);
////        }
////
////        public boolean isSetSuccess() {
////            return C2090b.m5429a(this.__isset_bitfield, 0);
////        }
////
////        public void setSuccessIsSet(boolean z) {
////            this.__isset_bitfield = (byte) C2090b.m5428a(this.__isset_bitfield, 0, z);
////        }
////
////        public BESystemException getSysException() {
////            return this.sysException;
////        }
////
////        public user_operation_stat_result setSysException(BESystemException bESystemException) {
////            this.sysException = bESystemException;
////            return this;
////        }
////
////        public void unsetSysException() {
////            this.sysException = null;
////        }
////
////        public boolean isSetSysException() {
////            return this.sysException != null;
////        }
////
////        public void setSysExceptionIsSet(boolean z) {
////            if (!z) {
////                this.sysException = null;
////            }
////        }
////
////        public void setFieldValue(_Fields _fields, Object obj) {
////            switch (_fields) {
////                case SUCCESS:
////                    if (obj == null) {
////                        unsetSuccess();
////                        return;
////                    } else {
////                        setSuccess(((Integer) obj).intValue());
////                        return;
////                    }
////                case SYS_EXCEPTION:
////                    if (obj == null) {
////                        unsetSysException();
////                        return;
////                    } else {
////                        setSysException((BESystemException) obj);
////                        return;
////                    }
////                default:
////                    return;
////            }
////        }
////
////        public Object getFieldValue(_Fields _fields) {
////            switch (_fields) {
////                case SUCCESS:
////                    return Integer.valueOf(getSuccess());
////                case SYS_EXCEPTION:
////                    return getSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean isSet(_Fields _fields) {
////            if (_fields == null) {
////                throw new IllegalArgumentException();
////            }
////            switch (_fields) {
////                case SUCCESS:
////                    return isSetSuccess();
////                case SYS_EXCEPTION:
////                    return isSetSysException();
////                default:
////                    throw new IllegalStateException();
////            }
////        }
////
////        public boolean equals(Object obj) {
////            if (obj != null && (obj instanceof user_operation_stat_result)) {
////                return equals((user_operation_stat_result) obj);
////            }
////            return false;
////        }
////
////        public boolean equals(user_operation_stat_result user_operation_stat_result) {
////            if (user_operation_stat_result == null || this.success != user_operation_stat_result.success) {
////                return false;
////            }
////            boolean isSetSysException = isSetSysException();
////            boolean isSetSysException2 = user_operation_stat_result.isSetSysException();
////            if ((isSetSysException || isSetSysException2) && (!isSetSysException || !isSetSysException2 || !this.sysException.equals(user_operation_stat_result.sysException))) {
////                return false;
////            }
////            return true;
////        }
////
////        public int hashCode() {
////            return 0;
////        }
////
////        public int compareTo(user_operation_stat_result user_operation_stat_result) {
////            if (!getClass().equals(user_operation_stat_result.getClass())) {
////                return getClass().getName().compareTo(user_operation_stat_result.getClass().getName());
////            }
////            int compareTo = Boolean.valueOf(isSetSuccess()).compareTo(Boolean.valueOf(user_operation_stat_result.isSetSuccess()));
////            if (compareTo != 0) {
////                return compareTo;
////            }
////            if (isSetSuccess()) {
////                int a = C2121h.m5522a(this.success, user_operation_stat_result.success);
////                if (a != 0) {
////                    return a;
////                }
////            }
////            int compareTo2 = Boolean.valueOf(isSetSysException()).compareTo(Boolean.valueOf(user_operation_stat_result.isSetSysException()));
////            if (compareTo2 != 0) {
////                return compareTo2;
////            }
////            if (isSetSysException()) {
////                int a2 = C2121h.m5524a((Comparable) this.sysException, (Comparable) user_operation_stat_result.sysException);
////                if (a2 != 0) {
////                    return a2;
////                }
////            }
////            return 0;
////        }
////
////        public _Fields fieldForId(int i) {
////            return _Fields.findByThriftId(i);
////        }
////
////        public void read(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().read(fVar, this);
////        }
////
////        public void write(C2100f fVar) {
////            ((C2109b) schemes.get(fVar.mo18525t())).getScheme().write(fVar, this);
////        }
////
////        public String toString() {
////            StringBuilder sb = new StringBuilder("user_operation_stat_result(");
////            sb.append("success:");
////            sb.append(this.success);
////            sb.append(", ");
////            sb.append("sysException:");
////            if (this.sysException == null) {
////                sb.append("null");
////            } else {
////                sb.append(this.sysException);
////            }
////            sb.append(")");
////            return sb.toString();
////        }
////
////        public void validate() {
////        }
////
////        private void writeObject(ObjectOutputStream objectOutputStream) {
////            try {
////                write(new C2096a(new C2117b((OutputStream) objectOutputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////
////        private void readObject(ObjectInputStream objectInputStream) {
////            try {
////                this.__isset_bitfield = 0;
////                read(new C2096a(new C2117b((InputStream) objectInputStream), 0));
////            } catch (C2123l e) {
////                throw new IOException(e);
////            }
////        }
////    }
//}
